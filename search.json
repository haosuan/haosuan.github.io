[{"title":"使用 git clone 克隆项目到非空目录","url":"/git/clone-in-an-not-empty-directory/","content":"<p>在开发过程中，偶尔需要克隆一个项目到非空目录，这时 git 会报错：</p>\n<blockquote>\n<p>fatal: destination path ‘.’ already exists and is not an empty directory.</p>\n</blockquote>\n<p>提示你目标目录是一个非空目录，解决办法也很简单，进入非空目录执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 克隆目标</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> --no-checkout https://github.com/username/repository.git repository</span><br><span class=\"line\"><span class=\"comment\"># 移动 .git 目录到非空目录</span></span><br><span class=\"line\">$ mv repository/.git .</span><br><span class=\"line\"><span class=\"comment\"># 删除克隆的目录</span></span><br><span class=\"line\">$ rm -rf repository</span><br><span class=\"line\"><span class=\"comment\"># 恢复文件</span></span><br><span class=\"line\">$ git reset --hard HEAD</span><br></pre></td></tr></table></figure>\n\n","categories":["Git"]},{"title":"宝塔面板使用 Composer 踩坑笔记","url":"/composer/bt/","content":"<h1 id=\"程序环境\"><a href=\"#程序环境\" class=\"headerlink\" title=\"程序环境\"></a>程序环境</h1><p>日期：2019-12-06</p>\n<p>系统：CentOS linux 8.0.1905</p>\n<p>PHP：7.3</p>\n<h1 id=\"移除禁用函数\"><a href=\"#移除禁用函数\" class=\"headerlink\" title=\"移除禁用函数\"></a>移除禁用函数</h1><p>需要移除的函数有两个：</p>\n<ul>\n<li>proc_open</li>\n<li>putenv</li>\n</ul>\n<h1 id=\"Unzip-with-unzip-command-failed-falling-back-to-ZipArchive-class\"><a href=\"#Unzip-with-unzip-command-failed-falling-back-to-ZipArchive-class\" class=\"headerlink\" title=\"Unzip with unzip command failed, falling back to ZipArchive class\"></a>Unzip with unzip command failed, falling back to ZipArchive class</h1><blockquote>\n<p>释义：无法解压文件夹，回滚到压缩文档。</p>\n</blockquote>\n<p>这个错误主要是因为缺少zip扩展导致的，通过下面放大可解决：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 zip 相关扩展</span></span><br><span class=\"line\">$ yum install zip ubzip</span><br></pre></td></tr></table></figure>\n\n<p>因为使用的是宝塔提供的 php7.3 版本，没有整合 zip 模块，切扩展安装面板中也没有 zip 的选项，但因为 zip 扩展本身是包含在软件包里的，所以手动安装一下即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> /www/server/php/73/src/ext/zip/</span><br><span class=\"line\">$ /www/server/php/73/bin/phpize</span><br><span class=\"line\">$ ./configure --with-php-config=/www/server/php/73/bin/php-config</span><br><span class=\"line\">$ make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n<p>安装成功后需要清理重载 php：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sed -i <span class=\"string\">'/extension = zip.so/d'</span> /www/server/php/73/etc/php.ini</span><br></pre></td></tr></table></figure>\n\n<p>然后通过面板重启以下 php 即可。</p>\n","categories":["Composer"]},{"title":"Docker 国内镜像","url":"/docker/mirrors/","content":"<h2 id=\"切换国内镜像\"><a href=\"#切换国内镜像\" class=\"headerlink\" title=\"切换国内镜像\"></a>切换国内镜像</h2><p><em>/etc/docker/daemon.json</em></p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"registry-mirrors\"</span> : [</span><br><span class=\"line\">    <span class=\"string\">\"http://ovfftd6p.mirror.aliyuncs.com\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"http://registry.docker-cn.com\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"http://docker.mirrors.ustc.edu.cn\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"http://hub-mirror.c.163.com\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">\"insecure-registries\"</span> : [</span><br><span class=\"line\">    <span class=\"string\">\"registry.docker-cn.com\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"docker.mirrors.ustc.edu.cn\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">\"debug\"</span> : <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"experimental\"</span> : <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"linux镜像下载慢\"><a href=\"#linux镜像下载慢\" class=\"headerlink\" title=\"linux镜像下载慢\"></a>linux镜像下载慢</h2><p>出现和 <code>dl-cdn.alpinelinux.org</code> 相关的问题时，添加下面语句：</p>\n<p><em>Dockerfile</em></p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> sed -i <span class=\"string\">'s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g'</span> /etc/apk/repositories</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在这条上面添加</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk add --update nodejs nodejs-npm</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"git依赖下载慢\"><a href=\"#git依赖下载慢\" class=\"headerlink\" title=\"git依赖下载慢\"></a>git依赖下载慢</h2><p>出现和 git 相关的问题时，添加下面语句：</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在这条下面添加</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk add git</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> git config --global http.https://github.com.proxy 127.0.0.1:1080</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> git config --global https.https://github.com.proxy 127.0.0.1:1080</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h2><ul>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMzNjA4NTAvYXJ0aWNsZS9kZXRhaWxzLzkwNjAyMTQ5\" title=\"https://blog.csdn.net/u013360850/article/details/90602149\">Go 应用构建 Docker 镜像 - 解决依赖下载慢、失败问题<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29uZ21hLmNvbS9uZXdzL3R4dGxpc3RfaTI5MTIzdi5odG1s\" title=\"https://www.songma.com/news/txtlist_i29123v.html\">alpine linux v3.6-使用国内镜像源进行加速<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n</ul>\n","categories":["Docker"]},{"title":"深入浅出 Docker 读书笔记","url":"/docker/docker-deep-dive-reading-notes/","content":"<h1 id=\"服务检测\"><a href=\"#服务检测\" class=\"headerlink\" title=\"服务检测\"></a>服务检测</h1><h2 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay -S docker docker-compose <span class=\"comment\"># 安装</span></span><br><span class=\"line\">$ docker version <span class=\"comment\"># 检查版本</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>同时出现 Client 和 Server 时表示服务已启动。</p>\n</blockquote>\n<h2 id=\"Docker-daemon\"><a href=\"#Docker-daemon\" class=\"headerlink\" title=\"Docker daemon\"></a>Docker daemon</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 根据不同的操作系统使用不同的命令</span></span><br><span class=\"line\">$ service docker status</span><br><span class=\"line\">$ systemctl is-active docker</span><br><span class=\"line\">$ systemctl daemon-reload <span class=\"comment\"># 重启 daemon</span></span><br><span class=\"line\">$ systemctl restart docker <span class=\"comment\"># 重启 docker</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"加入本地用户组\"><a href=\"#加入本地用户组\" class=\"headerlink\" title=\"加入本地用户组\"></a>加入本地用户组</h1><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建 docker 用户组 并将当前用户加入到其中</span></span><br><span class=\"line\">$ sudo groupadd docker</span><br><span class=\"line\">$ sudo usermod -aG docker <span class=\"variable\">$&#123;USER&#125;</span></span><br><span class=\"line\">$ sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"镜像加速\"><a href=\"#镜像加速\" class=\"headerlink\" title=\"镜像加速\"></a>镜像加速</h1><p><em>/etc/docker/daemon.json</em></p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"registry-mirrors\"</span>: [<span class=\"string\">\"https://registry.docker-cn.com\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"容器\"><a href=\"#容器\" class=\"headerlink\" title=\"容器\"></a>容器</h1><h2 id=\"创建容器\"><a href=\"#创建容器\" class=\"headerlink\" title=\"创建容器\"></a>创建容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container run --name container_name -it ubuntu:latest /bin/bash</span><br></pre></td></tr></table></figure>\n\n<p>参数解析：</p>\n<ul>\n<li><code>--name container_name</code>：命名容器，在其他操作中，可以使用 <code>container_name</code> 代替 <code>container_id</code>；</li>\n<li><code>-p 80:8080</code>：将主机的80端口映射到容器8080端口；</li>\n<li><code>-it</code>：将 shell 切换到容器终端；</li>\n<li><code>-d</code>：让应用以守护线程的方式在后台运行；</li>\n<li><code>ubuntu:latest</code>：指定镜像；</li>\n<li><code>/bin/bash</code>：运行容器中的程序；</li>\n</ul>\n<h2 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container start container_id</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"容器列表\"><a href=\"#容器列表\" class=\"headerlink\" title=\"容器列表\"></a>容器列表</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container ls -a <span class=\"comment\"># -a 包含已停止的容器</span></span><br><span class=\"line\">$ docker ps -a</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"后台运行\"><a href=\"#后台运行\" class=\"headerlink\" title=\"后台运行\"></a>后台运行</h2><p>可以使用 <code>Ctrl+PQ</code> 来退出容器并且保持容器运行。</p>\n<h2 id=\"连接容器\"><a href=\"#连接容器\" class=\"headerlink\" title=\"连接容器\"></a>连接容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 需要容器已启动</span></span><br><span class=\"line\">$ docker container <span class=\"built_in\">exec</span> -it container_id bash</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"暂停容器\"><a href=\"#暂停容器\" class=\"headerlink\" title=\"暂停容器\"></a>暂停容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container pause container_id</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container stop container_id</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果容器10秒钟之内没有得到清理并停止运行，将会自动强制停止。</p>\n</blockquote>\n<p><strong>停止所有容器</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container stop $(docker container ls -aq) -f <span class=\"comment\"># -f 强制执行</span></span><br><span class=\"line\">$ docker stop $(docker ps -aq)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除容器\"><a href=\"#删除容器\" class=\"headerlink\" title=\"删除容器\"></a>删除容器</h2><p>删除前先停止容器是比较『优雅』的做法，这样会给进程机会来有序的处理停止前要做的事。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container rm container_id -f <span class=\"comment\"># -f 强制执行 即使未停止的容器也删除</span></span><br><span class=\"line\">$ docker rm container_id</span><br></pre></td></tr></table></figure>\n\n<p><strong>删除全部容器</strong></p>\n<p>暴力删除所有容器，<strong>一定不能</strong>在生产环境或运行重要容器的系统上执行。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container rm $(docker container ls -aq) -f <span class=\"comment\"># -f 强制执行 即使未停止的容器也删除</span></span><br><span class=\"line\">$ docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure>\n\n<p><strong>删除所有停止的容器</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container prune -f</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自我修复\"><a href=\"#自我修复\" class=\"headerlink\" title=\"自我修复\"></a>自我修复</h2><p>在容器运行时配置好重启策略是推荐的方式，它可以在指定事件或错误后重启来完成自我修复。</p>\n<p>重启策略应用于每个容器，可以作为参数传入 <code>docker container run</code> 中，也可以在 Compose 文件中声明。 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container run ... --restart always</span><br></pre></td></tr></table></figure>\n\n<p>容器支持的重启策略有：</p>\n<ul>\n<li>always：除非容器被明确停止，否则会一直尝试重启处于停止状态的容器。这个策略有一个很有意思的地方是，当 <code>daemon</code> 重启时，停止的容器也会被启动；</li>\n<li>unless-stopped：与 <code>always</code> 最大的区别在于不会在 <code>daemon</code> 重启时启动；</li>\n<li>on-failed：会在退出容器且返回值不是 <code>0</code> 的时候重启，也会随 <code>daemon</code> 启动。</li>\n</ul>\n<h2 id=\"启动运行\"><a href=\"#启动运行\" class=\"headerlink\" title=\"启动运行\"></a>启动运行</h2><p>可查看到容器被使用时将运行的应用列表。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker container inspect container_id</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"镜像\"><a href=\"#镜像\" class=\"headerlink\" title=\"镜像\"></a>镜像</h1><h2 id=\"搜索镜像\"><a href=\"#搜索镜像\" class=\"headerlink\" title=\"搜索镜像\"></a>搜索镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker search ubuntu</span><br></pre></td></tr></table></figure>\n\n\n<p>搜索时还可通过指定参数，返回需要的镜像</p>\n<ul>\n<li><p>显示官方镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker search ubuntu --filter=<span class=\"string\">\"is-official=true\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>显示自动创建的镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker search ubuntu --filter=<span class=\"string\">\"is-automated=true\"</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>默认情况下返回 25 行数据，可指定行数：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker seatch ubuntu --<span class=\"built_in\">limit</span>=100</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker pull ubuntu</span><br><span class=\"line\">$ docker pull ubuntu:16.04</span><br><span class=\"line\">$ docker image pull ubuntu:latest</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在不使用镜像 tag 时，会自动拉取 tag 为 latest 的镜像，但这<strong>不代表</strong> latest 镜像是最新版本。</p>\n</blockquote>\n<p><strong>非官方仓库/非官方镜像仓库服务</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker pull microsoft/dotnet:latest <span class=\"comment\"># 非官方仓库</span></span><br><span class=\"line\">$ docker pull gcr.io/microsoft/dotnet:latest <span class=\"comment\"># 非官方镜像仓库服务</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>拉取仓库中的全部镜像</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取 microsoft/dotnet 的全部 tag</span></span><br><span class=\"line\">$ docker pull -a microsoft/dotnet</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果拉取的仓库同时包含多个平台，可能会失败。</p>\n</blockquote>\n<h2 id=\"删除镜像\"><a href=\"#删除镜像\" class=\"headerlink\" title=\"删除镜像\"></a>删除镜像</h2><p>删除镜像会删除当前主机上该镜像及相关的镜像层，对应包含镜像层数据的目录也会被删除。</p>\n<p>但是如果某个镜像层被多个镜像共享，那只有当以来该镜像层的镜像都被删除后，该镜像层才会被删除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker image rm ubuntu:latest</span><br></pre></td></tr></table></figure>\n\n<p><strong>删除全部镜像</strong></p>\n<p>可以通过在 <code>docker image rm</code> 后传入当前系统的全部镜像 ID 来删除所有镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker image rm $(docker images -q) -f <span class=\"comment\"># -q 获取镜像id</span></span><br><span class=\"line\">$ docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure>\n\n<p><strong>删除所有不使用的镜像</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker image prune -f -a <span class=\"comment\"># --force --all</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"镜像摘要\"><a href=\"#镜像摘要\" class=\"headerlink\" title=\"镜像摘要\"></a>镜像摘要</h2><p>摘要是镜像内容的一个散列值，镜像内容的改变会造成散列值的改变。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看本地镜像摘要</span></span><br><span class=\"line\">$ docker images --digests</span><br></pre></td></tr></table></figure>\n\n<p>使用摘要可准确拉取镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker pull ubuntu:sha256............</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>但是目前镜像摘要只能先通过标签方式拉取镜像到本地再获取，然后自己维护镜像的摘要列表。</p>\n</blockquote>\n<h2 id=\"本地列表\"><a href=\"#本地列表\" class=\"headerlink\" title=\"本地列表\"></a>本地列表</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker image ls</span><br><span class=\"line\">$ docker images</span><br></pre></td></tr></table></figure>\n\n<p><strong>格式化输出</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker images --format <span class=\"string\">\"&#123;&#123;.Size&#125;&#125;\"</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker images --format <span class=\"string\">\"&#123;&#123;.Repository&#125;&#125;:&#123;&#123;.Tag&#125;&#125;:&#123;&#123;.Size&#125;&#125;\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"悬虚镜像\"><a href=\"#悬虚镜像\" class=\"headerlink\" title=\"悬虚镜像\"></a>悬虚镜像</h2><p>没有添加 tag 的镜像被称为悬虚镜像『dangling』，通常时因为构建镜像时使用了已经存在的 tag，docker 会移除旧版本镜像上的 tag。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker images --filter dangling=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>移除所有悬虚镜像</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker images prune</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"镜像过滤\"><a href=\"#镜像过滤\" class=\"headerlink\" title=\"镜像过滤\"></a>镜像过滤</h2><p>Docker 镜像过滤用法参照上面悬虚镜像，目前支持的 filter 参数有：</p>\n<ul>\n<li><p>dangling：可指定 true 或 false，返回悬虚镜像或非悬虚镜像；</p>\n</li>\n<li><p>is-official：可指定 true 或 false，返回官方镜像或非官方镜像；</p>\n</li>\n<li><p>is-automated：可指定 true 或 false，返回自动创建镜像或非自动创建镜像；</p>\n</li>\n<li><p>before：需要镜像名或 ID 作为参数，返回在之前创建的全部镜像；</p>\n</li>\n<li><p>since：与 before 类似，返回指定镜像之后创建的镜像；</p>\n</li>\n<li><p>label：根据标注的名称或值对镜像过滤，<code>docker images</code> 不会输出标注内容；</p>\n</li>\n<li><p>reference：其他过滤：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取所有 tag 为 latest 的镜像</span></span><br><span class=\"line\">$ docker images --filter=reference=<span class=\"string\">\"*:latest\"</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"镜像分层\"><a href=\"#镜像分层\" class=\"headerlink\" title=\"镜像分层\"></a>镜像分层</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker image inspect ubuntu</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"构建记录\"><a href=\"#构建记录\" class=\"headerlink\" title=\"构建记录\"></a>构建记录</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker <span class=\"built_in\">history</span> ubuntu</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"启动运行-1\"><a href=\"#启动运行-1\" class=\"headerlink\" title=\"启动运行\"></a>启动运行</h2><p>查看镜像被使用时将运行的应用列表。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker image inspect ubuntu</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"应用的容器化\"><a href=\"#应用的容器化\" class=\"headerlink\" title=\"应用的容器化\"></a>应用的容器化</h1><p>Docker 的核心思想即是将应用整合到容器中。</p>\n<h2 id=\"一般步骤\"><a href=\"#一般步骤\" class=\"headerlink\" title=\"一般步骤\"></a>一般步骤</h2><p>完整的应用容器化主要分为：</p>\n<ul>\n<li>编写应用代码；</li>\n<li>创建 Dockerfile，包含应用描述、依赖及如何运行；</li>\n<li>执行 <code>docker image build</code>；</li>\n<li>等待构建；</li>\n</ul>\n<p>一旦应用容器化完成，就能以镜像的形式交付并以容器的方式运行。</p>\n<h2 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h2><p>Dockerfile 文件包含两个用途：描述当前应用和指导 Docker 完成应用的容器化，它能实现开发和部署之间<strong>无缝切换</strong>。</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Linux x64</span></span><br><span class=\"line\"><span class=\"comment\"># 新建镜像层 每个 Dockerfile 文件的第一行都是 FROM 指令，其作用在于指定基础镜像层</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> alpine</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># LABEL 指定了当前镜像的维护者</span></span><br><span class=\"line\"><span class=\"comment\"># 这个标签是键值对，在一个镜像中可以通过增加 LABEL 的方式来为镜像添加自定义元数据</span></span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=<span class=\"string\">\"nigelpoulton@hotmail.com\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建镜像层 安装 Node 和 NPM</span></span><br><span class=\"line\"><span class=\"comment\"># 安装命令根据实际情况会有不同</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk add --update nodejs nodejs-npm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建镜像层 将应用相关文件从构建上下文复制到镜像中</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . /src</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定工作目录</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /src</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建镜像层 执行命令</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定端口 会作为元数据保存</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">8080</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定镜像入口程序 会作为元数据保存</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">\"node\"</span>, <span class=\"string\">\"./app.js\"</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>Dockerfile 文件中有几点是需要注意的：</p>\n<ul>\n<li>注释以 <code>#</code> 开头；</li>\n<li>除了注释以外的每一行都是一条指令；</li>\n<li>指令不区分大小写，但通常会写成大写来增加可读性；</li>\n<li>指令会按照顺序执行；</li>\n<li>FROM 指令 通常是第一条指令；</li>\n<li>使用 <code>FROM</code> 指令引用官方基础镜像并选择较小的镜像文件通常能规避一些且在问题；</li>\n<li>不是所有指令都会新建镜像层，有些指令仅会新增或修改元数据；</li>\n<li>关于如何判断指令是否会新增镜像层的基本原则是看指令是否会向镜像中增添新的文件或程序；</li>\n<li>可以通过 <code>$ docker image history web:latest</code> 来查看镜像构建过程中所执行的指令，结果中 SIZE 不为 0 的就是新建了镜像层；</li>\n</ul>\n<h2 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker image build -t web:latest .</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这里的点不能省略 表示 Docker 在构建时，使用当前目录作为构建上下文。</p>\n</blockquote>\n<p>参数解析：</p>\n<ul>\n<li><code>-t</code>：tag 为镜像打标签；</li>\n<li><code>-f</code>：指定 Dockerfile 的路径和名称，可以指定位于任意路径下的任意名称的 Dockerfile；</li>\n<li>构建上下文：指应用文件存放的位置，可以是本地 Docker 主机上的一个目录或远程 Git 仓库；</li>\n</ul>\n<p>构建完成后可通过 <code>$ docker image inspect web:latest</code> 来确认构建的镜像是否正确。</p>\n<h2 id=\"多阶段构建\"><a href=\"#多阶段构建\" class=\"headerlink\" title=\"多阶段构建\"></a>多阶段构建</h2><blockquote>\n<p>对 Docker 镜像 来说，过大的体积带来的弊端不限于慢、难用、脆弱和易受攻击。</p>\n</blockquote>\n<p>鉴于此， Docker 镜像应该尽可能的小，对生产环境来说，目标是缩小到仅包含运行的<strong>必需</strong>内容就行。但问题在于生成体积较小的镜像并非易事。</p>\n<p>开发者通常不会在构建完成后进行清理，当使用 RUN 执行一个命令时，可能会拉取一些构建工具，这些工具会留存在镜像中移交至生产环境，这是很不合适的。</p>\n<p>有多种方式来改善这个问题，常见的是采用建造者模式（Builder Pattern）和多阶段构建（Multi-Stage Build），但无论采取哪种方式，通常都需要额外的培训，并且会增加构建的复杂度。</p>\n<p><strong>建造者模式</strong></p>\n<blockquote>\n<p>建造者模式是一种比较复杂的方式。</p>\n</blockquote>\n<p>建造者模式至少需要两个 Dockerfile，一个用于开发一个用于生产。</p>\n<ul>\n<li>首先需要编写 Dockerfile.dev，其基于一个大型基础镜像（Base Image），拉取所需的构建工具，并构建应用；</li>\n<li>然后基于 Dockerfile.dev 构建镜像，并使用这个镜像穿件容器；</li>\n<li>再编写 Dockerfile.prod ，其基于一个较小的基础镜像开始构建，并从刚才创建的容器中将应用程序相关的部分复制过来。</li>\n</ul>\n<p>这种方式是可行的，但是整个过程需要编写额外的脚本才能串联起来，比较复杂。</p>\n<p><strong>多阶段构建</strong></p>\n<blockquote>\n<p>多阶段构建是一种更好的方式！其可以在不增加复杂性的情况下优化构建过程。</p>\n</blockquote>\n<p>多阶段构建是随 Docker 17.05 新增的一个特性，用于构建精简的生产环境镜像。</p>\n<p>其在构建时使用一个 Dockerfile，其中包含多个 FROM 指令，每个 FROM 指令都是一个新的构建阶段（Build Stage），且可以方便的复制之前阶段的构件。</p>\n<p><em>Dockerfile</em></p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 阶段0 storefront</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:latest AS storefront</span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /usr/src/atsea/app/react-app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> react-app .</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm run build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 阶段1 appserver</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> maven:latest AS appserver</span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /usr/src/atsea</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> pom.xml .</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> mvn -B -f pom.xml -s /usr/share/maven/ref/settings-docker.xml dependency:resolve</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . .</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> mvn -B -s /usr/share/maven/ref/settings-docker.xml package -DskipTests</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 阶段2 production</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> java:<span class=\"number\">8</span>-jdk-alpine production</span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> adduser -Dh /home/gordon gordon</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /static</span></span><br><span class=\"line\"><span class=\"comment\"># 重点在这里 复制了前面阶段打包的文件</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=storefront /usr/src/atsea/app/react-app/build/ .</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"comment\"># 重点在这里</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=appserver /usr/src/atsea/target/AtSea-0.0.1-SNAPSHOT.jar .</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">\"java\"</span>, <span class=\"string\">\"-jar\"</span>, <span class=\"string\">\"/app/AtSea-0.0.1-SNAPSHOT.jar\"</span>]</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">\"--spring.profiles.active=postgres\"</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>其中每个 FROM 指令构成一个单独的构建阶段，各个阶段在内部从 0 开始编号，可通过 <code>AS</code> 为每个阶段其别名。</p>\n<p>重点在于 <code>COPY --from ....</code> 这条指令，它从之前的构建阶段的镜像中<strong>仅复制生产环境相关的应用代码</strong>，而不会复制生产环境不需要的构件。</p>\n<p>还有就是多阶段构建仅用到一个 Dockerfile 文件，且构建命令不需要增加额外的参数。</p>\n<h2 id=\"最佳实践\"><a href=\"#最佳实践\" class=\"headerlink\" title=\"最佳实践\"></a>最佳实践</h2><blockquote>\n<p>部分最佳实践。</p>\n</blockquote>\n<p><strong>连接命令</strong></p>\n<p>Dockerfile 中不同的写法就会对镜像体积产生显著影响，常见的像是每一个 RUN 指令都会新增一个镜像层，因此通过使用 <code>&amp;&amp;</code> 来连接多个命令以及使用 <code>\\</code> 换行的方法将多个命令包含在一个 RUN 指令中，通常时一种值得提倡的方式；</p>\n<p><strong>利用构建缓存</strong></p>\n<p>Docker 在构建的过程中会充分利用缓存机制，如果重复构建同一内容，第二词构建几乎可以立即完成，因为第一次的构建的内容会被缓存下来，并被后续的构建过程复用。</p>\n<ul>\n<li>每执行一条指令，Docker 都会检查缓存中是否已经有与该指令对应的镜像层；</li>\n<li>如果有，则为缓存命中（Cache Hit），会直接使用这个镜像层；</li>\n<li>如果无，则为缓存未名中（Cache Miss），Docker 会基于该指令构建新的镜像层；</li>\n<li>缓存命中可以显著加快构建过程；</li>\n</ul>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 引入基础镜像，如果这个镜像存在，则跳到下一条指令，不存在则从 Docker Hub 拉取</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> alpine</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查缓存中是否存在基于同一基础镜像，且执行了同样指令的镜像层</span></span><br><span class=\"line\"><span class=\"comment\"># 找到 则跳到下一条指令，并链接到已经存在的镜像层</span></span><br><span class=\"line\"><span class=\"comment\"># 没找到 则设置缓存无效并构建该镜像层</span></span><br><span class=\"line\"><span class=\"comment\"># 这里『设置缓存无效』作用于本次构建的后续部分，接下来的指令将全部执行而不会再尝试查找构建缓存</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk add --update nodejs nodejs-npm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果上一条指令缓存命中，则会继续查找是否有一个缓存也执行了这条命令</span></span><br><span class=\"line\"><span class=\"comment\"># COPY 和 ADD 指令会检查复制到镜像中的内容自上一次构建之后是否发生了变化，Docker 会计算每一个被复制文件的 Checksum 值，并一一比对，如果不匹配，则也会设置缓存无效</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . /src</span></span><br><span class=\"line\"></span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n\n<p>所以，在编写 Dockerfile 文件时要<strong>特别注意</strong>的一点是：尽量将易于发生变化的指令置于 Dockerfile 文件的后方执行，这可以将缓存未名中的情况放到构建的后期，从而减少构建所需时间。</p>\n<p>如果需要忽略缓存，可以在构建时加入 <code>--nocache=true</code> 参数来强制忽略缓存的使用。</p>\n<p><strong>使用 no-install-recommends</strong></p>\n<p>构建 Linux 镜像时，如果使用 APT 包管理器，则应该在执行 <code>apt get install</code> 命令时增加 <code>no-install-recommends</code>，这可以确保仅安装核心依赖，不安装推荐和建议的包，能显著减少不必要的包的下载量；</p>\n<p><strong>不要安装 MSI 包</strong></p>\n<p>构建 Windows 镜像时，要避免使用 MSI 包管理器，其对空间的利用率不高，会大幅度增加镜像体积；</p>\n<p><strong>合并镜像</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker image build --squash <span class=\"comment\"># 通过添加 --squash 来创建一个合并的镜像</span></span><br></pre></td></tr></table></figure>\n\n<p>合并镜像其实并非一个最佳实践，其可以说是利弊参半。总体来说，Docker 会遵循正常的方式构建镜像，但之后会增加一个额外的步骤，将所有内容合并到一个镜像层中。</p>\n<p>优点：当镜像层数太多时，合并是一个不错的优化方式，比如当创建一个新的基础镜像，以便基于它来构建其他镜像的时候，这个基础镜像就最好被合并为一层。</p>\n<p>缺点：合并的镜像无法共享镜像层，会导致空间的低效利用，且 push 和 pull 的镜像体积更大。</p>\n<h2 id=\"Docker-Hub\"><a href=\"#Docker-Hub\" class=\"headerlink\" title=\"Docker Hub\"></a>Docker Hub</h2><p>使用 <code>$ docker image push</code> 时，会将 Docker Hub 作为默认推送地址，但推送前还需要：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 登录</span></span><br><span class=\"line\">$ docker login</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 为镜像添加一个额外的标签，不会覆盖已经存在的标签</span></span><br><span class=\"line\"><span class=\"comment\"># 格式为 docker image tab current_tag new_tag</span></span><br><span class=\"line\">$ docker image tag web:latest account/web:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 推送到 Docker Hub</span></span><br><span class=\"line\">$ docker image push account/web:latest</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Docker-Compose\"><a href=\"#Docker-Compose\" class=\"headerlink\" title=\"Docker Compose\"></a>Docker Compose</h1><blockquote>\n<p>部署和管理繁多的服务是困难的，这一点也正式 Docker Compose 要解决的问题。</p>\n</blockquote>\n<p>Docker Compose 能够在 Docker 节点上，以单引擎模式（Simgle-Engine Mode）进行多容器的部署和管理。</p>\n<p>Docker Compose 不会通过脚本和冗长的命令来组织应用组建，而是通过声明式的配置文件描述整个应用，从而使用一条命令完成部署。</p>\n<p>部署成功后，还可以通过一系列简单的命令实现对其完整声明周期的管理，甚至配置文件还可以置于版本控制系统中进行存储和管理。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay -S docker-compose</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Compose-文件\"><a href=\"#Compose-文件\" class=\"headerlink\" title=\"Compose 文件\"></a>Compose 文件</h2><p>Docker Compose 使用 YAML 文件来定义多服务的应用，也可以使用 JSON。</p>\n<p>默认使用 <em>docker-compose.yml</em> 作为文件名，也可以使用 <code>-f</code> 参数指定具体文件。</p>\n<h1 id=\"Docker-Swarm\"><a href=\"#Docker-Swarm\" class=\"headerlink\" title=\"Docker Swarm\"></a>Docker Swarm</h1><p>Docker Swarm 能够以 Swarm 模式对 Docker 节点上的多容器应用进行部署和管理</p>\n","categories":["Docker"]},{"title":"Laravel 向公共模板传值","url":"/laravel/view-composer/","content":"<p>在引用组建时，时常需要重复的传值。Laravel 提供了多种向公共模板传值的方法解决这个痛点。</p>\n<p><em>app/Providers/AppServiceProvider.php</em></p>\n<h2 id=\"全局传值\"><a href=\"#全局传值\" class=\"headerlink\" title=\"全局传值\"></a>全局传值</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    view()-&gt;share(<span class=\"string\">'today'</span>, \\Carbon\\Carbon::today());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"指定模板传值\"><a href=\"#指定模板传值\" class=\"headerlink\" title=\"指定模板传值\"></a>指定模板传值</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    view()-&gt;composer([<span class=\"string\">'article.index'</span>], <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($view)</span> </span>&#123;</span><br><span class=\"line\">        $view-&gt;with(<span class=\"string\">'today'</span>, \\Carbon\\Carbon::today());</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":["Laravel"]},{"title":"Vue.js 视频学习笔记","url":"/vue/notes/","content":"","categories":["JavaScript"]},{"title":"延伸阅读","url":"/laravel/reading/","content":"<h2 id=\"课程问答\"><a href=\"#课程问答\" class=\"headerlink\" title=\"课程问答\"></a>课程问答</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmt1LmNvbS9sYXJhdmVsL3QvMjE2NzA=\" title=\"https://learnku.com/laravel/t/21670\">create () 和 save () 方法的底层原理是什么？<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Laravel"]},{"title":"数据库是否应该使用外键","url":"/programing/whether-the-database-should-use-foreign-key/","content":"<h2 id=\"先说结论\"><a href=\"#先说结论\" class=\"headerlink\" title=\"先说结论\"></a>先说结论</h2><p>能不用就不用，把操作交给应用层处理。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h2><p>以下内容来自<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2hhZG93ZG9vci9wLzkwOTczNjEuaHRtbA==\" title=\"https://www.cnblogs.com/shadowdoor/p/9097361.html\">shadowdoor<i class=\"fa fa-external-link\"></i></span></p>\n<h3 id=\"使用外键\"><a href=\"#使用外键\" class=\"headerlink\" title=\"使用外键\"></a>使用外键</h3><p>优点</p>\n<ul>\n<li>实现表与关联表之间的数据一致性。</li>\n<li>可以迅速的建立一个可靠性非常高的数据库结构，而不用让应用程序层去做过多的检查。</li>\n<li>可以提高系统鲁棒性、健壮性。</li>\n<li>可以实现开发人员和数据库设计人员的分工。</li>\n</ul>\n<p>缺点</p>\n<ul>\n<li>数据库需要维护外键的内部管理。</li>\n<li>外键等于把数据的一致性事务实现，全部交给数据库服务器完成。</li>\n<li>有了外键，当做一些涉及外键字段的增，删，更新操作之后，需要触发相关操作去检查，而不得不消耗资源。</li>\n<li>外键还会因为需要请求对其他表内部加锁而容易出现死锁情况。</li>\n<li>容易出现数据库I/O的瓶颈。</li>\n</ul>\n<h3 id=\"不使用外键\"><a href=\"#不使用外键\" class=\"headerlink\" title=\"不使用外键\"></a>不使用外键</h3><p>优点</p>\n<ul>\n<li>减少了数据库表与表之间各种关联的复杂性。</li>\n<li>牺牲应用服务器资源，换取数据库服务器的性能。</li>\n<li>将主动权把控在自己手里。</li>\n<li>去掉外键相当于优化数据库性能。</li>\n</ul>\n<p>缺点</p>\n<ul>\n<li>所有外键的约束，需要自己在逻辑层自己实现。</li>\n<li>会出现数据错误覆写，错误数据进库的情况。</li>\n<li>消耗了服务器的性能。</li>\n<li>业务层里夹带持久层特性，耦合。</li>\n</ul>\n<h2 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzE5NjAwMDgx\" title=\"https://www.zhihu.com/question/19600081\">大家设计数据库时使用外键吗？<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Programing"]},{"title":"单一父栏目的无限级栏目模型设计","url":"/laravel/single-parent-unlimited-categories/","content":"<h2 id=\"模型设计\"><a href=\"#模型设计\" class=\"headerlink\" title=\"模型设计\"></a>模型设计</h2><p><em>database/migrations/…_create_categories_table.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">up</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Schema::create(<span class=\"string\">'categories'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(Blueprint $table)</span> </span>&#123;</span><br><span class=\"line\">        $table-&gt;bigIncrements(<span class=\"string\">'id'</span>);</span><br><span class=\"line\">        $table-&gt;string(<span class=\"string\">'name'</span>)-&gt;comment(<span class=\"string\">'名称'</span>);</span><br><span class=\"line\">        $table-&gt;unsignedBigInteger(<span class=\"string\">'parent_id'</span>)-&gt;nullable()-&gt;comment(<span class=\"string\">'父栏目'</span>);</span><br><span class=\"line\">        $table-&gt;foreign(<span class=\"string\">'parent_id'</span>)-&gt;references(<span class=\"string\">'id'</span>)-&gt;on(<span class=\"string\">'categories'</span>)-&gt;onDelete(<span class=\"string\">'cascade'</span>);</span><br><span class=\"line\">        $table-&gt;boolean(<span class=\"string\">'is_directory'</span>)-&gt;comment(<span class=\"string\">'是否拥有子级栏目'</span>);</span><br><span class=\"line\">        $table-&gt;unsignedBigInteger(<span class=\"string\">'level'</span>)-&gt;comment(<span class=\"string\">'当前栏目级别'</span>);</span><br><span class=\"line\">        $table-&gt;string(<span class=\"string\">'path'</span>)-&gt;comment(<span class=\"string\">'该栏目所有父级id'</span>);</span><br><span class=\"line\">        $table-&gt;timestamps();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p><em>Category.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Models</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Database</span>\\<span class=\"title\">Eloquent</span>\\<span class=\"title\">Model</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Category</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $fillable = [<span class=\"string\">'name'</span>, <span class=\"string\">'is_directory'</span>, <span class=\"string\">'level'</span>, <span class=\"string\">'path'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $casts = [</span><br><span class=\"line\">        <span class=\"string\">'is_directory'</span> =&gt; <span class=\"string\">'boolean'</span>,</span><br><span class=\"line\">    ];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">parent</span>::boot();</span><br><span class=\"line\">        <span class=\"comment\">// 监听 Category 的创建事件，用于初始化 path 和 level 字段值</span></span><br><span class=\"line\">        <span class=\"keyword\">static</span>::creating(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(Category $category)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果创建的是一个根类目</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (is_null($category-&gt;parent_id)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 将层级设为 0</span></span><br><span class=\"line\">                $category-&gt;level = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"comment\">// 将 path 设为 -</span></span><br><span class=\"line\">                $category-&gt;path  = <span class=\"string\">'-'</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 将层级设为父类目的层级 + 1</span></span><br><span class=\"line\">                $category-&gt;level = $category-&gt;parent-&gt;level + <span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"comment\">// 将 path 值设为父类目的 path 追加父类目 ID 以及最后跟上一个 - 分隔符</span></span><br><span class=\"line\">                $category-&gt;path  = $category-&gt;parent-&gt;path.$category-&gt;parent_id.<span class=\"string\">'-'</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parent</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;belongsTo(Category::class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">children</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;hasMany(Category::class, <span class=\"string\">'parent_id'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">products</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;hasMany(Product::class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 定一个一个访问器，获取所有祖先类目的 ID 值</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getPathIdsAttribute</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// trim($str, '-') 将字符串两端的 - 符号去除</span></span><br><span class=\"line\">        <span class=\"comment\">// explode() 将字符串以 - 为分隔切割为数组</span></span><br><span class=\"line\">        <span class=\"comment\">// 最后 array_filter 将数组中的空值移除</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array_filter(explode(<span class=\"string\">'-'</span>, trim(<span class=\"keyword\">$this</span>-&gt;path, <span class=\"string\">'-'</span>)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 定义一个访问器，获取所有祖先类目并按层级排序</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getAncestorsAttribute</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Category::query()</span><br><span class=\"line\">            <span class=\"comment\">// 使用上面的访问器获取所有祖先类目 ID</span></span><br><span class=\"line\">            -&gt;whereIn(<span class=\"string\">'id'</span>, <span class=\"keyword\">$this</span>-&gt;path_ids)</span><br><span class=\"line\">            <span class=\"comment\">// 按层级排序</span></span><br><span class=\"line\">            -&gt;orderBy(<span class=\"string\">'level'</span>)</span><br><span class=\"line\">            -&gt;get();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 定义一个访问器，获取以 - 为分隔的所有祖先类目名称以及当前类目的名称</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullNameAttribute</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;ancestors  <span class=\"comment\">// 获取所有祖先类目</span></span><br><span class=\"line\">                    -&gt;pluck(<span class=\"string\">'name'</span>) <span class=\"comment\">// 取出所有祖先类目的 name 字段作为一个数组</span></span><br><span class=\"line\">                    -&gt;push(<span class=\"keyword\">$this</span>-&gt;name) <span class=\"comment\">// 将当前类目的 name 字段值加到数组的末尾</span></span><br><span class=\"line\">                    -&gt;implode(<span class=\"string\">' - '</span>); <span class=\"comment\">// 用 - 符号将数组的值组装成一个字符串</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>需要分级的模型添加字段及关联关系</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">up</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Schema::table(<span class=\"string\">'products'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(Blueprint $table)</span> </span>&#123;</span><br><span class=\"line\">        $table-&gt;unsignedBigInteger(<span class=\"string\">'category_id'</span>)-&gt;nullable()-&gt;after(<span class=\"string\">'id'</span>);</span><br><span class=\"line\">        $table-&gt;foreign(<span class=\"string\">'category_id'</span>)-&gt;references(<span class=\"string\">'id'</span>)-&gt;on(<span class=\"string\">'categories'</span>)-&gt;onDelete(<span class=\"string\">'set null'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">down</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Schema::table(<span class=\"string\">'products'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(Blueprint $table)</span> </span>&#123;</span><br><span class=\"line\">        $table-&gt;dropForeign([<span class=\"string\">'category_id'</span>]);</span><br><span class=\"line\">        $table-&gt;dropColumn(<span class=\"string\">'category_id'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">category</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;belongsTo(Category::class);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行迁移</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan migrate</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据填充\"><a href=\"#数据填充\" class=\"headerlink\" title=\"数据填充\"></a>数据填充</h2><p><em>database/seeds/CategoriesSeeder.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">App</span>\\<span class=\"title\">Models</span>\\<span class=\"title\">Category</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Database</span>\\<span class=\"title\">Seeder</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CategoriesSeeder</span> <span class=\"keyword\">extends</span> <span class=\"title\">Seeder</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $categories = [</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">'name'</span>     =&gt; <span class=\"string\">'手机配件'</span>,</span><br><span class=\"line\">                <span class=\"string\">'children'</span> =&gt; [</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'手机壳'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'贴膜'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'存储卡'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'数据线'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'充电器'</span>],</span><br><span class=\"line\">                    [</span><br><span class=\"line\">                        <span class=\"string\">'name'</span>     =&gt; <span class=\"string\">'耳机'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'children'</span> =&gt; [</span><br><span class=\"line\">                            [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'有线耳机'</span>],</span><br><span class=\"line\">                            [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'蓝牙耳机'</span>],</span><br><span class=\"line\">                        ],</span><br><span class=\"line\">                    ],</span><br><span class=\"line\">                ],</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">'name'</span>     =&gt; <span class=\"string\">'电脑配件'</span>,</span><br><span class=\"line\">                <span class=\"string\">'children'</span> =&gt; [</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'显示器'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'显卡'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'内存'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'CPU'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'主板'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'硬盘'</span>],</span><br><span class=\"line\">                ],</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">'name'</span>     =&gt; <span class=\"string\">'电脑整机'</span>,</span><br><span class=\"line\">                <span class=\"string\">'children'</span> =&gt; [</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'笔记本'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'台式机'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'平板电脑'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'一体机'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'服务器'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'工作站'</span>],</span><br><span class=\"line\">                ],</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">'name'</span>     =&gt; <span class=\"string\">'手机通讯'</span>,</span><br><span class=\"line\">                <span class=\"string\">'children'</span> =&gt; [</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'智能机'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'老人机'</span>],</span><br><span class=\"line\">                    [<span class=\"string\">'name'</span> =&gt; <span class=\"string\">'对讲机'</span>],</span><br><span class=\"line\">                ],</span><br><span class=\"line\">            ],</span><br><span class=\"line\">        ];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> ($categories <span class=\"keyword\">as</span> $data) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;createCategory($data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createCategory</span><span class=\"params\">($data, $parent = null)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建一个新的类目对象</span></span><br><span class=\"line\">        $category = <span class=\"keyword\">new</span> Category([<span class=\"string\">'name'</span> =&gt; $data[<span class=\"string\">'name'</span>]]);</span><br><span class=\"line\">        <span class=\"comment\">// 如果有 children 字段则代表这是一个父类目</span></span><br><span class=\"line\">        $category-&gt;is_directory = <span class=\"keyword\">isset</span>($data[<span class=\"string\">'children'</span>]);</span><br><span class=\"line\">        <span class=\"comment\">// 如果有传入 $parent 参数，代表有父类目</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!is_null($parent)) &#123;</span><br><span class=\"line\">            $category-&gt;parent()-&gt;associate($parent);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//  保存到数据库</span></span><br><span class=\"line\">        $category-&gt;save();</span><br><span class=\"line\">        <span class=\"comment\">// 如果有 children 字段并且 children 字段是一个数组</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($data[<span class=\"string\">'children'</span>]) &amp;&amp; is_array($data[<span class=\"string\">'children'</span>])) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 遍历 children 字段</span></span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> ($data[<span class=\"string\">'children'</span>] <span class=\"keyword\">as</span> $child) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 递归调用 createCategory 方法，第二个参数即为刚刚创建的类目</span></span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;createCategory($child, $category);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行填充</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan db:seed --class=CategoriesSeeder</span><br></pre></td></tr></table></figure>\n\n","categories":["Laravel"]},{"title":"Laravel 多对多关系实操记录","url":"/laravel/belongs-to-many/","content":"<blockquote>\n<p>背景：日程表 Schedule 和用户表 User，一个日程可以有多个参与用户 attendee，一个用户可以有多个日程。</p>\n</blockquote>\n<h2 id=\"创建中间表\"><a href=\"#创建中间表\" class=\"headerlink\" title=\"创建中间表\"></a>创建中间表</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan make:migration create_schedules_attendees_table --create=schedules_attendees</span><br></pre></td></tr></table></figure>\n\n<p><em>database/migrations/…_create_schedules_attendees_table.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">up</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Schema::create(<span class=\"string\">'schedules_attendees'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(Blueprint $table)</span> </span>&#123;</span><br><span class=\"line\">        $table-&gt;bigIncrements(<span class=\"string\">'id'</span>);</span><br><span class=\"line\">        $table-&gt;unsignedBigInteger(<span class=\"string\">'user_id'</span>);</span><br><span class=\"line\">        $table-&gt;unsignedBigInteger(<span class=\"string\">'schedule_id'</span>);</span><br><span class=\"line\">        $table-&gt;timestamps();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan migrate</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"注册关联\"><a href=\"#注册关联\" class=\"headerlink\" title=\"注册关联\"></a>注册关联</h2><p><em>app/Models/Schedule.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">attendees</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;belongsToMany(User::class, <span class=\"string\">'schedules_attendees'</span>, <span class=\"string\">'schedule_id'</span>, <span class=\"string\">'user_id'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关联写入\"><a href=\"#关联写入\" class=\"headerlink\" title=\"关联写入\"></a>关联写入</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$schedule-&gt;attendees()-&gt;attach(\\App\\Models\\User::inRandomOrder()-&gt;first());</span><br></pre></td></tr></table></figure>\n\n","categories":["Laravel"]},{"title":"扩展运算符","url":"/javascript/spread/","content":"<p>扩展运算符（spread）是三个点（<code>...</code>）。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(...[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]); <span class=\"comment\">// 1 2 3</span></span><br></pre></td></tr></table></figure>\n\n<p>扩展运算符后面还可以跟其他数据：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>, ...[<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], <span class=\"number\">5</span>); <span class=\"comment\">// 1 2 3 4 5</span></span><br></pre></td></tr></table></figure>\n\n<p>甚至是表达式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [</span><br><span class=\"line\">    ...(x &gt; <span class=\"number\">0</span> ? [<span class=\"string\">'a'</span>] : []),</span><br><span class=\"line\">    <span class=\"string\">'b'</span></span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p>如果扩展运算符后面跟的是空数组则无效果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[...[], <span class=\"number\">1</span>] <span class=\"comment\">// [1]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数调用\"><a href=\"#函数调用\" class=\"headerlink\" title=\"函数调用\"></a>函数调用</h2><p>函数调用是扩展运算符最主要的用途之一：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">push</span>(<span class=\"params\">array, ...items</span>) </span>&#123;</span><br><span class=\"line\">    array.push(...items);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\">sum(...numbers); <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<p>需要注意的是，只有在函数调用时扩展运算符才可以放到圆括号中。</p>\n<h2 id=\"替代函数-apply-方法\"><a href=\"#替代函数-apply-方法\" class=\"headerlink\" title=\"替代函数 apply 方法\"></a>替代函数 apply 方法</h2><p>由于扩展运算符可以展开数组，所以不再需要 <code>apply</code> 方法，将数组转为函数的参数了：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\">x, y, z</span>) </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES5</span></span><br><span class=\"line\">f.apply(<span class=\"literal\">null</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\">f(...[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5</span></span><br><span class=\"line\"><span class=\"comment\">// 由于 JavaScript 不提供求数组最大元素的函数，所以只能套用 Math.max 函数，将数组转为一个参数序列，然后求最大值。</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max.apply(<span class=\"literal\">null</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"comment\">// 有了扩展运算符以后，就可以直接用 Math.max 了。</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max(...[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 等同于</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5 </span></span><br><span class=\"line\"><span class=\"comment\">// push 方法的参数不能是数组，所以只好通过 apply 方法变通使用 push 方法。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">Array</span>.prototype.push.apply(arr1, arr2);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"comment\">// 有了扩展运算符，就可以直接将数组传入 push 方法。</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\">arr1.push(...arr2);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> (<span class=\"built_in\">Date</span>.bind.apply(<span class=\"built_in\">Date</span>, [<span class=\"literal\">null</span>, <span class=\"number\">2019</span>, <span class=\"number\">11</span>, <span class=\"number\">18</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(...[<span class=\"number\">2019</span>, <span class=\"number\">11</span>, <span class=\"number\">18</span>]);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"复制数组\"><a href=\"#复制数组\" class=\"headerlink\" title=\"复制数组\"></a>复制数组</h2><p>因为数组是复合的数据类型，通过赋值复制的话，只是复制了指向底层数据结构的指针，而不是克隆一个全新的数组。 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = arr1;</span><br><span class=\"line\"></span><br><span class=\"line\">arr2[<span class=\"number\">0</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1); <span class=\"comment\">// [2, 2]</span></span><br></pre></td></tr></table></figure>\n\n<p>在 ES5 中，只能通过变通的方法复制数组：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = arr1.concat();</span><br><span class=\"line\"></span><br><span class=\"line\">arr2[<span class=\"number\">0</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1); <span class=\"comment\">// [1, 2]</span></span><br></pre></td></tr></table></figure>\n\n<p>扩展运算符提供了复制数组的简便方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"comment\">// 下面两种写法等价</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = [...arr1];</span><br><span class=\"line\"><span class=\"keyword\">const</span> [...arr2] = arr1;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"合并数组\"><a href=\"#合并数组\" class=\"headerlink\" title=\"合并数组\"></a>合并数组</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = [<span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr3 = [<span class=\"number\">5</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES5</span></span><br><span class=\"line\">arr1.concat(arr2, arr3);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\">[...arr1, ...arr2, ...arr3]</span><br></pre></td></tr></table></figure>\n\n<p> 不过，这两种方法都是浅拷贝，使用的时候需要注意。 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [&#123; <span class=\"attr\">foo</span>: <span class=\"number\">1</span> &#125;];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = [&#123; <span class=\"attr\">bar</span>: <span class=\"number\">2</span> &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr3 = arr1.concat(arr2);</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr4 = [...arr1, ...arr2];</span><br><span class=\"line\"></span><br><span class=\"line\">arr3[<span class=\"number\">0</span>] === arr1[<span class=\"number\">0</span>] <span class=\"comment\">// true</span></span><br><span class=\"line\">arr4[<span class=\"number\">0</span>] === arr1[<span class=\"number\">0</span>] <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>上面代码中，<code>arr3</code> 和 <code>arr4</code> 是用两种不同方法合并而成的新数组，但是它们的成员都是对原数组成员的引用，这就是浅拷贝。如果修改了原数组的成员，会同步反映到新数组。 </p>\n<h2 id=\"转换数组\"><a href=\"#转换数组\" class=\"headerlink\" title=\"转换数组\"></a>转换数组</h2><h3 id=\"与解构赋值结合\"><a href=\"#与解构赋值结合\" class=\"headerlink\" title=\"与解构赋值结合\"></a>与解构赋值结合</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [first, ...rest] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"comment\">// first = 1, rest = [2, 3, 4, 5]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> [first, ...rest] = [];</span><br><span class=\"line\"><span class=\"comment\">// first = undefined, rest = []</span></span><br></pre></td></tr></table></figure>\n\n<p>如果将扩展运算符用于数组赋值，只能放在参数的最后一位，否则会报错。 </p>\n<h3 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[...<span class=\"string\">'hello'</span>]</span><br><span class=\"line\"><span class=\"comment\">// [ \"h\", \"e\", \"l\", \"l\", \"o\" ]</span></span><br></pre></td></tr></table></figure>\n\n<p>凡是涉及到操作四个字节的 Unicode 字符的函数，最好都用扩展运算符改写。</p>\n<h3 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h3><p>任何定义了遍历器（Iterator）接口的对象，都可以用扩展运算符转为真正的数组。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> nodeList = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>); <span class=\"comment\">// 类似数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> array = [...nodeList]; <span class=\"comment\">// 真数组</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Map、Set、Generator\"><a href=\"#Map、Set、Generator\" class=\"headerlink\" title=\"Map、Set、Generator\"></a>Map、Set、Generator</h3><p>扩展运算符内部调用的是数据结构的 Iterator 接口，因此只要具有 Iterator 接口的对象，都可以使用扩展运算符转为真正的数组。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>([</span><br><span class=\"line\">    [<span class=\"number\">1</span>, <span class=\"string\">'one'</span>],</span><br><span class=\"line\">    [<span class=\"number\">2</span>, <span class=\"string\">'two'</span>],</span><br><span class=\"line\">    [<span class=\"number\">3</span>, <span class=\"string\">'three'</span>],</span><br><span class=\"line\">]);</span><br><span class=\"line\">[...map.keys()]; <span class=\"comment\">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> go = <span class=\"function\"><span class=\"keyword\">function</span>*(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[...go()] <span class=\"comment\">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure>\n\n","categories":["JavaScript"]},{"title":"Laravel 数据填充『Seeding』","url":"/laravel/seeding/","content":"<h2 id=\"创建填充\"><a href=\"#创建填充\" class=\"headerlink\" title=\"创建填充\"></a>创建填充</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan make:seeder UsersTableSeeder</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"编写文件\"><a href=\"#编写文件\" class=\"headerlink\" title=\"编写文件\"></a>编写文件</h2><h2 id=\"执行填充\"><a href=\"#执行填充\" class=\"headerlink\" title=\"执行填充\"></a>执行填充</h2>","categories":["Laravel"]},{"title":"解决 Phpstorm 更新时没有写入权限的问题","url":"/phpstorm/phpstorm-does-not-have-write-access/","content":"<p>Linux 环境下的 Phpstorm 在更新时可能会遇到 <code>Phpstorm does not have write access to /opt/phpstorm. Please run it by a privileged user to update</code> 的信息，解决方法也很简单，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo chown -R <span class=\"variable\">$USER</span>:<span class=\"variable\">$USER</span> /opt/phpstorm</span><br></pre></td></tr></table></figure>\n\n<p>然后 <em>Help-&gt;Check for Updates</em> 更新即可。</p>\n","categories":["Phpstorm"],"tags":["Phpstorm","权限"]},{"title":"ES6 对函数的扩展","url":"/javascript/function/","content":"<h2 id=\"默认值\"><a href=\"#默认值\" class=\"headerlink\" title=\"默认值\"></a>默认值</h2>","categories":["JavaScript"]},{"title":"Laravel 数据库迁移『Migrations』","url":"/laravel/migrations/","content":"<h1 id=\"创建迁移\"><a href=\"#创建迁移\" class=\"headerlink\" title=\"创建迁移\"></a>创建迁移</h1><h2 id=\"创建新表\"><a href=\"#创建新表\" class=\"headerlink\" title=\"创建新表\"></a>创建新表</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan make:migration create_users_table --create=users</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改旧表\"><a href=\"#修改旧表\" class=\"headerlink\" title=\"修改旧表\"></a>修改旧表</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan make:migration add_votes_to_users_table --table=users</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"指定路径\"><a href=\"#指定路径\" class=\"headerlink\" title=\"指定路径\"></a>指定路径</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan make:migration create_users_table --path=xxxxxx</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h1 id=\"运行迁移\"><a href=\"#运行迁移\" class=\"headerlink\" title=\"运行迁移\"></a>运行迁移</h1><h2 id=\"执行迁移\"><a href=\"#执行迁移\" class=\"headerlink\" title=\"执行迁移\"></a>执行迁移</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan migrate</span><br><span class=\"line\">$ php artisan migrate --force <span class=\"comment\"># 强制执行</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"回滚迁移\"><a href=\"#回滚迁移\" class=\"headerlink\" title=\"回滚迁移\"></a>回滚迁移</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan migrate:rollback <span class=\"comment\"># 回滚到最后一次</span></span><br><span class=\"line\">$ php artisan migrate:rollback --step=5 <span class=\"comment\"># 回滚指定次数</span></span><br><span class=\"line\">$ php artisan migrate:reset <span class=\"comment\"># 回滚所有</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"刷新迁移\"><a href=\"#刷新迁移\" class=\"headerlink\" title=\"刷新迁移\"></a>刷新迁移</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ migrate:refresh <span class=\"comment\"># 回滚你所有的迁移后执行 migrate 命令</span></span><br><span class=\"line\">$ php artisan migrate:refresh --seed <span class=\"comment\"># 刷新数据库并执行数据库填充</span></span><br><span class=\"line\">$ php artisan migrate:refresh --step=5 <span class=\"comment\"># 回滚并重新迁移指定数量的迁移</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除迁移\"><a href=\"#删除迁移\" class=\"headerlink\" title=\"删除迁移\"></a>删除迁移</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan migrate:fresh <span class=\"comment\"># 删除数据中所有的数据表并在之后执行 migrate 命令</span></span><br><span class=\"line\">$ php artisan migrate:fresh --seed</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"数据表\"><a href=\"#数据表\" class=\"headerlink\" title=\"数据表\"></a>数据表</h1><h2 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h2><h1 id=\"字段类型\"><a href=\"#字段类型\" class=\"headerlink\" title=\"字段类型\"></a>字段类型</h1><h2 id=\"ID\"><a href=\"#ID\" class=\"headerlink\" title=\"ID\"></a>ID</h2><h3 id=\"自增ID\"><a href=\"#自增ID\" class=\"headerlink\" title=\"自增ID\"></a>自增ID</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;bigIncrements(<span class=\"string\">'id'</span>); <span class=\"comment\">// UNSIGNED BIG INTEGER</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;increments(<span class=\"string\">'id'</span>); <span class=\"comment\">// UNSIGNED INTEGER</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;tinyIncrements(<span class=\"string\">'id'</span>); <span class=\"comment\">// UNSIGNED TINYINT</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;smallIncrements(<span class=\"string\">'id'</span>); <span class=\"comment\">// UNSIGNED SMALLINT</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;mediumIncrements(<span class=\"string\">'id'</span>); <span class=\"comment\">// UNSIGNED MEDIUM INTEGER</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"UUID\"><a href=\"#UUID\" class=\"headerlink\" title=\"UUID\"></a>UUID</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;uuid(<span class=\"string\">'id'</span>);\t<span class=\"comment\">// UUID</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数值\"><a href=\"#数值\" class=\"headerlink\" title=\"数值\"></a>数值</h2><h3 id=\"整数\"><a href=\"#整数\" class=\"headerlink\" title=\"整数\"></a>整数</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;bigInteger(<span class=\"string\">'votes'</span>); <span class=\"comment\">// BIGINT</span></span><br><span class=\"line\">$table-&gt;unsignedBigInteger(<span class=\"string\">'votes'</span>); <span class=\"comment\">// UNSIGNED BIGINT</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;integer(<span class=\"string\">'votes'</span>); <span class=\"comment\">// INTEGER</span></span><br><span class=\"line\">$table-&gt;unsignedInteger(<span class=\"string\">'votes'</span>); <span class=\"comment\">// UNSIGNED INTEGER</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;tinyInteger(<span class=\"string\">'votes'</span>); <span class=\"comment\">// TINYINT</span></span><br><span class=\"line\">$table-&gt;unsignedTinyInteger(<span class=\"string\">'votes'</span>); <span class=\"comment\">// UNSIGNED TINYINT</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;smallInteger(<span class=\"string\">'votes'</span>); <span class=\"comment\">// SMALLINT</span></span><br><span class=\"line\">$table-&gt;unsignedSmallInteger(<span class=\"string\">'votes'</span>); <span class=\"comment\">// UNSIGNED SMALLINT</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;mediumInteger(<span class=\"string\">'votes'</span>); <span class=\"comment\">// MEDIUMINT</span></span><br><span class=\"line\">$table-&gt;unsignedMediumInteger(<span class=\"string\">'votes'</span>); <span class=\"comment\">// UNSIGNED MEDIUMINT</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"浮点数\"><a href=\"#浮点数\" class=\"headerlink\" title=\"浮点数\"></a>浮点数</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;float(<span class=\"string\">'amount'</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>); <span class=\"comment\">// FLOAT 带精度与基数</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;double(<span class=\"string\">'amount'</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>);\t<span class=\"comment\">// DOUBLE 带精度与基数</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;decimal(<span class=\"string\">'amount'</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>); <span class=\"comment\">// DECIMAL 带精度与基数</span></span><br><span class=\"line\">$table-&gt;unsignedDecimal(<span class=\"string\">'amount'</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>); <span class=\"comment\">// UNSIGNED DECIMAL 带精度与基数</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;char(<span class=\"string\">'name'</span>, <span class=\"number\">100</span>); <span class=\"comment\">// CHAR 指定长度</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;string(<span class=\"string\">'name'</span>); <span class=\"comment\">// VARCHAR</span></span><br><span class=\"line\">$table-&gt;string(<span class=\"string\">'name'</span>, <span class=\"number\">100</span>); <span class=\"comment\">// VARCHAR 指定长度</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;longText(<span class=\"string\">'description'</span>); <span class=\"comment\">// LONGTEXT</span></span><br><span class=\"line\">$table-&gt;text(<span class=\"string\">'description'</span>); <span class=\"comment\">// TEXT</span></span><br><span class=\"line\">$table-&gt;mediumText(<span class=\"string\">'description'</span>); <span class=\"comment\">// MEDIUMTEXT</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;lineString(<span class=\"string\">'positions'</span>); <span class=\"comment\">// LINESTRING</span></span><br><span class=\"line\">$table-&gt;multiLineString(<span class=\"string\">'positions'</span>); <span class=\"comment\">// MULTILINESTRING</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;rememberToken(); <span class=\"comment\">// 可空版本的 VARCHAR (100) 的 remember_token 字段</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"日期时间\"><a href=\"#日期时间\" class=\"headerlink\" title=\"日期时间\"></a>日期时间</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;year(<span class=\"string\">'birth_year'</span>); <span class=\"comment\">// YEAR</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;date(<span class=\"string\">'created_at'</span>); <span class=\"comment\">// DATE</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;time(<span class=\"string\">'sunrise'</span>); <span class=\"comment\">// TIME</span></span><br><span class=\"line\">$table-&gt;timeTz(<span class=\"string\">'sunrise'</span>); <span class=\"comment\">// TIME 带时区</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;dateTime(<span class=\"string\">'created_at'</span>); <span class=\"comment\">// DATETIME</span></span><br><span class=\"line\">$table-&gt;dateTimeTz(<span class=\"string\">'created_at'</span>); <span class=\"comment\">// DATETIME 带时区</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;timestamp(<span class=\"string\">'added_on'</span>); <span class=\"comment\">// TIMESTAMP</span></span><br><span class=\"line\">$table-&gt;timestampTz(<span class=\"string\">'added_on'</span>); <span class=\"comment\">// TIMESTAMP 带时区</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;timestamps(); <span class=\"comment\">// TIMESTAMP 可空的 created_at 和 updated_at </span></span><br><span class=\"line\">$table-&gt;timestampsTz(); <span class=\"comment\">// TIMESTAMP 可空且带时区的 created_at 和 updated_at</span></span><br><span class=\"line\">$table-&gt;nullableTimestamps(); <span class=\"comment\">// 可空版本的 timestamps() 字段</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"BOOLEAN\"><a href=\"#BOOLEAN\" class=\"headerlink\" title=\"BOOLEAN\"></a>BOOLEAN</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;boolean(<span class=\"string\">'confirmed'</span>); <span class=\"comment\">// BOOLEAN</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"IP\"><a href=\"#IP\" class=\"headerlink\" title=\"IP\"></a>IP</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;ipAddress(<span class=\"string\">'visitor'</span>); <span class=\"comment\">// IP 地址</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"MAC\"><a href=\"#MAC\" class=\"headerlink\" title=\"MAC\"></a>MAC</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;macAddress(<span class=\"string\">'device'</span>); <span class=\"comment\">// MAC 地址</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JSON\"><a href=\"#JSON\" class=\"headerlink\" title=\"JSON\"></a>JSON</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;json(<span class=\"string\">'options'</span>); <span class=\"comment\">// JSON</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;jsonb(<span class=\"string\">'options'</span>); <span class=\"comment\">// JSONB</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"BLOB\"><a href=\"#BLOB\" class=\"headerlink\" title=\"BLOB\"></a>BLOB</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;binary(<span class=\"string\">'data'</span>); <span class=\"comment\">// BLOB</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SET\"><a href=\"#SET\" class=\"headerlink\" title=\"SET\"></a>SET</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;set(<span class=\"string\">'flavors'</span>, [<span class=\"string\">'strawberry'</span>, <span class=\"string\">'vanilla'</span>]); <span class=\"comment\">// SET</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ENUM\"><a href=\"#ENUM\" class=\"headerlink\" title=\"ENUM\"></a>ENUM</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;enum(<span class=\"string\">'level'</span>, [<span class=\"string\">'easy'</span>, <span class=\"string\">'hard'</span>]); <span class=\"comment\">// ENUM</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GEOMETRY\"><a href=\"#GEOMETRY\" class=\"headerlink\" title=\"GEOMETRY\"></a>GEOMETRY</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;geometry(<span class=\"string\">'positions'</span>); <span class=\"comment\">// GEOMETRY</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;geometryCollection(<span class=\"string\">'positions'</span>); <span class=\"comment\">// GEOMETRYCOLLECTION</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"POINT\"><a href=\"#POINT\" class=\"headerlink\" title=\"POINT\"></a>POINT</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;point(<span class=\"string\">'position'</span>); <span class=\"comment\">// POINT</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;multiPoint(<span class=\"string\">'positions'</span>); <span class=\"comment\">// MULTIPOINT</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"POLYGON\"><a href=\"#POLYGON\" class=\"headerlink\" title=\"POLYGON\"></a>POLYGON</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;polygon(<span class=\"string\">'positions'</span>); <span class=\"comment\">// POLYGON</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;multiPolygon(<span class=\"string\">'positions'</span>); <span class=\"comment\">// MULTIPOLYGON</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"morphs\"><a href=\"#morphs\" class=\"headerlink\" title=\"morphs\"></a>morphs</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;morphs(<span class=\"string\">'taggable'</span>);\t<span class=\"comment\">// 加入递增的 taggable_id 与字符串 taggable_type</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;uuidMorphs(<span class=\"string\">'taggable'</span>);\t<span class=\"comment\">// 加入 taggable_id 与字符串 taggable_type UUID 列</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;nullableMorphs(<span class=\"string\">'taggable'</span>); <span class=\"comment\">// 可空版本的 morphs () 字段</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;nullableUuidMorphs(<span class=\"string\">'taggable'</span>); <span class=\"comment\">// 可空版本的 uuidMorphs() 字段</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"软删除\"><a href=\"#软删除\" class=\"headerlink\" title=\"软删除\"></a>软删除</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;softDeletes(); <span class=\"comment\">// 为软删除添加一个可空的 deleted_at 字段</span></span><br><span class=\"line\">$table-&gt;softDeletesTz(); <span class=\"comment\">// 为软删除添加一个可空的 带时区的 deleted_at 字段</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"索引字段\"><a href=\"#索引字段\" class=\"headerlink\" title=\"索引字段\"></a>索引字段</h1><h2 id=\"主键\"><a href=\"#主键\" class=\"headerlink\" title=\"主键\"></a>主键</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;primary(<span class=\"string\">'id'</span>); <span class=\"comment\">// 添加主键</span></span><br><span class=\"line\">$table-&gt;primary([<span class=\"string\">'id'</span>, <span class=\"string\">'parent_id'</span>]); <span class=\"comment\">// 复合索引</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"唯一索引\"><a href=\"#唯一索引\" class=\"headerlink\" title=\"唯一索引\"></a>唯一索引</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;string(<span class=\"string\">'email'</span>)-&gt;unique(); <span class=\"comment\">// 字段创建时指定</span></span><br><span class=\"line\">$table-&gt;unique(<span class=\"string\">'email'</span>); <span class=\"comment\">// 字段创建后指定</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"普通索引\"><a href=\"#普通索引\" class=\"headerlink\" title=\"普通索引\"></a>普通索引</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;string(<span class=\"string\">'view_count'</span>)-&gt;index();</span><br><span class=\"line\">$table-&gt;index([<span class=\"string\">'account_id'</span>, <span class=\"string\">'created_at'</span>]); <span class=\"comment\">// 复合索引</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"空间索引\"><a href=\"#空间索引\" class=\"headerlink\" title=\"空间索引\"></a>空间索引</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;spatialIndex(<span class=\"string\">'location'</span>); <span class=\"comment\">// 添加空间索引（不支持 SQLite）</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自定义索引名称\"><a href=\"#自定义索引名称\" class=\"headerlink\" title=\"自定义索引名称\"></a>自定义索引名称</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;unique(<span class=\"string\">'email'</span>, <span class=\"string\">'unique_email'</span>); <span class=\"comment\">// 第二个参数是 自定义索引名称</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"索引长度\"><a href=\"#索引长度\" class=\"headerlink\" title=\"索引长度\"></a>索引长度</h2><h3 id=\"TODO-1\"><a href=\"#TODO-1\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><h2 id=\"重命名索引\"><a href=\"#重命名索引\" class=\"headerlink\" title=\"重命名索引\"></a>重命名索引</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;renameIndex(<span class=\"string\">'from'</span>, <span class=\"string\">'to'</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除索引\"><a href=\"#删除索引\" class=\"headerlink\" title=\"删除索引\"></a>删除索引</h2><p>若要删除索引，则必须指定索引的名称。Laravel 默认会自动将数据库名称、索引的字段名及索引类型简单地连接在一起作为名称。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;dropPrimary(<span class=\"string\">'users_id_primary'</span>); <span class=\"comment\">// 从 users 表中删除主键</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;dropUnique(<span class=\"string\">'users_email_unique'</span>); <span class=\"comment\">// 从 users 表中删除唯一索引</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;dropIndex(<span class=\"string\">'geo_state_index'</span>); <span class=\"comment\">// 从 geo 表中删除基本索引</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$table-&gt;dropSpatialIndex(<span class=\"string\">'geo_location_spatialindex'</span>); <span class=\"comment\">// 从 geo 表中删除空间索引（不支持 SQLite）</span></span><br></pre></td></tr></table></figure>\n\n<p>如果将字段数组传给 dropIndex 方法，会删除根据表名、字段和键类型生成的索引名称：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Schema::table(<span class=\"string\">'geo'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(Blueprint $table)</span> </span>&#123;</span><br><span class=\"line\">    $table-&gt;dropIndex([<span class=\"string\">'state'</span>]); <span class=\"comment\">// Drops index 'geo_state_index'</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"外键约束\"><a href=\"#外键约束\" class=\"headerlink\" title=\"外键约束\"></a>外键约束</h1><h2 id=\"TODO-2\"><a href=\"#TODO-2\" class=\"headerlink\" title=\"TODO\"></a>TODO</h2><h1 id=\"字段修饰符\"><a href=\"#字段修饰符\" class=\"headerlink\" title=\"字段修饰符\"></a>字段修饰符</h1><h2 id=\"字段位置\"><a href=\"#字段位置\" class=\"headerlink\" title=\"字段位置\"></a>字段位置</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;first() <span class=\"comment\">// 将此字段放置在数据表的 \"首位\" (MySQL)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;after(<span class=\"string\">'column'</span>) <span class=\"comment\">// 将此字段放置在其它字段 \"之后\" (MySQL)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;comment(<span class=\"string\">'my comment'</span>) <span class=\"comment\">// 为字段增加注释 (MySQL)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"默认值\"><a href=\"#默认值\" class=\"headerlink\" title=\"默认值\"></a>默认值</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;default($value) <span class=\"comment\">// 为字段指定 \"默认\" 值</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"允许-NULL\"><a href=\"#允许-NULL\" class=\"headerlink\" title=\"允许 NULL\"></a>允许 NULL</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;nullable($value = <span class=\"keyword\">true</span>) <span class=\"comment\">// 此字段允许写入 NULL 值（默认情况下）</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"UNSIGNED\"><a href=\"#UNSIGNED\" class=\"headerlink\" title=\"UNSIGNED\"></a>UNSIGNED</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;unsigned() <span class=\"comment\">// 设置 INTEGER 类型的字段为 UNSIGNED (MySQL)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自增主键\"><a href=\"#自增主键\" class=\"headerlink\" title=\"自增主键\"></a>自增主键</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;autoIncrement() <span class=\"comment\">// 将 INTEGER 类型的字段设置为自动递增的主键</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符集\"><a href=\"#字符集\" class=\"headerlink\" title=\"字符集\"></a>字符集</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;charset(<span class=\"string\">'utf8'</span>) <span class=\"comment\">// 指定一个字符集 (MySQL)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"排序规则\"><a href=\"#排序规则\" class=\"headerlink\" title=\"排序规则\"></a>排序规则</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;collation(<span class=\"string\">'utf8_unicode_ci'</span>) <span class=\"comment\">// 指定列的排序规则 (MySQL/SQL Server)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CURRENT-TIMESTAMP\"><a href=\"#CURRENT-TIMESTAMP\" class=\"headerlink\" title=\"CURRENT_TIMESTAMP\"></a>CURRENT_TIMESTAMP</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;useCurrent() <span class=\"comment\">// 将 TIMESTAMP 类型的字段设置为使用 CURRENT_TIMESTAMP 作为默认值</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"存储生成\"><a href=\"#存储生成\" class=\"headerlink\" title=\"存储生成\"></a>存储生成</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;storedAs($expression) <span class=\"comment\">// 创建一个存储生成的字段 (MySQL)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"虚拟生成\"><a href=\"#虚拟生成\" class=\"headerlink\" title=\"虚拟生成\"></a>虚拟生成</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;virtualAs($expression) <span class=\"comment\">// 创建一个虚拟生成的字段 (MySQL)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"序列生成\"><a href=\"#序列生成\" class=\"headerlink\" title=\"序列生成\"></a>序列生成</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;generatedAs($expression) <span class=\"comment\">// 使用指定的序列生成标识列（PostgreSQL）</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"序列值优先\"><a href=\"#序列值优先\" class=\"headerlink\" title=\"序列值优先\"></a>序列值优先</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">-&gt;always() <span class=\"comment\">// 定义序列值优先于标识列的输入 (PostgreSQL)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"修改字段\"><a href=\"#修改字段\" class=\"headerlink\" title=\"修改字段\"></a>修改字段</h1><h2 id=\"TODO-3\"><a href=\"#TODO-3\" class=\"headerlink\" title=\"TODO\"></a>TODO</h2>","categories":["Laravel"]},{"title":"模板字符串","url":"/javascript/template-strings/","content":"<p>JavaScript 在输出模板时，传统方法是通过不断的 <code>+</code> 来拼接，这种写法太过繁琐，ES6 引入了模板字符串解决这个痛点。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> template = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">  My name is <span class=\"subst\">$&#123;name&#125;</span>,</span></span><br><span class=\"line\"><span class=\"string\">  I am <span class=\"subst\">$&#123;age&#125;</span> years old</span></span><br><span class=\"line\"><span class=\"string\">`</span>;</span><br></pre></td></tr></table></figure>\n\n<p>模板字符串使用反引号标识，可以当做普通字符串使用，也可以用来定义多行字符串，还能在字符串中嵌入变量。</p>\n<h2 id=\"多行字符串\"><a href=\"#多行字符串\" class=\"headerlink\" title=\"多行字符串\"></a>多行字符串</h2><p>如果使用模板字符串定义多行字符串，那么所有的空格和缩进都会被保留到输出中，但是开始和结束可以使用 <code>trim</code> 来消除：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> template = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">  &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;li&gt;1&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">`</span>.trim();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"插入变量\"><a href=\"#插入变量\" class=\"headerlink\" title=\"插入变量\"></a>插入变量</h2><p>说是插入变量，其实表达式和调用函数也是可以的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`My name is <span class=\"subst\">$&#123;name&#125;</span>`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">`I am <span class=\"subst\">$&#123;thisYear - bornYear&#125;</span> years old`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">`This function return <span class=\"subst\">$&#123;fun()&#125;</span>`</span>;</span><br></pre></td></tr></table></figure>\n\n<p>如果大括号中的不是字符串，一般会用 <code>toString</code> 方法转为字符串。</p>\n<p>如果大括号内的变量没有声明，则会报错。</p>\n<h2 id=\"嵌套\"><a href=\"#嵌套\" class=\"headerlink\" title=\"嵌套\"></a>嵌套</h2><p>模板字符串是支持嵌套使用的。</p>\n<h2 id=\"标签模板\"><a href=\"#标签模板\" class=\"headerlink\" title=\"标签模板\"></a>标签模板</h2><p>模板字符串的功能，不仅仅是上面这些。它可以紧跟在一个函数名后面，该函数将被调用来处理这个模板字符串。这被称为“<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lczYucnVhbnlpZmVuZy5jb20vI2RvY3Mvc3RyaW5nIyVFNiVBMCU4NyVFNyVBRCVCRSVFNiVBOCVBMSVFNiU5RCVCRg==\" title=\"https://es6.ruanyifeng.com/#docs/string#%E6%A0%87%E7%AD%BE%E6%A8%A1%E6%9D%BF\">标签模板<i class=\"fa fa-external-link\"></i></span>”功能（tagged template）。 </p>\n","categories":["JavaScript"]},{"title":"ES6 回头看","url":"/javascript/waiting/es6-waiting/","content":"<p>阮一峰ES6文档，涉及到其他章节的内容，等看完全本再来看。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"解构赋值\"><a href=\"#解构赋值\" class=\"headerlink\" title=\"解构赋值\"></a>解构赋值</h2><p><span class=\"exturl\" data-url=\"aHR0cDovL2VzNi5ydWFueWlmZW5nLmNvbS8jZG9jcy9kZXN0cnVjdHVyaW5n\" title=\"http://es6.ruanyifeng.com/#docs/destructuring\">http://es6.ruanyifeng.com/#docs/destructuring<i class=\"fa fa-external-link\"></i></span> </p>\n<p>对于 Set 结构，也可以使用数组的解构赋值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [x, y, z] = <span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>([<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>]);</span><br><span class=\"line\">x <span class=\"comment\">// \"a\"</span></span><br></pre></td></tr></table></figure>\n\n<p>事实上，只要某种数据结构具有 Iterator 接口，都可以采用数组形式的解构赋值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>* <span class=\"title\">fibs</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> a;</span><br><span class=\"line\">    [a, b] = [b, a + b];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> [first, second, third, fourth, fifth, sixth] = fibs();</span><br><span class=\"line\">sixth <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n\n<p>上面代码中，<code>fibs</code>是一个 Generator 函数（参见《Generator 函数》一章），原生具有 Iterator 接口。解构赋值会依次从这个接口获取值。</p>\n<h2 id=\"Node-加载\"><a href=\"#Node-加载\" class=\"headerlink\" title=\"Node 加载\"></a>Node 加载</h2><p><span class=\"exturl\" data-url=\"aHR0cDovL2VzNi5ydWFueWlmZW5nLmNvbS8jZG9jcy9tb2R1bGUtbG9hZGVyI05vZGUt5Yqg6L29\" title=\"http://es6.ruanyifeng.com/#docs/module-loader#Node-加载\">http://es6.ruanyifeng.com/#docs/module-loader#Node-%E5%8A%A0%E8%BD%BD<i class=\"fa fa-external-link\"></i></span> </p>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"变量的解构赋值","url":"/javascript/destructuring/","content":"<p>ES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。 </p>\n<p>如果等号的右边不是数组（或者严格地说，不是可遍历的结构），那么将会报错。 </p>\n<h2 id=\"解构赋值的规则\"><a href=\"#解构赋值的规则\" class=\"headerlink\" title=\"解构赋值的规则\"></a>解构赋值的规则</h2><p>只要等号右边的值不是对象或数组，就先将其转为对象。但由于 <code>undefined</code> 和 <code>null</code> 无法转为对象，所以无法对它们进行解构赋值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">prop</span>: x &#125; = <span class=\"literal\">undefined</span>; <span class=\"comment\">// 报错</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">prop</span>: y &#125; = <span class=\"literal\">null</span>; <span class=\"comment\">// 报错</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数组解构\"><a href=\"#数组解构\" class=\"headerlink\" title=\"数组解构\"></a>数组解构</h2><h3 id=\"完全解构\"><a href=\"#完全解构\" class=\"headerlink\" title=\"完全解构\"></a>完全解构</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one, two, three] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = 2, three = 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> [one, [two, [three]]] = [<span class=\"number\">1</span>, [<span class=\"number\">2</span>, [<span class=\"number\">3</span>]]];</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = 2, three = 3</span></span><br></pre></td></tr></table></figure>\n\n<p>本质上，这种写法属于“模式匹配”，只要等号两边的模式相同，左边的变量就会被赋予对应的值。 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one, , three] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"comment\">// one = 1, three = 3</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one, ...two] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = [2, 3];</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one, two, ...three] = [<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = undefined, three = []</span></span><br></pre></td></tr></table></figure>\n\n<p> 如果解构不成功，变量的值就等于<code>undefined</code>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one] = [];</span><br><span class=\"line\"><span class=\"comment\">// one = undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> [two, one] = [<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"comment\">// one = undefined</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"不完全解构\"><a href=\"#不完全解构\" class=\"headerlink\" title=\"不完全解构\"></a>不完全解构</h3><p>还有一种情况是不完全解构，等号左边的模式，只匹配一部分的等号右边的数组，解构依然可以成功。 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one, two] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = 2</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one, [two], three] = [<span class=\"number\">1</span>, [<span class=\"number\">2</span>, <span class=\"number\">4</span>], <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = 2, three = 3</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"默认值\"><a href=\"#默认值\" class=\"headerlink\" title=\"默认值\"></a>默认值</h3><p>解构赋值允许指定默认值 ，但 ES6 内部使用严格相等运算符（<code>===</code>），判断一个位置是否有值。所以，只有当一个数组成员严格等于<code>undefined</code>，默认值才会生效。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one, two = <span class=\"number\">2</span>] = [<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = 2</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one = <span class=\"string\">'1'</span>] = [<span class=\"literal\">null</span>];</span><br><span class=\"line\"><span class=\"comment\">// one = null</span></span><br></pre></td></tr></table></figure>\n\n<p>如果默认值是表达式 ，那么这个表达式是惰性求值的，只有在用到的时候才求值。 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 因为 one 能取到值等于1，所以 f() 不会执行</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'first'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> [one = f()] = [<span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n\n<p>默认值可以引用解构赋值的其他变量，但该变量必须已经声明。 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one, two = one] = [<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = 1</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [one = two, two = <span class=\"number\">2</span>] = [];</span><br><span class=\"line\"><span class=\"comment\">// Uncaught ReferenceError: Cannot access 'two' before initialization</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象解构\"><a href=\"#对象解构\" class=\"headerlink\" title=\"对象解构\"></a>对象解构</h2><h3 id=\"一般用法\"><a href=\"#一般用法\" class=\"headerlink\" title=\"一般用法\"></a>一般用法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123;one, two&#125; = &#123; <span class=\"attr\">one</span>: <span class=\"number\">1</span>, <span class=\"attr\">two</span>: <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = 2</span></span><br></pre></td></tr></table></figure>\n\n<p>对象解构和数组解构的区别在于数组解构的变量取值由它的位置决定，而对象解构变量必须与属性同名，才能取到正确的值。</p>\n<p>对象的解构赋值，非常棒的一点是可以很方便地将现有对象的方法，赋值到某个变量。 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将 console.log 赋值到 log</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; log &#125; = <span class=\"built_in\">console</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将 Math 的对数、正弦、余弦赋值到对应的变量上</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; log, sin, cos &#125; = <span class=\"built_in\">Math</span>;</span><br></pre></td></tr></table></figure>\n\n<p>如果变量名与属性名不一致，需要改变写法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">one</span>: first &#125; = &#123; <span class=\"attr\">one</span>: <span class=\"number\">1</span> &#125;;</span><br><span class=\"line\"><span class=\"comment\">// first = 1</span></span><br></pre></td></tr></table></figure>\n\n<p>上面这种写法说明了对象的解构赋值是下面形式的简写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">one</span>: one, <span class=\"attr\">two</span>: two &#125; = &#123; <span class=\"attr\">one</span>: <span class=\"number\">1</span>, <span class=\"attr\">two</span>: <span class=\"number\">2</span> &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>解释了对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// one 是匹配模式 first 是变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">one</span>: first &#125; = &#123; <span class=\"attr\">one</span>: <span class=\"number\">1</span> &#125;;</span><br><span class=\"line\"><span class=\"comment\">// first = 1</span></span><br><span class=\"line\"><span class=\"comment\">// one: Uncaught ReferenceError: one is not defined</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"嵌套取值\"><a href=\"#嵌套取值\" class=\"headerlink\" title=\"嵌套取值\"></a>嵌套取值</h3><p>与数组相同，对象解构也课用于嵌套：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    one: [</span><br><span class=\"line\">        <span class=\"string\">\"A\"</span>,</span><br><span class=\"line\">        &#123; <span class=\"attr\">first</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// one是模式不会被赋值</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">one</span>: [a, &#123; first &#125; &#125; = obj;</span><br><span class=\"line\"><span class=\"comment\">// a = \"A\", first = 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果需要赋值需要单独解构</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; one, <span class=\"attr\">one</span>: [a, &#123; first &#125;]&#125; = obj;</span><br><span class=\"line\"><span class=\"comment\">// a = \"A\", first = 1, one = [\"A\", &#123; first: 1 &#125;]</span></span><br></pre></td></tr></table></figure>\n\n<p>嵌套赋值可以赋值给预先定义好的变量：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">&#123; <span class=\"attr\">one</span>: obj.first, <span class=\"attr\">twp</span>: arr[<span class=\"number\">0</span>] &#125; = &#123; <span class=\"attr\">one</span>: <span class=\"number\">1</span>, <span class=\"attr\">two</span>: <span class=\"number\">2</span> &#125;；</span><br><span class=\"line\"><span class=\"comment\">// obj = &#123; first: 1 &#125;, arr[0] = 2</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"继承属性\"><a href=\"#继承属性\" class=\"headerlink\" title=\"继承属性\"></a>继承属性</h3><p>对象的解构赋值可以取到继承来的属性：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> one = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> two = &#123; <span class=\"attr\">second</span>: <span class=\"string\">'2'</span> &#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.setPrototypeOf(one, two);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; second &#125; = one;</span><br><span class=\"line\"><span class=\"comment\">// second = 2</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"默认值-1\"><a href=\"#默认值-1\" class=\"headerlink\" title=\"默认值\"></a>默认值</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; one, two = <span class=\"number\">2</span> &#125; = &#123;<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">one</span>: first = <span class=\"number\">1</span> &#125; = &#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">// first = 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;<span class=\"attr\">one</span>: first = <span class=\"number\">1</span>&#125; = &#123; <span class=\"attr\">one</span>: <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\"><span class=\"comment\">// first = 2</span></span><br></pre></td></tr></table></figure>\n\n<p>和数组解构相同，只有当一个对象成员严格等于<code>undefined</code>，默认值才会生效。</p>\n<h3 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h3><p>如果解构赋值使用了已经声明的变量，需要用括号括起来：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这种会报错，因为 JavaScript 引擎会将 &#123;x&#125; 理解成一个代码块</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> one;</span><br><span class=\"line\">&#123; one &#125; = &#123; <span class=\"attr\">one</span>: <span class=\"number\">1</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这种不会报错，只有不将大括号写在行首，才能解决这个问题</span></span><br><span class=\"line\">(&#123; one &#125; = &#123; <span class=\"attr\">one</span>: <span class=\"number\">1</span> &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>解构赋值允许等号左侧的模式中不放置任何变量：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这些毫无意义的写法是合法的</span></span><br><span class=\"line\">(&#123;&#125; = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]);</span><br><span class=\"line\">(&#123;&#125; = <span class=\"string\">'one'</span>);</span><br><span class=\"line\">(&#123;&#125; = []);</span><br></pre></td></tr></table></figure>\n\n<p>因为数组的本质是对象，所以可以使用对象的解构方法来解构数组：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"number\">0</span>: first, [arr.length <span class=\"number\">-1</span>]: last &#125; = arr;</span><br><span class=\"line\"><span class=\"comment\">// first = 1, last = 3</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串解构\"><a href=\"#字符串解构\" class=\"headerlink\" title=\"字符串解构\"></a>字符串解构</h2><p>字符串也可以使用解构赋值，使用时字符串被转换成类似数组的对象：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [a, b, c, d, e] = <span class=\"string\">'hello'</span>;</span><br><span class=\"line\"><span class=\"comment\">// a = 'h', b = 'e', c = 'l', d = 'l', e = 'o'</span></span><br></pre></td></tr></table></figure>\n\n<p>类似数组的对象都有一个 <code>length</code> 属性：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">length</span>: len &#125; = <span class=\"string\">'hello'</span>;</span><br><span class=\"line\"><span class=\"comment\">// len = 5</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数值和布尔值解构\"><a href=\"#数值和布尔值解构\" class=\"headerlink\" title=\"数值和布尔值解构\"></a>数值和布尔值解构</h2><p>对数组和布尔值解构时会先转换成对象：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">toString</span>: s &#125; = <span class=\"number\">123</span>;</span><br><span class=\"line\">s === <span class=\"built_in\">Number</span>.prototype.toString <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">toString</span>: b &#125; = <span class=\"literal\">true</span>;</span><br><span class=\"line\">b === <span class=\"built_in\">Boolean</span>.prototype.toString <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数参数解构\"><a href=\"#函数参数解构\" class=\"headerlink\" title=\"函数参数解构\"></a>函数参数解构</h2><p>对于函数参数，当他传入函数时，就已经被自动解构了：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">[one, two]</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> one + two;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">sum([<span class=\"number\">1</span>, <span class=\"number\">2</span>]); <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[[<span class=\"number\">1</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">4</span>]].map(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a + b);</span><br><span class=\"line\"><span class=\"comment\">// [3, 7]</span></span><br></pre></td></tr></table></figure>\n\n<p>同样的，函数参数的解构也可以使用默认值：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">&#123; first = <span class=\"number\">1</span>, second = <span class=\"number\">2</span> &#125; = &#123;&#125;</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> first + second;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">sum(); <span class=\"comment\">// 3</span></span><br><span class=\"line\">sum(&#123; <span class=\"attr\">first</span>: <span class=\"number\">2</span> &#125;); <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n\n<p>但是不能写成：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里不是为变量指定默认值，而是为函数指定默认值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">&#123; first, second &#125; = &#123; first: <span class=\"number\">1</span>, second: <span class=\"number\">2</span> &#125;</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> first + second;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>undefined</code> 会触发函数参数的默认值：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"literal\">undefined</span>, <span class=\"number\">3</span>].map(<span class=\"function\">(<span class=\"params\">four = <span class=\"number\">4</span></span>) =&gt;</span> four);</span><br><span class=\"line\"><span class=\"comment\">// [1, undefined, 3]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关于圆括号\"><a href=\"#关于圆括号\" class=\"headerlink\" title=\"关于圆括号\"></a>关于圆括号</h2><blockquote>\n<p>只要有可能导致解构的歧义，就不得使用圆括号。</p>\n</blockquote>\n<h3 id=\"不能使用的情况\"><a href=\"#不能使用的情况\" class=\"headerlink\" title=\"不能使用的情况\"></a>不能使用的情况</h3><h4 id=\"变量声明\"><a href=\"#变量声明\" class=\"headerlink\" title=\"变量声明\"></a>变量声明</h4><p>在变量声明语句中不能使用：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 以下使用全部报错</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [(one)] = [<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">one</span>: (first) &#125; = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> (&#123; <span class=\"attr\">one</span>: first &#125;) = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; ( one: first ) &#125; = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; (one): first &#125; = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">one</span>: (&#123; <span class=\"attr\">first</span>: second &#125;) &#125; = &#123; <span class=\"attr\">one</span>: &#123; <span class=\"attr\">first</span>: <span class=\"number\">2</span> &#125; &#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"函数参数\"><a href=\"#函数参数\" class=\"headerlink\" title=\"函数参数\"></a>函数参数</h4><p>函数参数也属于变量声明：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 以下使用全部报错</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\">[(one</span>)]) </span>&#123; <span class=\"keyword\">return</span> one; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span> (<span class=\"params\">[one, (two</span>)]) </span>&#123; <span class=\"keyword\">return</span> two; &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"赋值语句\"><a href=\"#赋值语句\" class=\"headerlink\" title=\"赋值语句\"></a>赋值语句</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 把整个模式放到圆括号 报错</span></span><br><span class=\"line\">(&#123; <span class=\"attr\">one</span>: first &#125;) = &#123; <span class=\"attr\">one</span>: <span class=\"number\">1</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 把一部分模式放到圆括号 报错</span></span><br><span class=\"line\">[( one: first ), &#123; <span class=\"attr\">two</span>: second &#125;] = [&#123;&#125;, &#123;&#125;];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"可以使用的情况\"><a href=\"#可以使用的情况\" class=\"headerlink\" title=\"可以使用的情况\"></a>可以使用的情况</h3><p>可以使用圆括号的情况其实只有一种，赋值语句的非模式部分：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 模式是取数组的第一个成员，和圆括号无关</span></span><br><span class=\"line\">[(one)] = [<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 模式时 one 不是 first</span></span><br><span class=\"line\">(&#123; <span class=\"attr\">one</span>: (first) &#125; = &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 也是取数组的第一个成员</span></span><br><span class=\"line\">[(<span class=\"built_in\">parseInt</span>.prop)] = [<span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n\n<p>这里的三行都可以正确执行，因为第一他们是赋值语句而不是声明语句，第二圆括号都不属于模式的一部分。</p>\n<h2 id=\"解构复制的用途\"><a href=\"#解构复制的用途\" class=\"headerlink\" title=\"解构复制的用途\"></a>解构复制的用途</h2><h3 id=\"交换变量的值\"><a href=\"#交换变量的值\" class=\"headerlink\" title=\"交换变量的值\"></a>交换变量的值</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> one = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> two = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">[one, two] = [two, one];</span><br><span class=\"line\"><span class=\"comment\">// one = 2, two = 1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数返回值\"><a href=\"#函数返回值\" class=\"headerlink\" title=\"函数返回值\"></a>函数返回值</h3><p>返回多个值：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> [one, two, three] = fun();</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = 2, three = 3</span></span><br></pre></td></tr></table></figure>\n\n<p>返回一个对象：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        one: <span class=\"number\">1</span>,</span><br><span class=\"line\">        two: <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; one, two &#125; = fun();</span><br><span class=\"line\"><span class=\"comment\">// one = 1, two = 2</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"定义函数参数\"><a href=\"#定义函数参数\" class=\"headerlink\" title=\"定义函数参数\"></a>定义函数参数</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 有序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\">[one, two, three]</span>) </span>&#123;&#125;</span><br><span class=\"line\">fun([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 无序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\">&#123;two, three, one&#125;</span>) </span>&#123;&#125;</span><br><span class=\"line\">f(&#123; <span class=\"attr\">one</span>: <span class=\"number\">1</span>, <span class=\"attr\">three</span>: <span class=\"number\">3</span>, <span class=\"attr\">two</span>: <span class=\"number\">2</span> &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数参数默认值\"><a href=\"#函数参数默认值\" class=\"headerlink\" title=\"函数参数默认值\"></a>函数参数默认值</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\">&#123; </span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    async = true, </span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    beforeSend = function(</span>)</span>&#123;&#125;,</span><br><span class=\"line\">&#125;) &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"提取-JSON-数据\"><a href=\"#提取-JSON-数据\" class=\"headerlink\" title=\"提取 JSON 数据\"></a>提取 JSON 数据</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> jsonData = &#123;</span><br><span class=\"line\">    id: <span class=\"number\">1</span>,</span><br><span class=\"line\">    status: <span class=\"string\">\"OK\"</span>,</span><br><span class=\"line\">    data: [<span class=\"number\">867</span>, <span class=\"number\">5309</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;id, status, <span class=\"attr\">data</span>: number&#125; = jsonData;</span><br><span class=\"line\"><span class=\"comment\">// id = 1, status = \"OK\", data = [867, 5309]</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"遍历-Map-结构\"><a href=\"#遍历-Map-结构\" class=\"headerlink\" title=\"遍历 Map 结构\"></a>遍历 Map 结构</h3><p>任何部署了 Iterator 接口的对象，都可以用 <code>for...of</code> 循环遍历。</p>\n<p>Map 结构原生支持 Iterator 接口，配合变量的解构赋值，可非常方便的获取键名和键值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\">map.set(<span class=\"string\">'first'</span>, <span class=\"string\">'hello'</span>);</span><br><span class=\"line\">map.set(<span class=\"string\">'second'</span>, <span class=\"string\">'world'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> [key, value] <span class=\"keyword\">of</span> map) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(key + <span class=\"string\">\" is \"</span> + value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// first is hello</span></span><br><span class=\"line\"><span class=\"comment\">// second is world</span></span><br></pre></td></tr></table></figure>\n\n<p>如果只需要键名或键值：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 键名</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> [key] <span class=\"keyword\">of</span> map) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 键值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> [, value] <span class=\"keyword\">of</span> map) &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"输入模块指定方法\"><a href=\"#输入模块指定方法\" class=\"headerlink\" title=\"输入模块指定方法\"></a>输入模块指定方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; SourceMapConsumer, SourceNode &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">\"source-map\"</span>);</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","categories":["JavaScript"]},{"title":"Git 延伸阅读","url":"/git/reading/","content":"<h2 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h2><ul>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poL3Yy\" title=\"https://git-scm.com/book/zh/v2\">Pro Git<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9teS5vc2NoaW5hLm5ldC9jYW9zYW4vYmxvZy81MjA5NTc=\" title=\"https://my.oschina.net/caosan/blog/520957\">常用git命令<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaHFiaG9ua2VyL3AvNTA5MjMwMC5odG1s\" title=\"https://www.cnblogs.com/hqbhonker/p/5092300.html\">git 删除本地分支和远程分支、本地代码回滚和远程代码库回滚<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0LXRvd2VyLmNvbS9sZWFybi9naXQvZWJvb2svY24vY29tbWFuZC1saW5lL2FkdmFuY2VkLXRvcGljcy9naXQtZmxvdw==\" title=\"https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/git-flow\">git-flow<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjgzNzcvYXJ0aWNsZS9kZXRhaWxzLzUyMTY4NDM0\" title=\"https://blog.csdn.net/u013068377/article/details/52168434\">windows下git bash中文乱码解决办法<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hhcHB5Um9ja2luZy9hcnRpY2xlL2RldGFpbHMvODkzMTM1MDE=\" title=\"https://blog.csdn.net/HappyRocking/article/details/89313501\">彻底删除git中的较大文件（包括历史提交记录）<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0LXRvd2VyLmNvbS9sZWFybi9naXQvZWJvb2svY24vY29tbWFuZC1saW5lL2FkdmFuY2VkLXRvcGljcy9naXQtZmxvdw==\" title=\"https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/git-flow\">git-flow 的工作流程<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n</ul>\n","categories":["Git"]},{"title":"Git 操作远程仓库","url":"/git/remote/","content":"<h2 id=\"远程地址\"><a href=\"#远程地址\" class=\"headerlink\" title=\"远程地址\"></a>远程地址</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote -v <span class=\"comment\"># -v 显示完整仓库地址</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"克隆仓库\"><a href=\"#克隆仓库\" class=\"headerlink\" title=\"克隆仓库\"></a>克隆仓库</h2><h3 id=\"主分支\"><a href=\"#主分支\" class=\"headerlink\" title=\"主分支\"></a>主分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> github@github.com:username/repository.git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"指定分支\"><a href=\"#指定分支\" class=\"headerlink\" title=\"指定分支\"></a>指定分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> -b branch github@github.com:username/repository.git</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更换仓库\"><a href=\"#更换仓库\" class=\"headerlink\" title=\"更换仓库\"></a>更换仓库</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin github@github.com:username/repository.git</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"移除仓库\"><a href=\"#移除仓库\" class=\"headerlink\" title=\"移除仓库\"></a>移除仓库</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote rm origin</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"远程分支\"><a href=\"#远程分支\" class=\"headerlink\" title=\"远程分支\"></a>远程分支</h2><h3 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git branch -a</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拉取\"><a href=\"#拉取\" class=\"headerlink\" title=\"拉取\"></a>拉取</h3><p>查询指定分支在远程仓库的最新状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git fetch origin branch</span><br></pre></td></tr></table></figure>\n\n<p>创建本地新分支链接远程分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout -b branch origin/branch</span><br></pre></td></tr></table></figure>\n\n<p>拉取</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git pull origin branch</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push origin :branch</span><br></pre></td></tr></table></figure>\n\n\n\n","categories":["Git"]},{"title":"Git 操作本地仓库","url":"/git/local/","content":"<h2 id=\"新建本地仓库\"><a href=\"#新建本地仓库\" class=\"headerlink\" title=\"新建本地仓库\"></a>新建本地仓库</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git init</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加到本地暂存区\"><a href=\"#添加到本地暂存区\" class=\"headerlink\" title=\"添加到本地暂存区\"></a>添加到本地暂存区</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git add -A</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"sth.\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"推送到远程仓库\"><a href=\"#推送到远程仓库\" class=\"headerlink\" title=\"推送到远程仓库\"></a>推送到远程仓库</h2><h3 id=\"首次推送\"><a href=\"#首次推送\" class=\"headerlink\" title=\"首次推送\"></a>首次推送</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote add origin git@github.com:username/repository.git</span><br><span class=\"line\">$ git push -u origin master</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"非首次\"><a href=\"#非首次\" class=\"headerlink\" title=\"非首次\"></a>非首次</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分支操作\"><a href=\"#分支操作\" class=\"headerlink\" title=\"分支操作\"></a>分支操作</h2><h3 id=\"新建\"><a href=\"#新建\" class=\"headerlink\" title=\"新建\"></a>新建</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout -b branch</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"切换\"><a href=\"#切换\" class=\"headerlink\" title=\"切换\"></a>切换</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout branch</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"合并\"><a href=\"#合并\" class=\"headerlink\" title=\"合并\"></a>合并</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git merge branch</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git branch -d branch</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改提交信息\"><a href=\"#修改提交信息\" class=\"headerlink\" title=\"修改提交信息\"></a>修改提交信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git commit --amend</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"撤销修改\"><a href=\"#撤销修改\" class=\"headerlink\" title=\"撤销修改\"></a>撤销修改</h2><h3 id=\"还原修改文件\"><a href=\"#还原修改文件\" class=\"headerlink\" title=\"还原修改文件\"></a>还原修改文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout .</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"撤销暂存区更改\"><a href=\"#撤销暂存区更改\" class=\"headerlink\" title=\"撤销暂存区更改\"></a>撤销暂存区更改</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git add -A</span><br><span class=\"line\">$ git checkout -f</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"清理应用\"><a href=\"#清理应用\" class=\"headerlink\" title=\"清理应用\"></a>清理应用</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clean -f -d <span class=\"comment\"># -f 强制清理文件 -d 连文件夹一并清除</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除版本库已提交文件\"><a href=\"#删除版本库已提交文件\" class=\"headerlink\" title=\"删除版本库已提交文件\"></a>删除版本库已提交文件</h3><p>已经在版本库里的文件无法直接通过 <code>.gitignore</code> 排除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git rm --cached</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"状态查询\"><a href=\"#状态查询\" class=\"headerlink\" title=\"状态查询\"></a>状态查询</h2><h3 id=\"暂存区状态\"><a href=\"#暂存区状态\" class=\"headerlink\" title=\"暂存区状态\"></a>暂存区状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git status</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"历史提交记录\"><a href=\"#历史提交记录\" class=\"headerlink\" title=\"历史提交记录\"></a>历史提交记录</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"忽略文件\"><a href=\"#忽略文件\" class=\"headerlink\" title=\"忽略文件\"></a>忽略文件</h2><h3 id=\"当前文件夹\"><a href=\"#当前文件夹\" class=\"headerlink\" title=\"当前文件夹\"></a>当前文件夹</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">*</span><br><span class=\"line\">!.gitignore</span><br></pre></td></tr></table></figure>\n\n\n","categories":["Git"]},{"title":"给 Git 配置代理，让 clone 飞起来","url":"/git/proxy/","content":"<h1 id=\"SSH-模式\"><a href=\"#SSH-模式\" class=\"headerlink\" title=\"SSH 模式\"></a>SSH 模式</h1><h2 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ touch ~/.ssh/config</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"系统兼容\"><a href=\"#系统兼容\" class=\"headerlink\" title=\"系统兼容\"></a>系统兼容</h2><h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Host github.com *.github.com</span><br><span class=\"line\">  ProxyCommand connect -S 127.0.0.1:1080 -a none %h %p</span><br><span class=\"line\">  User git</span><br><span class=\"line\">  IdentityFile &quot;~/.ssh/id_rsa&quot;</span><br><span class=\"line\">  TCPKeepAlive yes</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Manjaro\"><a href=\"#Manjaro\" class=\"headerlink\" title=\"Manjaro\"></a>Manjaro</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay -S connect</span><br></pre></td></tr></table></figure>\n\n<p>配置参数同 Windows。</p>\n<h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ apt install connect-proxy</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Host github.com *.github.com</span><br><span class=\"line\">  ProxyCommand connect-proxy -S 127.0.0.1:1080 -a none %h %p</span><br><span class=\"line\">  User git</span><br><span class=\"line\">  IdentityFile &quot;~/.ssh/id_rsa&quot;</span><br><span class=\"line\">  TCPKeepAlive yes</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"HTTPS-模式\"><a href=\"#HTTPS-模式\" class=\"headerlink\" title=\"HTTPS 模式\"></a>HTTPS 模式</h1><h2 id=\"全局代理\"><a href=\"#全局代理\" class=\"headerlink\" title=\"全局代理\"></a>全局代理</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用</span></span><br><span class=\"line\">$ git config --global http.proxy <span class=\"string\">\"http://127.0.0.1:1080\"</span></span><br><span class=\"line\">$ git config --global https.proxy <span class=\"string\">\"http://127.0.0.1:1080\"</span></span><br><span class=\"line\"><span class=\"comment\"># 取消</span></span><br><span class=\"line\">$ git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br><span class=\"line\">$ git config --global --<span class=\"built_in\">unset</span> https.proxy</span><br><span class=\"line\"><span class=\"comment\"># 查看</span></span><br><span class=\"line\">$ git config --global --get http.proxy</span><br><span class=\"line\">$ git config --global --get https.proxy</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"局部代理\"><a href=\"#局部代理\" class=\"headerlink\" title=\"局部代理\"></a>局部代理</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git config --global http.https://github.com.proxy 127.0.0.1:1080</span><br><span class=\"line\">$ git config --global https.https://github.com.proxy 127.0.0.1:1080</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"协议兼容\"><a href=\"#协议兼容\" class=\"headerlink\" title=\"协议兼容\"></a>协议兼容</h2><p>如果无法使用 <code>http</code> 模式的代理协议，可以将代理写成 <code>socks5://127.0.0.1:1080</code>。</p>\n","categories":["Git"]},{"title":"使用 npm 安装管理 Node.js 包","url":"/javascript/npm/","content":"<h2 id=\"国内镜像\"><a href=\"#国内镜像\" class=\"headerlink\" title=\"国内镜像\"></a>国内镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装包\"><a href=\"#安装包\" class=\"headerlink\" title=\"安装包\"></a>安装包</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install package --save-dev</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除包\"><a href=\"#删除包\" class=\"headerlink\" title=\"删除包\"></a>删除包</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm uninstall package</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"显示进度\"><a href=\"#显示进度\" class=\"headerlink\" title=\"显示进度\"></a>显示进度</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install package -d <span class=\"comment\"># -d -dd -ddd 不同显示级别</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm5wbWpzLmNvbS8=\" title=\"https://docs.npmjs.com/\">官方文档<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["JavaScript"]},{"title":"Manjaro 安装自定义字体","url":"/manjaro/fonts/","content":"<blockquote>\n<p>Manjaro 自带的字体真时没眼看，换一下舒服一点是一点。</p>\n</blockquote>\n<h2 id=\"复制-Windows-字体\"><a href=\"#复制-Windows-字体\" class=\"headerlink\" title=\"复制 Windows 字体\"></a>复制 Windows 字体</h2><p>复制需要的字体到 <code>~/.local/share/fonts</code></p>\n<p>在这个目录中执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mkfontscale <span class=\"comment\"># 生成索引</span></span><br><span class=\"line\">$ mkfontdir <span class=\"comment\"># 生成索引</span></span><br><span class=\"line\">$ <span class=\"built_in\">fc</span>-cache -fv <span class=\"comment\"># 更新字体缓存 f = force, v = view</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字体配置\"><a href=\"#字体配置\" class=\"headerlink\" title=\"字体配置\"></a>字体配置</h2><h3 id=\"系统字体\"><a href=\"#系统字体\" class=\"headerlink\" title=\"系统字体\"></a>系统字体</h3><p>装了 <code>wqy-microhei</code> 字体</p>\n<p><img alt data-src=\"https://cdn.waixiwai.com/images/20191108114630.png\"></p>\n<h3 id=\"Chrome字体\"><a href=\"#Chrome字体\" class=\"headerlink\" title=\"Chrome字体\"></a>Chrome字体</h3><p>装了 <code>Advanced Font Settings</code> 插件</p>\n<p><img alt data-src=\"https://cdn.waixiwai.com/images/20191108114606.png\"></p>\n","categories":["Manjaro"],"tags":["Manjaro","字体"]},{"title":"非常牛批的日历插件 tui.calendar 使用记录","url":"/javascript/tui-calendar/","content":"","categories":["JavaScript"]},{"title":"Manjaro 修改目录名为英文","url":"/manjaro/en-dirname/","content":"<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vim .config/user-dirs.dirs</span><br></pre></td></tr></table></figure>\n\n<p><em>user-dirs.dirs</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">XDG_DESKTOP_DIR=&quot;$HOME/Desktop&quot;</span><br><span class=\"line\">XDG_DOWNLOAD_DIR=&quot;$HOME/Downloads&quot;</span><br><span class=\"line\">XDG_TEMPLATES_DIR=&quot;$HOME/Templates&quot;</span><br><span class=\"line\">XDG_PUBLICSHARE_DIR=&quot;$HOME/Public&quot;</span><br><span class=\"line\">XDG_DOCUMENTS_DIR=&quot;$HOME/Documents&quot;</span><br><span class=\"line\">XDG_MUSIC_DIR=&quot;$HOME/Music&quot;</span><br><span class=\"line\">XDG_PICTURES_DIR=&quot;$HOME/Pictures&quot;</span><br><span class=\"line\">XDG_VIDEOS_DIR=&quot;$HOME/Videos&quot;</span><br></pre></td></tr></table></figure>\n\n<p>修改文件夹名称</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mv 桌面 Desktop &amp;&amp; mv 下载 Downloads &amp;&amp; mv 模板 Templates &amp;&amp; mv 公共 Public &amp;&amp; mv 文档 Documents &amp;&amp; mv 视频 Videos &amp;&amp; mv 图片 Pictures &amp;&amp; mv 音乐 Music</span><br></pre></td></tr></table></figure>\n\n<p>重启电脑。</p>\n","categories":["Manjaro"],"tags":["Manjaro"]},{"title":"在 Manjaro 中安装 Sublime Text 3","url":"/manjaro/sublime-text/","content":"<h2 id=\"安装-GPG-key\"><a href=\"#安装-GPG-key\" class=\"headerlink\" title=\"安装 GPG key\"></a>安装 GPG key</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl -O https://download.sublimetext.com/sublimehq-pub.gpg &amp;&amp; sudo pacman-key --add sublimehq-pub.gpg &amp;&amp; sudo pacman-key --lsign-key 8A8F901A &amp;&amp; rm sublimehq-pub.gpg</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"指定版本\"><a href=\"#指定版本\" class=\"headerlink\" title=\"指定版本\"></a>指定版本</h2><h3 id=\"稳定版\"><a href=\"#稳定版\" class=\"headerlink\" title=\"稳定版\"></a>稳定版</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\n[sublime-text]\\nServer = https://download.sublimetext.com/arch/stable/x86_64\"</span> | sudo tee -a /etc/pacman.conf</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开发版\"><a href=\"#开发版\" class=\"headerlink\" title=\"开发版\"></a>开发版</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\n[sublime-text]\\nServer = https://download.sublimetext.com/arch/dev/x86_64\"</span> | sudo tee -a /etc/pacman.conf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo pacman -Syu sublime-text</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"激活码\"><a href=\"#激活码\" class=\"headerlink\" title=\"激活码\"></a>激活码</h2><p><a href=\"/sublime-text/license/\">Sublime Text 3 激活码</a></p>\n","categories":["Manjaro","Sublime Text"],"tags":["Manjaro","Sublime Text"]},{"title":"使用 nvm 安装管理 Node.js 版本","url":"/javascript/nvm/","content":"<h2 id=\"安装-nvm\"><a href=\"#安装-nvm\" class=\"headerlink\" title=\"安装 nvm\"></a>安装 nvm</h2><h3 id=\"Manjaro\"><a href=\"#Manjaro\" class=\"headerlink\" title=\"Manjaro\"></a>Manjaro</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p>命令行下载不了的话，就直接打开网址另存为 <code>install.sh</code>，然后执行 <code>bash install.sh</code>。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">export NVM_DIR=&quot;$([ -z &quot;$&#123;XDG_CONFIG_HOME-&#125;&quot; ] &amp;&amp; printf %s &quot;$&#123;HOME&#125;/.nvm&quot; || printf %s &quot;$&#123;XDG_CONFIG_HOME&#125;/nvm&quot;)&quot;</span><br><span class=\"line\">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 本地版本</span></span><br><span class=\"line\">$ nvm ls</span><br><span class=\"line\"><span class=\"comment\"># 远程版本</span></span><br><span class=\"line\">$ nvm ls-remote</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装-node-js\"><a href=\"#安装-node-js\" class=\"headerlink\" title=\"安装 node.js\"></a>安装 node.js</h2><h3 id=\"最新版本\"><a href=\"#最新版本\" class=\"headerlink\" title=\"最新版本\"></a>最新版本</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm install node</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"指定版本\"><a href=\"#指定版本\" class=\"headerlink\" title=\"指定版本\"></a>指定版本</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm install 6.14.4</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"切换版本\"><a href=\"#切换版本\" class=\"headerlink\" title=\"切换版本\"></a>切换版本</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm use v6.14.4</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"更改默认版本\"><a href=\"#更改默认版本\" class=\"headerlink\" title=\"更改默认版本\"></a>更改默认版本</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm <span class=\"built_in\">alias</span> default v6.14.4</span><br></pre></td></tr></table></figure>\n\n","categories":["JavaScript"]},{"title":"Manjaro 常用软件","url":"/manjaro/softwares/","content":"<blockquote>\n<p>没写说明就是直接使用 <code>yay -S software</code> 安装。</p>\n</blockquote>\n<h2 id=\"图床工具\"><a href=\"#图床工具\" class=\"headerlink\" title=\"图床工具\"></a>图床工具</h2><h3 id=\"picgo\"><a href=\"#picgo\" class=\"headerlink\" title=\"picgo\"></a>picgo</h3><h2 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h2><h3 id=\"vim\"><a href=\"#vim\" class=\"headerlink\" title=\"vim\"></a>vim</h3><h3 id=\"typora\"><a href=\"#typora\" class=\"headerlink\" title=\"typora\"></a>typora</h3><h3 id=\"phpstrom\"><a href=\"#phpstrom\" class=\"headerlink\" title=\"phpstrom\"></a>phpstrom</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay -S phpstorm phpstorm-jre</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h2><h3 id=\"google-chrome\"><a href=\"#google-chrome\" class=\"headerlink\" title=\"google-chrome\"></a>google-chrome</h3><h2 id=\"数据库管理\"><a href=\"#数据库管理\" class=\"headerlink\" title=\"数据库管理\"></a>数据库管理</h2><h3 id=\"dbeaver\"><a href=\"#dbeaver\" class=\"headerlink\" title=\"dbeaver\"></a>dbeaver</h3><h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><h3 id=\"postman\"><a href=\"#postman\" class=\"headerlink\" title=\"postman\"></a>postman</h3><ul>\n<li>baidunetdisk 『百度网盘』</li>\n</ul>\n","categories":["Manjaro"],"tags":["Manjaro","常用软件"]},{"title":"Manjaro 安装搜狗输入法","url":"/manjaro/sogou/","content":"<h2 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay fcitx-im fcitx-configtool fcitx-sogoupinyin</span><br></pre></td></tr></table></figure>\n\n<p>直接回车安装全部。</p>\n<h2 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo vim ~/.xprofile</span><br></pre></td></tr></table></figure>\n\n<p><em>~/.xprofile</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">export GTK_IM_MODULE=fcitx</span><br><span class=\"line\">export QT_IM_MODULE=fcitx</span><br><span class=\"line\">export XMODIFIERS=&quot;@im=fcitx&quot;</span><br></pre></td></tr></table></figure>\n\n<p>重启系统。</p>\n","categories":["Manjaro"],"tags":["Manjaro","输入法"]},{"title":"阿里云ESC风险漏洞修复","url":"/third-party-services/aliyun-ecs-repair/","content":"<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yum check-update</span><br><span class=\"line\">$ yum upgrade</span><br></pre></td></tr></table></figure>\n\n","categories":["Third party Services"],"tags":["第三方服务","阿里云","修复"]},{"title":"JavaScript的模块体系","url":"/javascript/module/","content":"<p>ES6 在语言标准的层面上实现了模块功能，取代了 AMD 和 CommonJs。</p>\n<p>模块功能主要由两个命令构成：<code>export</code>和<code>import</code>。<code>export</code>命令用于规定模块的对外接口，<code>import</code>命令用于输入其他模块提供的功能。 </p>\n<h1 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h1><h2 id=\"export\"><a href=\"#export\" class=\"headerlink\" title=\"export\"></a>export</h2><p>一个模块就是一个独立的文件。该文件内部的所有变量，外部无法获取。</p>\n<p>如果希望外部能够读取模块内部的某个变量，就必须使用<code>export</code>关键字输出该变量。 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> one = <span class=\"string\">\"one\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> two = <span class=\"string\">\"two\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">three</span>(<span class=\"params\">two, three</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> two + three;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> one = <span class=\"string\">\"one\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> two = <span class=\"string\">\"two\"</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">three</span>(<span class=\"params\">two, three</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> two + three;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; one, two, three &#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面两种方法是等价的，但是第二种写法可以放到文件末尾，可以清晰的看到输出的变量。</p>\n<p>需要注意的是，<code>export</code> 可以放到模块的任何位置，但是必须处于模块顶层，不能放到块级作用域。</p>\n<h2 id=\"import\"><a href=\"#import\" class=\"headerlink\" title=\"import\"></a>import</h2><p><code>import</code> 可以加载通过 <code>export</code> 定义的对外接口。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; one, two, three &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./example.js\"</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"始终只读\"><a href=\"#始终只读\" class=\"headerlink\" title=\"始终只读\"></a>始终只读</h3><p><code>import</code> 加载的变量始终是<strong>只读</strong>的，不允许在加载模块的脚本里改写接口。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; one &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./example.js\"</span>;</span><br><span class=\"line\">one = &#123;&#125;; <span class=\"comment\">// 报错</span></span><br></pre></td></tr></table></figure>\n\n<p>但是：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; one &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./example.js\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 如果 one 是一个对象，改写其属性是允许的</span></span><br><span class=\"line\">one.abc = <span class=\"string\">'hello'</span>; <span class=\"comment\">// 不报错</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：在开发过程中，凡是加载的变量，都完全当做<strong>只读</strong>，不去修改它的值，才是正确的做法。</p>\n</blockquote>\n<h3 id=\"路径及后缀\"><a href=\"#路径及后缀\" class=\"headerlink\" title=\"路径及后缀\"></a>路径及后缀</h3><p>加载的文件路径相对绝对都可<code>.js</code> 后缀可省略。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"import-和-require\"><a href=\"#import-和-require\" class=\"headerlink\" title=\"import 和 require\"></a>import 和 require</h2><h2 id=\"使用别名\"><a href=\"#使用别名\" class=\"headerlink\" title=\"使用别名\"></a>使用别名</h2><p><code>import</code> 和 <code>export</code> 都可以使用别名输出和加载。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">one</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> two = <span class=\"string\">\"two\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过别名输出时可以多次输出同一数据</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;</span><br><span class=\"line\">    one <span class=\"keyword\">as</span> first,</span><br><span class=\"line\">    two <span class=\"keyword\">as</span> second,</span><br><span class=\"line\">    two <span class=\"keyword\">as</span> dierge</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; one <span class=\"keyword\">as</span> first &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"自动严格模式\"><a href=\"#自动严格模式\" class=\"headerlink\" title=\"自动严格模式\"></a>自动严格模式</h2><p>ES6 的模块会自动使用严格模式，无论文件头是否有 <code>&quot;use strict&quot;;</code></p>\n<h1 id=\"加载实现\"><a href=\"#加载实现\" class=\"headerlink\" title=\"加载实现\"></a>加载实现</h1><h2 id=\"浏览器环境\"><a href=\"#浏览器环境\" class=\"headerlink\" title=\"浏览器环境\"></a>浏览器环境</h2><h3 id=\"异步加载\"><a href=\"#异步加载\" class=\"headerlink\" title=\"异步加载\"></a>异步加载</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"module.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>默认情况下，浏览器加载 JavaScript 脚本时是同步加载的，渲染引擎遇到 <code>&lt;script&gt;</code> 标签就会停下来，等到执行完脚本，再继续向下渲染。如果加载的是外部脚本，必须加入脚本下载的时间。如果脚本太大，浏览器会出现『卡死』的状态，为了避免这种不好的体验，浏览器环境下允许异步加载脚本：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"module.js\"</span> <span class=\"attr\">defer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"module.js\"</span> <span class=\"attr\">async</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>defer</code> 和 <code>async</code> 的效果都是异步加载脚本，浏览器遇到时会开始下载外部脚本，但不会等待它下载和执行，而是会直接执行后面的命令，但二者也是有区别的：</p>\n<ul>\n<li><code>defer</code> 按顺序加载，渲染完页面再执行。</li>\n<li><code>async</code> 无法保证顺序加载，下载完就执行。</li>\n</ul>\n<h3 id=\"加载-ES6-模块\"><a href=\"#加载-ES6-模块\" class=\"headerlink\" title=\"加载 ES6 模块\"></a>加载 ES6 模块</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"module.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"module\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>浏览器对于 <code>type=&quot;module&quot;</code> 会自动使用异步加载，等同于使用了 <code>defer</code>，不会堵塞浏览器。</p>\n<p>同时也可以手动使用 <code>async</code>，模块在加载完后立即执行，但会影响多个模块的顺讯。</p>\n<p>使用外部模块时，有几点需要注意：</p>\n<ul>\n<li>代码是在模块作用域之中运行，而不是在全局作用域运行。模块内部的顶层变量，外部不可见。</li>\n<li>模块脚本自动采用严格模式，不管有没有声明 <code>use strict</code>。</li>\n<li>模块之中，可以使用 <code>import</code> 命令加载其他模块（ <code>.js</code> 后缀不可省略，需要提供绝对或相对 URL ），也可使用 <code>export</code> 命令输出对外接口。</li>\n<li>模块之中，顶层的 <code>this</code> 关键字返回 <code>undefined</code>，而不是指向 <code>window</code>。</li>\n<li>同一个模块如果加载多次，将只执行一次。</li>\n</ul>\n<p>利用顶层的 <code>this</code> 等于 <code>undefined</code> 这个语法点，可以侦测当前代码是否在 ES6 模块之中：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isNotModuleScript = <span class=\"keyword\">this</span> !== <span class=\"literal\">undefined</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"NODE-环境\"><a href=\"#NODE-环境\" class=\"headerlink\" title=\"NODE 环境\"></a>NODE 环境</h2><h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3>","categories":["JavaScript"]},{"title":"使用 let 和 const 替代 var","url":"/javascript/let-and-count/","content":"<p>ES6 中新增了两种命令 <code>let</code> 与 <code>const</code>，分别用来声明变量及常量，两者相同点在于：</p>\n<ul>\n<li>声明的变量/常量只在命令所在的代码块内有效；</li>\n<li>不会提升， 存在暂时性死区，只能在声明的位置后面使用；</li>\n<li>在同一作用域内，不允许重复声明；</li>\n<li>声明的数据不属于顶层对象 <code>window/global</code> 的属性；</li>\n</ul>\n<h2 id=\"let\"><a href=\"#let\" class=\"headerlink\" title=\"let\"></a>let</h2><p><code>let</code> 的用法类似于 <code>var</code>，但不同于 <code>var</code> 之处，除了上面与 <code>const</code> 的相同点外还在于 <code>let</code>：</p>\n<ul>\n<li>相当于为 JavaScript 新增了块级作用域 <code>{}</code>，使得 IIFE 匿名立即执行函数表达式 <code>(function() {})();</code> 不再必要；</li>\n<li>除了浏览器环境外，其他环境在块级作用域中声明函数都当做 <code>let</code> 处理，一般应尽量避免在块级作用域中声明函数，如实有必要，应该使用函数表达式形式而不是函数声明语句；</li>\n</ul>\n<h2 id=\"const\"><a href=\"#const\" class=\"headerlink\" title=\"const\"></a>const</h2><p><code>const</code> 声明的是一个只读的常量，声明后无法改变：</p>\n<ul>\n<li><p>必须在声明时赋值；</p>\n</li>\n<li><p>只能保证总是指向另一个固定的地址，但它指向的数据结构是不是可变的，是完全不能控制的；</p>\n</li>\n<li><p>因为上一条的原因， 将一个对象声明为常量必须非常小心； </p>\n</li>\n</ul>\n","categories":["JavaScript"]},{"title":"等待学习的知识点","url":"/javascript/waiting/waiting-to-learn/","content":"<p>npx</p>\n<p>npm-check + npx</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"ES6转码器『Babel』","url":"/javascript/babel/","content":"<blockquote>\n<p>大龄程序员的攀爬之旅从这里开始。</p>\n</blockquote>\n<h2 id=\"安装扩展\"><a href=\"#安装扩展\" class=\"headerlink\" title=\"安装扩展\"></a>安装扩展</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yarn add @babel/core -D</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h2><p><em>.babelrc</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;presets&quot;: [</span><br><span class=\"line\">    &quot;@babel/preset-env&quot;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;plugins&quot;: []</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>presets</code> 设定转码规则，官方提供：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 最新转码规则</span></span><br><span class=\"line\">$ yarn add @babel/preset-env -D</span><br><span class=\"line\"><span class=\"comment\"># react 转码规则</span></span><br><span class=\"line\">$ yarn add @babel/preset-react -D</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h2 id=\"命令行转码\"><a href=\"#命令行转码\" class=\"headerlink\" title=\"命令行转码\"></a>命令行转码</h2><p>安装扩展</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yarn add @babel/cli -D</span><br></pre></td></tr></table></figure>\n\n<p>基本用法</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 转码结果输出到标准输出</span></span><br><span class=\"line\">$ npx babel example.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入到文件</span></span><br><span class=\"line\">$ npx babel example.js -o compiled.js <span class=\"comment\"># -o == --out-file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 目录转码</span></span><br><span class=\"line\">$ npx babel src -d lib <span class=\"comment\"># -d == --out-dir</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成 source map</span></span><br><span class=\"line\">$ npx babel src -d lib -s</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"转码-API\"><a href=\"#转码-API\" class=\"headerlink\" title=\"转码 API\"></a>转码 API</h2><p>Babel 默认只转换新的 JavaScript 句法（syntax），而不转换新的 API， 比如<code>Iterator</code>、<code>Generator</code>、<code>Set</code>、<code>Map</code>、<code>Proxy</code>、<code>Reflect</code>、<code>Symbol</code>、<code>Promise</code>等全局对象，以及一些定义在全局对象上的方法（比如<code>Object.assign</code>）都不会转码。 </p>\n<p>如果需要转码 API， 必须使用<code>babel-polyfill</code>，为当前环境提供一个垫片。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yarn add @babel/polyfill -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'@babel/polyfill'</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Babel-API\"><a href=\"#Babel-API\" class=\"headerlink\" title=\"Babel API\"></a>Babel API</h2><p>在某些代码需要调用 Babel 的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWJlbGpzLmlvL2RvY3MvZW4vYmFiZWwtY29yZQ==\" title=\"https://babeljs.io/docs/en/babel-core\">API<i class=\"fa fa-external-link\"></i></span> 进行转码时，需要使用 <code>@babel/core</code> 模块。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> babel = <span class=\"built_in\">require</span>(<span class=\"string\">'@babel/core'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字符串转码</span></span><br><span class=\"line\">babel.transform(<span class=\"string\">'code();'</span>, options);</span><br><span class=\"line\"><span class=\"comment\">// =&gt; &#123; code, map, ast &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 文件转码（异步）</span></span><br><span class=\"line\">babel.transformFile(<span class=\"string\">'filename.js'</span>, options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, result</span>) </span>&#123;</span><br><span class=\"line\">  result; <span class=\"comment\">// =&gt; &#123; code, map, ast &#125;</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 文件转码（同步）</span></span><br><span class=\"line\">babel.transformFileSync(<span class=\"string\">'filename.js'</span>, options);</span><br><span class=\"line\"><span class=\"comment\">// =&gt; &#123; code, map, ast &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Babel AST转码</span></span><br><span class=\"line\">babel.transformFromAst(ast, code, options);</span><br><span class=\"line\"><span class=\"comment\">// =&gt; &#123; code, map, ast &#125;</span></span><br></pre></td></tr></table></figure>\n\n<p> 配置对象<code>options</code>，参看<span class=\"exturl\" data-url=\"aHR0cDovL2JhYmVsanMuaW8vZG9jcy91c2FnZS9vcHRpb25zLw==\" title=\"http://babeljs.io/docs/usage/options/\">官方文档<i class=\"fa fa-external-link\"></i></span>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// option 例子</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> es6Code = <span class=\"string\">'let x = n =&gt; n + 1'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> es5Code = <span class=\"built_in\">require</span>(<span class=\"string\">'@babel/core'</span>)</span><br><span class=\"line\">  .transform(es6Code, &#123;</span><br><span class=\"line\">    presets: [<span class=\"string\">'@babel/env'</span>]</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .code;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(es5Code);</span><br><span class=\"line\"><span class=\"comment\">// '\"use strict\";\\n\\nvar x = function x(n) &#123;\\n  return n + 1;\\n&#125;;'</span></span><br></pre></td></tr></table></figure>\n\n<p>上面代码中，<code>transform</code>方法的第一个参数是一个字符串，表示需要被转换的 ES6 代码，第二个参数是转换的配置对象。 </p>\n<h2 id=\"REPL\"><a href=\"#REPL\" class=\"headerlink\" title=\"REPL\"></a>REPL</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yarn add @babel/node -D</span><br></pre></td></tr></table></figure>\n\n<p>进入环境</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npx babel-node</span><br></pre></td></tr></table></figure>\n\n<p>可直接运行 ES6 脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npx babel-node example.js</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引用自动转码\"><a href=\"#引用自动转码\" class=\"headerlink\" title=\"引用自动转码\"></a>引用自动转码</h2><blockquote>\n<p>@babel/register 只对 require 命令加载的文件转码，且是实施转码，所以只适合开发环境使用。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yarn add @babel/register -D</span><br></pre></td></tr></table></figure>\n\n<p><em>index.js</em></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 先加载扩展</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'@babel/register'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 之后使用 require 加载的 .js|.jsx|.es|.es6 会自行转码</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'./example.js'</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ node index.js</span><br></pre></td></tr></table></figure>\n\n","categories":["JavaScript"]},{"title":"Font Awesome 图标字体库","url":"/third-party-services/fontawesome/","content":"<h2 id=\"安装扩展\"><a href=\"#安装扩展\" class=\"headerlink\" title=\"安装扩展\"></a>安装扩展</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install --save-dev @fortawesome/fontawesome-free</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引入文件\"><a href=\"#引入文件\" class=\"headerlink\" title=\"引入文件\"></a>引入文件</h2><figure class=\"highlight scss\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Font Awesome</span></span><br><span class=\"line\">@<span class=\"keyword\">import</span>  <span class=\"string\">'~@fortawesome/fontawesome-free/scss/fontawesome'</span>;</span><br><span class=\"line\">@<span class=\"keyword\">import</span>  <span class=\"string\">'~@fortawesome/fontawesome-free/scss/regular'</span>;</span><br><span class=\"line\">@<span class=\"keyword\">import</span>  <span class=\"string\">'~@fortawesome/fontawesome-free/scss/solid'</span>;</span><br><span class=\"line\">@<span class=\"keyword\">import</span>  <span class=\"string\">'~@fortawesome/fontawesome-free/scss/brands'</span>;</span><br></pre></td></tr></table></figure>\n\n","categories":["Third party Services"],"tags":["图标字体","Font Awesome"]},{"title":"Laravel 使用 HTMLPurifier 防范 XSS 攻击","url":"/laravel/purifier/","content":"<blockquote>\n<p>永远不要信任用户提交的数据。 </p>\n</blockquote>\n<h2 id=\"安装使用\"><a href=\"#安装使用\" class=\"headerlink\" title=\"安装使用\"></a>安装使用</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ composer require mews/purifier</span><br></pre></td></tr></table></figure>\n\n<p>开箱即用，使用 <code>clean</code> 就能过滤掉指定标签：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">clean(Input::get(<span class=\"string\">'inputname'</span>));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自定义配置\"><a href=\"#自定义配置\" class=\"headerlink\" title=\"自定义配置\"></a>自定义配置</h2><p>如果需要自定义过滤规则，可以通过发布命令发布资源：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan vendor:publish --provider=<span class=\"string\">\"Mews\\Purifier\\PurifierServiceProvider\"</span></span><br></pre></td></tr></table></figure>\n\n<p><em>config/purifier.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> [</span><br><span class=\"line\">    <span class=\"string\">'encoding'</span>      =&gt; <span class=\"string\">'UTF-8'</span>,</span><br><span class=\"line\">    <span class=\"string\">'finalize'</span>      =&gt; <span class=\"keyword\">true</span>,</span><br><span class=\"line\">    <span class=\"string\">'cachePath'</span>     =&gt; storage_path(<span class=\"string\">'app/purifier'</span>),</span><br><span class=\"line\">    <span class=\"string\">'cacheFileMode'</span> =&gt; <span class=\"number\">0755</span>,</span><br><span class=\"line\">    <span class=\"string\">'settings'</span>      =&gt; [</span><br><span class=\"line\">        <span class=\"string\">'default'</span> =&gt; [</span><br><span class=\"line\">            <span class=\"string\">'HTML.Doctype'</span>             =&gt; <span class=\"string\">'XHTML 1.0 Transitional'</span>,</span><br><span class=\"line\">            <span class=\"string\">'HTML.Allowed'</span>             =&gt; <span class=\"string\">'div,b,strong,i,em,a[href|title],ul,ol,ol[start],li,p[style],br,span[style],img[width|height|alt|src],*[style|class],pre,hr,code,h2,h3,h4,h5,h6,blockquote,del,table,thead,tbody,tr,th,td'</span>,</span><br><span class=\"line\">            <span class=\"string\">'CSS.AllowedProperties'</span>    =&gt; <span class=\"string\">'font,font-size,font-weight,font-style,margin,width,height,font-family,text-decoration,padding-left,color,background-color,text-align'</span>,</span><br><span class=\"line\">            <span class=\"string\">'AutoFormat.AutoParagraph'</span> =&gt; <span class=\"keyword\">true</span>,</span><br><span class=\"line\">            <span class=\"string\">'AutoFormat.RemoveEmpty'</span>   =&gt; <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">    ],</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"通过-Observe-自动过滤\"><a href=\"#通过-Observe-自动过滤\" class=\"headerlink\" title=\"通过 Observe 自动过滤\"></a>通过 Observe 自动过滤</h2><h3 id=\"创建注册\"><a href=\"#创建注册\" class=\"headerlink\" title=\"创建注册\"></a>创建注册</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan make:observer DiaryObserver</span><br></pre></td></tr></table></figure>\n\n<p><em>app/Providers/AppServiceProvider.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Diary::observe(DiaryObserver::class);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置自动过滤\"><a href=\"#配置自动过滤\" class=\"headerlink\" title=\"配置自动过滤\"></a>配置自动过滤</h3><p><em>app/Observers/DiaryObserver.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Observers</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">App</span>\\<span class=\"title\">Models</span>\\<span class=\"title\">Diary</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DiaryObserver</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">saving</span><span class=\"params\">(Diary $diary)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $diary-&gt;body = clean($diary-&gt;body);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":["Laravel"]},{"title":"Laravel Mix 编译前端资源","url":"/laravel/mix/","content":"<h2 id=\"运行-Mix\"><a href=\"#运行-Mix\" class=\"headerlink\" title=\"运行 Mix\"></a>运行 Mix</h2><h3 id=\"普通编译\"><a href=\"#普通编译\" class=\"headerlink\" title=\"普通编译\"></a>普通编译</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm run dev</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"压缩编译\"><a href=\"#压缩编译\" class=\"headerlink\" title=\"压缩编译\"></a>压缩编译</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm run production</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监听资源变化\"><a href=\"#监听资源变化\" class=\"headerlink\" title=\"监听资源变化\"></a>监听资源变化</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm run watch-poll</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h2 id=\"合并原生-css\"><a href=\"#合并原生-css\" class=\"headerlink\" title=\"合并原生 css\"></a>合并原生 css</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.styles([</span><br><span class=\"line\">    <span class=\"string\">'public/css/vendor/normalize.css'</span>,</span><br><span class=\"line\">    <span class=\"string\">'public/css/vendor/videojs.css'</span></span><br><span class=\"line\">], <span class=\"string\">'public/css/all.css'</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"css-预处理\"><a href=\"#css-预处理\" class=\"headerlink\" title=\"css 预处理\"></a>css 预处理</h2><h3 id=\"Stylus\"><a href=\"#Stylus\" class=\"headerlink\" title=\"Stylus\"></a>Stylus</h3><p>普通编译</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.stylus(<span class=\"string\">'resources/stylus/app.styl'</span>, <span class=\"string\">'public/css'</span>);</span><br></pre></td></tr></table></figure>\n\n<p>多次编译</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.stylus(<span class=\"string\">'resources/stylus/app.styl'</span>, <span class=\"string\">'public/css'</span>)</span><br><span class=\"line\">   .stylus(<span class=\"string\">'resources/stylus/admin.styl'</span>, <span class=\"string\">'public/css'</span>);</span><br></pre></td></tr></table></figure>\n\n<p>自定义输出文件名</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.stylus(<span class=\"string\">'resources/stylus/app.styl'</span>, <span class=\"string\">'public/stylesheets/styles.css'</span>);</span><br></pre></td></tr></table></figure>\n\n<p>以安装额外的 Stylus 插件， 需要先通过 npm 或 yarn 安装插件 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.stylus(<span class=\"string\">'resources/stylus/app.styl'</span>, <span class=\"string\">'public/css'</span>, &#123;</span><br><span class=\"line\">    <span class=\"keyword\">use</span>: [</span><br><span class=\"line\">        <span class=\"title\">require</span>('<span class=\"title\">rupture</span>')()</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Less\"><a href=\"#Less\" class=\"headerlink\" title=\"Less\"></a>Less</h3><p>普通编译</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.less(<span class=\"string\">'resources/less/app.less'</span>, <span class=\"string\">'public/css'</span>);</span><br></pre></td></tr></table></figure>\n\n<p> 覆盖隐含的 Less 插件选项</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.less(<span class=\"string\">'resources/less/app.less'</span>, <span class=\"string\">'public/css'</span>, &#123;</span><br><span class=\"line\">    strictMath: <span class=\"keyword\">true</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Sass\"><a href=\"#Sass\" class=\"headerlink\" title=\"Sass\"></a>Sass</h3><p>普通编译</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.sass(<span class=\"string\">'resources/sass/app.scss'</span>, <span class=\"string\">'public/css'</span>);</span><br></pre></td></tr></table></figure>\n\n<p>添加额外的 Node-Sass 插件选项</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.sass(<span class=\"string\">'resources/sass/app.sass'</span>, <span class=\"string\">'public/css'</span>, &#123;</span><br><span class=\"line\">    precision: <span class=\"number\">5</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"PostCSS\"><a href=\"#PostCSS\" class=\"headerlink\" title=\"PostCSS\"></a>PostCSS</h2><p>Mix 利用流行的 Autoprefixer 插件自动附加所有必要的 CSS3 第三方前缀。也可以自由添加所需的任何附加插件。安装插件后直接调用即可。 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.sass(<span class=\"string\">'resources/sass/app.scss'</span>, <span class=\"string\">'public/css'</span>)</span><br><span class=\"line\">   .options(&#123;</span><br><span class=\"line\">        postCss: [</span><br><span class=\"line\">            <span class=\"keyword\">require</span>(<span class=\"string\">'postcss-css-variables'</span>)()</span><br><span class=\"line\">        ]</span><br><span class=\"line\">   &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sourceMaps\"><a href=\"#sourceMaps\" class=\"headerlink\" title=\"sourceMaps\"></a>sourceMaps</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.js(<span class=\"string\">'resources/js/app.js'</span>, <span class=\"string\">'public/js'</span>).sourceMaps();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"禁用-URL-处理\"><a href=\"#禁用-URL-处理\" class=\"headerlink\" title=\"禁用 URL 处理\"></a>禁用 URL 处理</h2><p>Mix 是基于 Webpack 构建的， 对于 CSS 编译，Webpack 将重写和优化任何带有样式表的 <code>url()</code> 调用。 </p>\n<figure class=\"highlight scss\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Webpack 将找到 example.png, 将其复制到 public/images 文件夹，然后重写生成的样式表中的 url()</span></span><br><span class=\"line\"><span class=\"comment\">// scss</span></span><br><span class=\"line\"><span class=\"attribute\">background</span>: url(<span class=\"string\">'../images/example.png'</span>);</span><br><span class=\"line\"><span class=\"comment\">// css</span></span><br><span class=\"line\"><span class=\"attribute\">background</span>: url(/images/example.png?d41d8cd98f00b204e9800998ecf8427e);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：任何给定 <code>url()</code> 的绝对路径将被排除在 URL 重写之外。例如 <code>url(&#39;/images/thing.png&#39;)</code> 或 <code>url(&#39;http://example.com/images/thing.png&#39;)</code> 将不会被修改。 </p>\n</blockquote>\n<p>但是在某些情况下，对已有文件夹结构可能已经按预期做了配置，此时可以禁用此功能：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.sass(<span class=\"string\">'resources/app/app.scss'</span>, <span class=\"string\">'public/css'</span>)</span><br><span class=\"line\">   .options(&#123;</span><br><span class=\"line\">      processCssUrls: <span class=\"keyword\">false</span></span><br><span class=\"line\">   &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>此时，Mix 将不再匹配任何 <code>url()</code> 或者复制资源到 public 目录，编译后的 CSS 看上去和你原来输入的内容一样 。</p>\n","categories":["Laravel"]},{"title":"Laravel 使用 Quill 富文本编辑器","url":"/laravel/quill/","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yarn add quill -D</span><br></pre></td></tr></table></figure>\n\n<p><em>webpacl.mix.js</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">mix.copy(<span class=\"string\">'node_modules/quill/dist/quill.snow.css'</span>, <span class=\"string\">'public/css'</span>)</span><br><span class=\"line\">  .copy(<span class=\"string\">'node_modules/quill/dist/quill.js'</span>, <span class=\"string\">'public/js'</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模板调用\"><a href=\"#模板调用\" class=\"headerlink\" title=\"模板调用\"></a>模板调用</h2><p><em>x.blade.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"toolbar&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;span class=\"</span>ql-formats<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;select class=\"</span>ql-size<span class=\"string\">\"&gt;&lt;/select&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-header<span class=\"string\">\" value=\"</span><span class=\"number\">1</span><span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-header<span class=\"string\">\" value=\"</span><span class=\"number\">2</span><span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-bold<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-italic<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-underline<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-strike<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;select class=\"</span>ql-align<span class=\"string\">\"&gt;&lt;/select&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;select class=\"</span>ql-color<span class=\"string\">\"&gt;&lt;/select&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;select class=\"</span>ql-background<span class=\"string\">\"&gt;&lt;/select&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-blockquote<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-code-block<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;span class=\"</span>ql-formats<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-<span class=\"keyword\">list</span><span class=\"string\">\" value=\"</span>ordered<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-<span class=\"keyword\">list</span><span class=\"string\">\" value=\"</span>bullet<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-indent<span class=\"string\">\" value=\"</span><span class=\"number\">-1</span><span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-indent<span class=\"string\">\" value=\"</span>+<span class=\"number\">1</span><span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;span class=\"</span>ql-formats<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-link<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-image<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-video<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;span class=\"</span>ql-formats<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button class=\"</span>ql-clean<span class=\"string\">\"&gt;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;div id=\"</span>editor<span class=\"string\">\"&gt;&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;input type=\"</span>hidden<span class=\"string\">\" id=\"</span>body<span class=\"string\">\" name=\"</span>body<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#123;&#123;-- Quill --&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">@push('styles')</span></span><br><span class=\"line\"><span class=\"string\">  &lt;link rel=\"</span>stylesheet<span class=\"string\">\" href=\"</span>&#123;&#123; mix(<span class=\"string\">'css/quill.snow.css'</span>) &#125;&#125;<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">@endpush</span></span><br><span class=\"line\"><span class=\"string\">@push('scripts')</span></span><br><span class=\"line\"><span class=\"string\">  &lt;script src=\"</span>&#123;&#123; mix(<span class=\"string\">'js/quill.js'</span>) &#125;&#125;<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;script&gt;</span></span><br><span class=\"line\"><span class=\"string\">      var quill = new Quill('#editor', &#123;</span></span><br><span class=\"line\"><span class=\"string\">          theme: 'snow',</span></span><br><span class=\"line\"><span class=\"string\">          modules: &#123;</span></span><br><span class=\"line\"><span class=\"string\">              toolbar: '#toolbar'</span></span><br><span class=\"line\"><span class=\"string\">          &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      &#125;);</span></span><br><span class=\"line\"><span class=\"string\">      // 监视文本变动 自动赋值到 input</span></span><br><span class=\"line\"><span class=\"string\">      quill.on('text-change', function(delta, oldDelta, source) &#123;</span></span><br><span class=\"line\"><span class=\"string\">          $(\"</span>input[name=body]<span class=\"string\">\").val(quill.container.firstChild.innerHTML);</span></span><br><span class=\"line\"><span class=\"string\">      &#125;);</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">@endpush</span></span><br></pre></td></tr></table></figure>\n\n","categories":["Laravel"]},{"title":"Laravel Blade 模板语法","url":"/laravel/blade/","content":"<h2 id=\"模板继承\"><a href=\"#模板继承\" class=\"headerlink\" title=\"模板继承\"></a>模板继承</h2><h3 id=\"endsection-和-show\"><a href=\"#endsection-和-show\" class=\"headerlink\" title=\"@endsection 和 @show\"></a>@endsection 和 @show</h3><p><code>@section()</code> 可以使用多种结尾，不同的结尾有不同的含义：</p>\n<ul>\n<li><code>@endsection</code> 定义一个片段的结尾</li>\n<li><code>@show</code> 定义的同时 <strong>立即 yield</strong> 这个片段</li>\n</ul>\n<h3 id=\"追加内容到父模板\"><a href=\"#追加内容到父模板\" class=\"headerlink\" title=\"追加内容到父模板\"></a>追加内容到父模板</h3><p>在子模板中，可以使用 <code>@parent</code> 来为父模板追加内容，而不是覆盖父模板。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@extends(<span class=\"string\">'layouts.app'</span>)</span><br><span class=\"line\">@section(<span class=\"string\">'sidebar'</span>)</span><br><span class=\"line\">    @<span class=\"keyword\">parent</span></span><br><span class=\"line\">    &lt;!-- 下面这个 p 会追加到父模板的 sidebar 中 --&gt;</span><br><span class=\"line\">    &lt;p&gt;This is appended to the master sidebar.&lt;/p&gt;</span><br><span class=\"line\">@endsection</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h2 id=\"渲染数据\"><a href=\"#渲染数据\" class=\"headerlink\" title=\"渲染数据\"></a>渲染数据</h2><h3 id=\"不转义字符\"><a href=\"#不转义字符\" class=\"headerlink\" title=\"不转义字符\"></a>不转义字符</h3><p>Blade 双花括号 语句会自动使用 PHP 的 <code>htmlspecialchars</code> 函数传递来防范 XSS 攻击，如果不希望数据被转义，可以使用： </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;!! $name !!&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Array-gt-JSON\"><a href=\"#Array-gt-JSON\" class=\"headerlink\" title=\"Array =&gt; JSON\"></a>Array =&gt; JSON</h3><p>在向 JavaScript 传递数据时有时候会传递一个数组，并将其渲染成 JSON 格式，但在 blade 模板中不应该使用 <code>json_encode</code>，Laravel 提供了 <code>@json</code> 指令来解决这一需求，其和 <code>json_encode</code> 具有相同的参数：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> app = @json($array);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> app = @json($array, JSON_PRETTY_PRINT);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"禁用双重编码\"><a href=\"#禁用双重编码\" class=\"headerlink\" title=\"禁用双重编码\"></a>禁用双重编码</h3><p> 默认情况下，Blade（和 Laravel 的 <code>e</code> 助手函数）将对 HTML 实体进行双重编码， 如果需要禁用：</p>\n<p><em>app/Providers/AppServiceProvider.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Support</span>\\<span class=\"title\">Facades</span>\\<span class=\"title\">Blade</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Blade::withoutDoubleEncoding();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"blade-兼容-js-框架\"><a href=\"#blade-兼容-js-框架\" class=\"headerlink\" title=\"blade 兼容 js 框架\"></a>blade 兼容 js 框架</h3><p>许多 JavaScript 框架也使用 花括号 语法来表示预设的表达式应该显示在浏览器中，为了避免冲突，可以使用 <code>@</code> 符号通知 Blade 渲染引擎表达式应保持不变：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Hello, @&#123;&#123; name &#125;&#125;.</span><br></pre></td></tr></table></figure>\n\n<p>这里，<code>@</code> 会被 blade 自动删除，而值将交由 js 引擎渲染处理。</p>\n<p>如果有整段的 js 变量，可以嵌套进 <code>@verbatim</code>，这样就不必每一个都加 <code>@</code>了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@verbatim</span><br><span class=\"line\">    &lt;div class=\"container\"&gt;</span><br><span class=\"line\">        Hello, &#123;&#123; name &#125;&#125;.</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">@endverbatim</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"控制结构\"><a href=\"#控制结构\" class=\"headerlink\" title=\"控制结构\"></a>控制结构</h2><h3 id=\"除非-unless\"><a href=\"#除非-unless\" class=\"headerlink\" title=\"除非 @unless\"></a>除非 @unless</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@unless (Auth::check())</span><br><span class=\"line\">    <span class=\"comment\">// 除非已登录不然就显示</span></span><br><span class=\"line\">    <span class=\"comment\">// 在这里本质上和 @guest 一个意思</span></span><br><span class=\"line\">@endunless</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"存在-isset\"><a href=\"#存在-isset\" class=\"headerlink\" title=\"存在 @isset\"></a>存在 @isset</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">isset</span>($records)</span><br><span class=\"line\">    <span class=\"comment\">// 找到记录时</span></span><br><span class=\"line\">@endisset</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"为空-empty\"><a href=\"#为空-empty\" class=\"headerlink\" title=\"为空 @empty\"></a>为空 @empty</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">empty</span>($records)</span><br><span class=\"line\">    <span class=\"comment\">// 记录为空时</span></span><br><span class=\"line\">@endempty</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"身份验证-auth-和-guest\"><a href=\"#身份验证-auth-和-guest\" class=\"headerlink\" title=\"身份验证 @auth 和 @guest\"></a>身份验证 @auth 和 @guest</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@auth</span><br><span class=\"line\">    <span class=\"comment\">// 已登录</span></span><br><span class=\"line\">@endauth</span><br><span class=\"line\"></span><br><span class=\"line\">@guest</span><br><span class=\"line\">    <span class=\"comment\">// 未登录</span></span><br><span class=\"line\">@endguest</span><br></pre></td></tr></table></figure>\n\n<p>在需要时，<code>@auth</code> 和 <code>@guest</code> 可以指定应被效验的身份验证</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@auth(<span class=\"string\">'admin'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 用户有管理权限</span></span><br><span class=\"line\">@endauth</span><br><span class=\"line\"></span><br><span class=\"line\">@guest(<span class=\"string\">'admin'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 用户无管理权限</span></span><br><span class=\"line\">@endguest</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"片段指令-hasSection\"><a href=\"#片段指令-hasSection\" class=\"headerlink\" title=\"片段指令 @hasSection\"></a>片段指令 @hasSection</h3><p> 检查片段是否包含指定内容：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@hasSection(<span class=\"string\">'navigation'</span>)</span><br><span class=\"line\">    &lt;div class=\"pull-right\"&gt;</span><br><span class=\"line\">        @<span class=\"keyword\">yield</span>(<span class=\"string\">'navigation'</span>)</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=\"clearfix\"&gt;&lt;/div&gt;</span><br><span class=\"line\">@<span class=\"keyword\">endif</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"循环-forelse\"><a href=\"#循环-forelse\" class=\"headerlink\" title=\"循环 @forelse\"></a>循环 @forelse</h3> <figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@forelse ($users <span class=\"keyword\">as</span> $user)</span><br><span class=\"line\">    &lt;li&gt;&#123;&#123; $user-&gt;name &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">@<span class=\"keyword\">empty</span></span><br><span class=\"line\">    &lt;p&gt;No users&lt;/p&gt;</span><br><span class=\"line\">@endforelse</span><br></pre></td></tr></table></figure>\n\n<p>在循环中可以使用 <code>@break</code> 和 <code>@continue</code> 跳过当前迭代和结束循环，这两个指令也可以声明条件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">foreach</span> ($users <span class=\"keyword\">as</span> $user)</span><br><span class=\"line\">    @<span class=\"keyword\">continue</span>($user-&gt;type == <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;li&gt;&#123;&#123; $user-&gt;name &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"keyword\">break</span>($user-&gt;number == <span class=\"number\">5</span>)</span><br><span class=\"line\">@<span class=\"keyword\">endforeach</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"循环变量-loop-和-parent\"><a href=\"#循环变量-loop-和-parent\" class=\"headerlink\" title=\"循环变量 @loop 和 parent\"></a>循环变量 @loop 和 parent</h3><p>循环过程中，在循环体内有一个可用的 <code>$loop</code> 变量。该变量提供了用于访问诸如当前循环的索引、当前是否为第一次或最后一次循环之类的少数有用的信息的途径： </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">foreach</span> ($users <span class=\"keyword\">as</span> $user)</span><br><span class=\"line\">    @<span class=\"keyword\">if</span> ($loop-&gt;first)</span><br><span class=\"line\">        This is the first iteration.</span><br><span class=\"line\">    @<span class=\"keyword\">endif</span></span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"keyword\">if</span> ($loop-&gt;last)</span><br><span class=\"line\">        This is the last iteration.</span><br><span class=\"line\">    @<span class=\"keyword\">endif</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;p&gt;This is user &#123;&#123; $user-&gt;id &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">@<span class=\"keyword\">endforeach</span></span><br></pre></td></tr></table></figure>\n\n<p>在嵌套循环中，还可以借助 <code>parent</code> 属性访问父循环的 <code>$loop</code> 变量： </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">foreach</span> ($users <span class=\"keyword\">as</span> $user)</span><br><span class=\"line\">    @<span class=\"keyword\">foreach</span> ($user-&gt;posts <span class=\"keyword\">as</span> $post)</span><br><span class=\"line\">        @<span class=\"keyword\">if</span> ($loop-&gt;parent-&gt;first)</span><br><span class=\"line\">            This is first iteration of the <span class=\"keyword\">parent</span> loop.</span><br><span class=\"line\">        @<span class=\"keyword\">endif</span></span><br><span class=\"line\">    @<span class=\"keyword\">endforeach</span></span><br><span class=\"line\">@<span class=\"keyword\">endforeach</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>$loop-&gt;index</code></td>\n<td>当前迭代的索引 (从 0 开始计数)。</td>\n</tr>\n<tr>\n<td><code>$loop-&gt;iteration</code></td>\n<td>当前循环迭代 (从 1 开始计算)。</td>\n</tr>\n<tr>\n<td><code>$loop-&gt;remaining</code></td>\n<td>循环中剩余迭代的数量。</td>\n</tr>\n<tr>\n<td><code>$loop-&gt;count</code></td>\n<td>被迭代的数组元素的总数。</td>\n</tr>\n<tr>\n<td><code>$loop-&gt;first</code></td>\n<td>是否为循环的第一次迭代。</td>\n</tr>\n<tr>\n<td><code>$loop-&gt;last</code></td>\n<td>是否为循环的最后一次迭代。</td>\n</tr>\n<tr>\n<td><code>$loop-&gt;even</code></td>\n<td>是否是循环中的偶数迭代。</td>\n</tr>\n<tr>\n<td><code>$loop-&gt;odd</code></td>\n<td>是否是循环中的奇数迭代。</td>\n</tr>\n<tr>\n<td><code>$loop-&gt;depth</code></td>\n<td>当前迭代的嵌套深度级数。</td>\n</tr>\n<tr>\n<td><code>$loop-&gt;parent</code></td>\n<td>嵌套循环中，父循环的循环变量。</td>\n</tr>\n</tbody></table>\n<h2 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h2><h3 id=\"CSRF-域-csrf\"><a href=\"#CSRF-域-csrf\" class=\"headerlink\" title=\"CSRF 域 @csrf\"></a>CSRF 域 @csrf</h3><p>所有 html 表单，都需要定义 CSRF令牌域。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;form method=<span class=\"string\">\"POST\"</span> action=<span class=\"string\">\"/profile\"</span>&gt;</span><br><span class=\"line\">    @csrf</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Method-域-method\"><a href=\"#Method-域-method\" class=\"headerlink\" title=\"Method 域 @method\"></a>Method 域 @method</h3><p>html 表单不能发出 <code>put</code>, <code>patch</code>, <code>delete</code> 等请求，需要使用 <code>@method</code> 指令模仿动作。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;form action=<span class=\"string\">\"/foo/bar\"</span> method=<span class=\"string\">\"POST\"</span>&gt;</span><br><span class=\"line\">    @method(<span class=\"string\">'PUT'</span>)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"验证错误-error\"><a href=\"#验证错误-error\" class=\"headerlink\" title=\"验证错误 @error\"></a>验证错误 @error</h3><p><code>@error</code> 指令可以快速检查验证错误消息是否存在，并且还可以使用 <code>@message</code> 输出验证错误。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;input id=\"title\" type=\"text\" class=\"@error('title') is-invalid @enderror\"&gt;</span><br><span class=\"line\">@error(<span class=\"string\">'title'</span>)</span><br><span class=\"line\">    &lt;div class=\"alert alert-danger\"&gt;&#123;&#123; $message &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">@enderror</span><br></pre></td></tr></table></figure>\n\n<p><code>@error</code> 可以指定错误验证字段名作为第二个参数， 去获取验证错误内容并可以通过多种形式展示在页面上：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;input id=\"email\" type=\"email\" class=\"@error('email', 'login') is-invalid @enderror\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">@error(<span class=\"string\">'email'</span>, <span class=\"string\">'login'</span>)</span><br><span class=\"line\">    &lt;div class=\"alert alert-danger\"&gt;&#123;&#123; $message &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">@enderror</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引入子视图\"><a href=\"#引入子视图\" class=\"headerlink\" title=\"引入子视图\"></a>引入子视图</h2><h3 id=\"存在引入-includeIf\"><a href=\"#存在引入-includeIf\" class=\"headerlink\" title=\"存在引入 @includeIf\"></a>存在引入 @includeIf</h3><p>使用 <code>@include</code> 时，如果传递了一个不存在的视图会报错，如果不确定视图是否存在，可以使用：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@includeIf(<span class=\"string\">'view.name'</span>, [<span class=\"string\">'some'</span> =&gt; <span class=\"string\">'data'</span>])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"条件引入-includeWhen\"><a href=\"#条件引入-includeWhen\" class=\"headerlink\" title=\"条件引入 @includeWhen\"></a>条件引入 @includeWhen</h3><p>需要包含一个依赖于给定布尔条件的视图，可以使用 ：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@includeWhen($boolean, <span class=\"string\">'view.name'</span>, [<span class=\"string\">'some'</span> =&gt; <span class=\"string\">'data'</span>])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"引入第一个存在-includeFirst\"><a href=\"#引入第一个存在-includeFirst\" class=\"headerlink\" title=\"引入第一个存在 @includeFirst\"></a>引入第一个存在 @includeFirst</h3><p>要引用给定视图数组中第一个存在的视图，可以使用： </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@includeFirst([<span class=\"string\">'custom.admin'</span>, <span class=\"string\">'admin'</span>], [<span class=\"string\">'some'</span> =&gt; <span class=\"string\">'data'</span>])</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"视图别名\"><a href=\"#视图别名\" class=\"headerlink\" title=\"视图别名\"></a>视图别名</h2><p>假如有一个视图</p>\n<p><em>resources/views/includes/input.blade.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">\"&#123;&#123; $type ?? 'text' &#125;&#125;\"</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p>注册别名</p>\n<p><em>app/Providers/AppServiceProvider.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Support</span>\\<span class=\"title\">Facades</span>\\<span class=\"title\">Blade</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Blade::include(<span class=\"string\">'includes.input'</span>, <span class=\"string\">'input'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样就可以像 blade 指令一样渲染视图</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@input([<span class=\"string\">'type'</span> =&gt; <span class=\"string\">'email'</span>])</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"堆栈\"><a href=\"#堆栈\" class=\"headerlink\" title=\"堆栈\"></a>堆栈</h2><p>Blade 允许将视图压入堆栈，这些视图能够在其它视图或布局中被渲染。</p>\n<p><strong>这在子视图中指定需要的 JavaScript 库时非常有用</strong>：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@push(<span class=\"string\">'scripts'</span>)</span><br><span class=\"line\">    &lt;script src=<span class=\"string\">\"/example.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">@endpush</span><br></pre></td></tr></table></figure>\n\n<p>如果需要，可以多次压入堆栈。通过向 <code>@stack</code> 指令传递堆栈名称来完成堆栈内容的渲染： </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;!-- 头部内容 --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    @stack(<span class=\"string\">'scripts'</span>)</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n\n<p> 如果想要将内容预置在栈顶，需要使用 <code>@prepend</code> 指令： </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@push(<span class=\"string\">'scripts'</span>)</span><br><span class=\"line\">    This will be second...</span><br><span class=\"line\">@endpush</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 然后...</span></span><br><span class=\"line\"></span><br><span class=\"line\">@prepend(<span class=\"string\">'scripts'</span>)</span><br><span class=\"line\">    This will be first...</span><br><span class=\"line\">@endprepend</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>blade 允许在视图中注释，且注释不会渲染到 html 中。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123;-- comment --&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"原生-PHP\"><a href=\"#原生-PHP\" class=\"headerlink\" title=\"原生 PHP\"></a>原生 PHP</h2><p>在某些情况下，需要直接在 blade 中书写 PHP 代码，这时候可以：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@php</span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">@endphp</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"没整理\"><a href=\"#没整理\" class=\"headerlink\" title=\"没整理\"></a>没整理</h2><h3 id=\"组件和插槽\"><a href=\"#组件和插槽\" class=\"headerlink\" title=\"组件和插槽\"></a>组件和插槽</h3><h3 id=\"为集合渲染视图\"><a href=\"#为集合渲染视图\" class=\"headerlink\" title=\"为集合渲染视图\"></a>为集合渲染视图</h3><h3 id=\"Service-注入\"><a href=\"#Service-注入\" class=\"headerlink\" title=\"Service 注入\"></a>Service 注入</h3><h3 id=\"扩展-Blade\"><a href=\"#扩展-Blade\" class=\"headerlink\" title=\"扩展 Blade\"></a>扩展 Blade</h3>","categories":["Laravel"]},{"title":"Laravel 自定义中间件为请求添加 Accept Header","url":"/laravel/accept-header/","content":"<blockquote>\n<p>api 开发时需要客户端发送  Accept Header 来告知服务端如何返回数据，但不可避免的有些时候客户端无法正确设置，在 Laravel 中可以通过自定义中间件来添加默认 Accept Header。</p>\n<p><strong>但还是推荐所有客户端正确设置 Accept Header。</strong></p>\n</blockquote>\n<h2 id=\"创建中间件\"><a href=\"#创建中间件\" class=\"headerlink\" title=\"创建中间件\"></a>创建中间件</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan make:middleware AcceptHeader</span><br></pre></td></tr></table></figure>\n\n<p><em>app/Http/Middleware/AcceptHeader.php</em> </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Http</span>\\<span class=\"title\">Middleware</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Closure</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AcceptHeader</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle</span><span class=\"params\">($request, Closure $next)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $request-&gt;headers-&gt;set(<span class=\"string\">'Accept'</span>, <span class=\"string\">'application/json'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> $next($request);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"注册中间件\"><a href=\"#注册中间件\" class=\"headerlink\" title=\"注册中间件\"></a>注册中间件</h2><p><em>app/Http/Kernel.php</em> </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> $middlewareGroups = [</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"string\">'api'</span> =&gt; [</span><br><span class=\"line\">        \\App\\Http\\Middleware\\AcceptHeader::class,</span><br><span class=\"line\">        <span class=\"string\">'throttle:60,1'</span>,</span><br><span class=\"line\">        <span class=\"string\">'bindings'</span>,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p>到这里就算客户端无法正确设置 Accept 头的时候也能正常工作了，<strong>但是还是推荐所有客户端正确设置 Accept 头</strong>。</p>\n","categories":["Laravel"]},{"title":"Laravel 使用 laravel-permission 快速生成用户权限","url":"/laravel/permission/","content":"","categories":["Laravel"]},{"title":"Laravel 使用 socialiteproviders 实现微信授权登录","url":"/laravel/socialiteproviders/","content":"<h2 id=\"安装扩展\"><a href=\"#安装扩展\" class=\"headerlink\" title=\"安装扩展\"></a>安装扩展</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb2NpYWxpdGVwcm92aWRlcnMubmV0bGlmeS5jb20vcHJvdmlkZXJzL3dlaXhpbi5odG1s\" title=\"https://socialiteproviders.netlify.com/providers/weixin.html\">官方文档<i class=\"fa fa-external-link\"></i></span></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ composer require socialiteproviders/weixin</span><br></pre></td></tr></table></figure>\n\n<p><em>app/Providers/EventServiceProvider.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> $listen = [</span><br><span class=\"line\">    \\SocialiteProviders\\Manager\\SocialiteWasCalled::class =&gt; [</span><br><span class=\"line\">        <span class=\"string\">'SocialiteProviders\\\\Weixin\\\\WeixinExtendSocialite@handle'</span>,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p><em>config/services.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'weixin'</span> =&gt; [</span><br><span class=\"line\">    <span class=\"string\">'client_id'</span> =&gt; env(<span class=\"string\">'WEIXIN_KEY'</span>),</span><br><span class=\"line\">    <span class=\"string\">'client_secret'</span> =&gt; env(<span class=\"string\">'WEIXIN_SECRET'</span>),</span><br><span class=\"line\">    <span class=\"string\">'redirect'</span> =&gt; env(<span class=\"string\">'WEIXIN_REDIRECT_URI'</span>)</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<p><em>.env</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">WEIXIN_KEY=</span><br><span class=\"line\">WEIXIN_SECRET=</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"授权登录\"><a href=\"#授权登录\" class=\"headerlink\" title=\"授权登录\"></a>授权登录</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$code = <span class=\"string\">'CODE'</span>;</span><br><span class=\"line\"><span class=\"comment\">// 使用微信作为驱动 调取 config/services.php 中配置的 id 和 secret</span></span><br><span class=\"line\">$driver = Socialite::driver(<span class=\"string\">'weixin'</span>);</span><br><span class=\"line\">$response = $driver-&gt;getAccessTokenResponse($code);</span><br><span class=\"line\"><span class=\"comment\">// 设置 open_id</span></span><br><span class=\"line\">$driver = setOpenId($response[<span class=\"string\">'openid'</span>]);</span><br><span class=\"line\"><span class=\"comment\">// 通过 access_token 获取用户信息</span></span><br><span class=\"line\">$oauthUser = $driver-&gt;userFromToken($response[<span class=\"string\">'access_token'</span>]);</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"微信授权登录流程\"><a href=\"#微信授权登录流程\" class=\"headerlink\" title=\"微信授权登录流程\"></a>微信授权登录流程</h2><h3 id=\"用户授权，通过-appid-换取-code\"><a href=\"#用户授权，通过-appid-换取-code\" class=\"headerlink\" title=\"用户授权，通过 appid 换取 code\"></a>用户授权，通过 appid 换取 code</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>appid</code> 为授权公众号的唯一标识 </li>\n<li><code>redirect_uri</code> 为回调链接，需要对链接 <code>urlEncode</code></li>\n<li><code>scope</code> 可选 <code>snsapi_base | snsapi_userinfo</code></li>\n<li><code>state</code> 可自定义</li>\n</ul>\n<p>用户同意授权后会跳转到 <code>redirect_uri/?code=CODE&amp;state=STATE</code></p>\n<h3 id=\"通过-code-换取-access-token-及-openid\"><a href=\"#通过-code-换取-access-token-及-openid\" class=\"headerlink\" title=\"通过 code 换取 access_token 及 openid\"></a>通过 code 换取 access_token 及 openid</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>appid</code> 授权公众号的唯一标识 </li>\n<li><code>secret</code> 授权公众号的 appsecret</li>\n<li><code>code</code> 上一步获取的 code 参数</li>\n</ul>\n<p>正确调用时会返回一个 JSON 数据，其中包含 <code>access_token</code> 以及 <code>openid</code>。</p>\n<h3 id=\"拉取用户信息\"><a href=\"#拉取用户信息\" class=\"headerlink\" title=\"拉取用户信息\"></a>拉取用户信息</h3><blockquote>\n<p>拉取用户信息需要 <code>scope</code> 为 <code>snsapi_userinfo</code></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&amp;openid=OPENID&amp;lang=zh_CN</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>access_token</code> 上一步获取的 <code>access_token</code> </li>\n<li><code>openid</code> 上一步获取的 <code>openid</code> </li>\n</ul>\n<p>正确调用时会返回 JSON 格式的用户数据。</p>\n<h2 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLndlaXhpbi5xcS5jb20vZG9jL29mZmlhY2NvdW50L09BX1dlYl9BcHBzL1dlY2hhdF93ZWJwYWdlX2F1dGhvcml6YXRpb24uaHRtbA==\" title=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html\">官方文档<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Laravel"]},{"title":"Laravel 使用 Easy SMS 发送短信验证码","url":"/laravel/easy-sms/","content":"<blockquote>\n<p>在开发过程中，短信验证码是不可缺少的一部分，现在各种 应用 都会绑定手机做实名制验证。</p>\n</blockquote>\n<h2 id=\"安装扩展\"><a href=\"#安装扩展\" class=\"headerlink\" title=\"安装扩展\"></a>安装扩展</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ composer require overtrue/easy-sms</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h2 id=\"封装-Provider\"><a href=\"#封装-Provider\" class=\"headerlink\" title=\"封装 Provider\"></a>封装 Provider</h2><blockquote>\n<p>由于该组件还没有 Laravel 的 ServiceProvider，需要自己封装。 </p>\n</blockquote>\n<h3 id=\"创建配置文件\"><a href=\"#创建配置文件\" class=\"headerlink\" title=\"创建配置文件\"></a>创建配置文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ touch config/easysms.php</span><br></pre></td></tr></table></figure>\n\n<p><em>config/easysms.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> [</span><br><span class=\"line\">    <span class=\"comment\">// HTTP 请求的超时时间（秒）</span></span><br><span class=\"line\">    <span class=\"string\">'timeout'</span> =&gt; <span class=\"number\">10.0</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 默认发送配置</span></span><br><span class=\"line\">    <span class=\"string\">'default'</span> =&gt; [</span><br><span class=\"line\">        <span class=\"comment\">// 网关调用策略，默认：顺序调用</span></span><br><span class=\"line\">        <span class=\"string\">'strategy'</span> =&gt; \\Overtrue\\EasySms\\Strategies\\OrderStrategy::class,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 默认可用的发送网关</span></span><br><span class=\"line\">        <span class=\"string\">'gateways'</span> =&gt; [</span><br><span class=\"line\">            <span class=\"string\">'aliyun'</span>,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"comment\">// 可用的网关配置</span></span><br><span class=\"line\">    <span class=\"string\">'gateways'</span> =&gt; [</span><br><span class=\"line\">        <span class=\"string\">'errorlog'</span> =&gt; [</span><br><span class=\"line\">            <span class=\"string\">'file'</span> =&gt; <span class=\"string\">'/tmp/easy-sms.log'</span>,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"string\">'aliyun'</span> =&gt; [</span><br><span class=\"line\">            <span class=\"string\">'access_key_id'</span> =&gt; env(<span class=\"string\">'SMS_ALIYUN_ACCESS_KEY_ID'</span>),</span><br><span class=\"line\">            <span class=\"string\">'access_key_secret'</span> =&gt; env(<span class=\"string\">'SMS_ALIYUN_ACCESS_KEY_SECRET'</span>),</span><br><span class=\"line\">            <span class=\"string\">'sign_name'</span> =&gt; <span class=\"string\">'Larabbs'</span>,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">    ],</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建-ServiceProvider\"><a href=\"#创建-ServiceProvider\" class=\"headerlink\" title=\"创建 ServiceProvider\"></a>创建 ServiceProvider</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan make:provider EasySmsServiceProvider</span><br></pre></td></tr></table></figure>\n\n<p><em>app/providers/EasySmsServiceProvider.php</em> </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Providers</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Overtrue</span>\\<span class=\"title\">EasySms</span>\\<span class=\"title\">EasySms</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Support</span>\\<span class=\"title\">ServiceProvider</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EasySmsServiceProvider</span> <span class=\"keyword\">extends</span> <span class=\"title\">ServiceProvider</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">register</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;app-&gt;singleton(EasySms::class, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($app)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> EasySms(config(<span class=\"string\">'easysms'</span>));</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;app-&gt;alias(EasySms::class, <span class=\"string\">'easysms'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注册-ServiceProvider\"><a href=\"#注册-ServiceProvider\" class=\"headerlink\" title=\"注册 ServiceProvider\"></a>注册 ServiceProvider</h3><p><em>config/app.php</em> </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"string\">'providers'</span> =&gt; [</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    App\\Providers\\EasySmsServiceProvider::class,</span><br><span class=\"line\">],</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置-AccessKey\"><a href=\"#配置-AccessKey\" class=\"headerlink\" title=\"配置 AccessKey\"></a>配置 AccessKey</h2><p><em>.env</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># aliyun 短信</span><br><span class=\"line\">SMS_ALIYUN_ACCESS_KEY_ID=</span><br><span class=\"line\">SMS_ALIYUN_ACCESS_KEY_SECRET=</span><br></pre></td></tr></table></figure>\n\n","categories":["Laravel"]},{"title":"阿里云短信服务申请","url":"/third-party-services/aliyun-sms/","content":"<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9keXNtcy5jb25zb2xlLmFsaXl1bi5jb20vZHlzbXMuaHRt\" title=\"https://dysms.console.aliyun.com/dysms.htm\">短信服务管理控制台<i class=\"fa fa-external-link\"></i></span></p>\n<h2 id=\"新增签名\"><a href=\"#新增签名\" class=\"headerlink\" title=\"新增签名\"></a>新增签名</h2><p><em>国内消息-&gt;签名管理-&gt;添加签名</em></p>\n<p><img alt data-src=\"https://cdn.waixiwai.com/images/20191028163928.png\"></p>\n<h2 id=\"新增模板\"><a href=\"#新增模板\" class=\"headerlink\" title=\"新增模板\"></a>新增模板</h2><p><em>国内消息-&gt;模板管理-&gt;添加模板</em></p>\n<p><img alt data-src=\"https://cdn.waixiwai.com/images/20191028163623.png\"></p>\n<h2 id=\"申请-Access-Key\"><a href=\"#申请-Access-Key\" class=\"headerlink\" title=\"申请  Access Key\"></a>申请  Access Key</h2><p><img alt data-src=\"https://cdn.waixiwai.com/images/20191028173234.png\"></p>\n<blockquote>\n<p>Access Key 要保存好。</p>\n</blockquote>\n","categories":["Third party Services"],"tags":["第三方服务","阿里云","短信"]},{"title":"Composer 常用命令","url":"/composer/commands/","content":"<h2 id=\"扩展管理\"><a href=\"#扩展管理\" class=\"headerlink\" title=\"扩展管理\"></a>扩展管理</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ composer install</span><br><span class=\"line\">$ composer install --no-dev <span class=\"comment\"># 不安装仅在开发环境下使用的扩展</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"新增\"><a href=\"#新增\" class=\"headerlink\" title=\"新增\"></a>新增</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ composer require [package]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"移除\"><a href=\"#移除\" class=\"headerlink\" title=\"移除\"></a>移除</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ composer remove [package]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自身更新\"><a href=\"#自身更新\" class=\"headerlink\" title=\"自身更新\"></a>自身更新</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo composer self-update</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"清除缓存\"><a href=\"#清除缓存\" class=\"headerlink\" title=\"清除缓存\"></a>清除缓存</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ composer clear-cache</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnBocGNvbXBvc2VyLmNvbS8wMy1jbGkuaHRtbA==\" title=\"https://docs.phpcomposer.com/03-cli.html\">命令列表<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Composer"]},{"title":"Composer 错误处理","url":"/composer/errors/","content":"<h3 id=\"dump-autoload\"><a href=\"#dump-autoload\" class=\"headerlink\" title=\"dump-autoload\"></a>dump-autoload</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ rm -rf vendor/composer/autoload_*  </span><br><span class=\"line\">$ composer dump-autoload</span><br></pre></td></tr></table></figure>\n\n","categories":["Composer"]},{"title":"Composer 国内镜像","url":"/composer/mirrors/","content":"<h2 id=\"阿里云\"><a href=\"#阿里云\" class=\"headerlink\" title=\"阿里云\"></a>阿里云</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>\n\n","categories":["Composer"]},{"title":"Composer 延伸阅读","url":"/composer/reading/","content":"<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAwMDM1NTkyOA==\" title=\"https://segmentfault.com/a/1190000000355928\">[PHP 开发者该知道的 5 个 Composer 小技巧]<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Composer"]},{"title":"Sublime Text 常用扩展","url":"/sublime-text/packages/","content":"<h2 id=\"代码风格\"><a href=\"#代码风格\" class=\"headerlink\" title=\"代码风格\"></a>代码风格</h2><h3 id=\"EditorConfig\"><a href=\"#EditorConfig\" class=\"headerlink\" title=\"EditorConfig\"></a>EditorConfig</h3><p><em>.editorconfig</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">root = true</span><br><span class=\"line\"></span><br><span class=\"line\">[*]</span><br><span class=\"line\">charset = utf-8</span><br><span class=\"line\">end_of_line = lf</span><br><span class=\"line\">insert_final_newline = true</span><br><span class=\"line\">indent_style = space</span><br><span class=\"line\">indent_size = 4</span><br><span class=\"line\">trim_trailing_whitespace = true</span><br><span class=\"line\"></span><br><span class=\"line\">[*.md]</span><br><span class=\"line\">trim_trailing_whitespace = false</span><br><span class=\"line\"></span><br><span class=\"line\">[*.&#123;yml,yaml&#125;]</span><br><span class=\"line\">indent_size = 2</span><br><span class=\"line\"></span><br><span class=\"line\">[*.&#123;js,html,blade.php,css,scss,styl&#125;]</span><br><span class=\"line\">indent_style = space</span><br><span class=\"line\">indent_size = 2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码补全\"><a href=\"#代码补全\" class=\"headerlink\" title=\"代码补全\"></a>代码补全</h2><h3 id=\"Emmet\"><a href=\"#Emmet\" class=\"headerlink\" title=\"Emmet\"></a>Emmet</h3><h2 id=\"远程开发\"><a href=\"#远程开发\" class=\"headerlink\" title=\"远程开发\"></a>远程开发</h2><h3 id=\"SFTP\"><a href=\"#SFTP\" class=\"headerlink\" title=\"SFTP\"></a>SFTP</h3><p><em>Perference-&gt;Package Settings-&gt;SFTP-&gt;setting user</em></p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"email\"</span>: <span class=\"string\">\"xiaosong@xiaosong.me\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"product_key\"</span>: <span class=\"string\">\"d419f6-de89e9-0aae59-2acea1-07f92a\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"email\"</span>:<span class=\"string\">\"Rimke@163.com\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"product_key\"</span>:<span class=\"string\">\"e83eda-38644b-43c828-e3669b-cd8a85\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":["Sublime Text"],"tags":["Sublime Text","扩展"]},{"title":"给 Sublime Text 的 Package Control 设置代理","url":"/sublime-text/proxy/","content":"<blockquote>\n<p>前提是得有梯子。</p>\n</blockquote>\n<p><em>Preferences-&gt;Package Settings-&gt;Package Control-&gt;Settings - User</em></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"http_proxy\": \"http://127.0.0.1:1080\",</span><br><span class=\"line\">\"https_proxy\": \"http://127.0.0.1:1080\",</span><br></pre></td></tr></table></figure>\n\n","categories":["Sublime Text"],"tags":["Sublime Text","代理"]},{"title":"Sublime Text 3 激活码","url":"/sublime-text/license/","content":"<blockquote>\n<p>2019-10-27 22:28:08 可用</p>\n</blockquote>\n<p><em>Help-&gt;Enter License</em></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">Member J2TeaM</span><br><span class=\"line\">Single User License</span><br><span class=\"line\">EA7E-1011316</span><br><span class=\"line\">D7DA350E 1B8B0760 972F8B60 F3E64036</span><br><span class=\"line\">B9B4E234 F356F38F 0AD1E3B7 0E9C5FAD</span><br><span class=\"line\">FA0A2ABE 25F65BD8 D51458E5 3923CE80</span><br><span class=\"line\">87428428 79079A01 AA69F319 A1AF29A4</span><br><span class=\"line\">A684C2DC 0B1583D4 19CBD290 217618CD</span><br><span class=\"line\">5653E0A0 BACE3948 BB2EE45E 422D2C87</span><br><span class=\"line\">DD9AF44B 99C49590 D2DBDEE1 75860FD2</span><br><span class=\"line\">8C8BB2AD B2ECE5A4 EFC08AF2 25A9B864</span><br></pre></td></tr></table></figure>\n\n","categories":["Sublime Text"],"tags":["Sublime Text","激活"]},{"title":"Vim 延伸阅读","url":"/vim/reading/","content":"<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb29sc2hlbGwuY24vYXJ0aWNsZXMvNTQyNi5odG1s\" title=\"https://coolshell.cn/articles/5426.html\">简明 VIM 练级攻略<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Vim"],"tags":["延伸阅读","Vim"]},{"title":"Bash 延伸阅读","url":"/bash/reading/","content":"<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmt1LmNvbS9sYXJhdmVsL3QvMzUzMTc=\" title=\"https://learnku.com/laravel/t/35317\">方便的 Bash 终端技巧大集合<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Bash"],"tags":["Bash","延伸阅读"]},{"title":"给 Hexo 文章设置多个分类","url":"/hexo/posts-use-multiple-categories/","content":"<p>有时候在 Hexo 写作中想要给文章使用多个分类，但是下面这种想当然的方法是不行的：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">categories: [Hexo, Markdown]</span><br></pre></td></tr></table></figure>\n\n<p>这种方法会将 <code>Markdown</code> 生成为 <code>Hexo</code> 的子分类，好在 Hexo 提供了下面的方法来满足需求：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">categories: </span><br><span class=\"line\"><span class=\"bullet\">\t- </span>[Hexo]</span><br><span class=\"line\"><span class=\"bullet\">\t- </span>[Markdown, Tags]</span><br></pre></td></tr></table></figure>\n\n<p>这里 <code>Hexo</code> 与 <code>Markdown</code> 是平级的分类，且 <code>Markdown</code> 包含一个子类别 <code>Tags</code>。</p>\n","categories":["Hexo"],"tags":["Hexo"]},{"title":"Typora『Github』主题美化","url":"/typora/github-theme-beautify/","content":"<blockquote>\n<p>Typora 自带的 Github 主题样式是我喜欢的简洁样式，但是标题这一块儿不是太喜欢，自己调整了一下，和本站相似。</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<p><em>Typora/themes/github.user.css</em></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">'Lato'</span>, <span class=\"string\">\"PingFang SC\"</span>, <span class=\"string\">\"Microsoft YaHei\"</span>, sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h1</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h2</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h3</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h4</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h5</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h6</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: normal;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h1</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h2</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h3</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h4</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    <span class=\"attribute\">margin-right</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fc6423</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#f5f5f5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">7.2px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">22px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h2</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">'#'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h3</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h3</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">'|'</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span>&gt;<span class=\"selector-tag\">h3</span><span class=\"selector-class\">.md-focus</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">1px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h4</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h4</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">'!'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span>&gt;<span class=\"selector-tag\">h4</span><span class=\"selector-class\">.md-focus</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: unset;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h5</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">h6</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h3</span><span class=\"selector-class\">.md-focus</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h4</span><span class=\"selector-class\">.md-focus</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h5</span><span class=\"selector-class\">.md-focus</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h6</span><span class=\"selector-class\">.md-focus</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: inherit;</span><br><span class=\"line\">    <span class=\"attribute\">padding-left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#write</span> <span class=\"selector-tag\">pre</span><span class=\"selector-class\">.md-meta-block</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.md-fences</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">code</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">tt</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.code-tooltip</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: unset;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":["Typora"],"tags":["Typora","主题"]},{"title":"Hexo 常用命令","url":"/hexo/commands/","content":"<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><h3 id=\"默认配置\"><a href=\"#默认配置\" class=\"headerlink\" title=\"默认配置\"></a>默认配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"更改端口号\"><a href=\"#更改端口号\" class=\"headerlink\" title=\"更改端口号\"></a>更改端口号</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo s -p 80</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"输出-DEBUG\"><a href=\"#输出-DEBUG\" class=\"headerlink\" title=\"输出 DEBUG\"></a>输出 DEBUG</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo s --debug</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29tbWFuZHM=\" title=\"https://hexo.io/zh-cn/docs/commands\">Hexo官方文档 - 指令<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Hexo"],"tags":["Hexo","命令"]},{"title":"Hexo 延伸阅读","url":"/hexo/reading/","content":"<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv\" title=\"https://hexo.io/zh-cn/docs/\">官方文档<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Hexo"],"tags":["延伸阅读","Hexo"]},{"title":"在 Windows Terminal 中使用 Git Bash","url":"/windows-terminal/use-git-bash/","content":"<p><img alt data-src=\"https://cdn.waixiwai.com/images/20191027160518.jpg\"></p>\n<a id=\"more\"></a>\n\n\n<h2 id=\"新增系统环境变量\"><a href=\"#新增系统环境变量\" class=\"headerlink\" title=\"新增系统环境变量\"></a>新增系统环境变量</h2><p><img alt data-src=\"https://cdn.waixiwai.com/images/20191027160607.jpg\"></p>\n<h2 id=\"打开配置文件\"><a href=\"#打开配置文件\" class=\"headerlink\" title=\"打开配置文件\"></a>打开配置文件</h2><p><img alt data-src=\"https://cdn.waixiwai.com/images/20191027160546.jpg\"></p>\n<h2 id=\"新增控制台\"><a href=\"#新增控制台\" class=\"headerlink\" title=\"新增控制台\"></a>新增控制台</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"profiles\" : </span><br><span class=\"line\">[</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"acrylicOpacity\"</span> : <span class=\"number\">0.75</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"closeOnExit\"</span> : <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"colorScheme\"</span> : <span class=\"string\">\"Minttyrc\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"commandline\"</span> : <span class=\"string\">\"bash.exe\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"cursorColor\"</span> : <span class=\"string\">\"#d9e6f2\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"cursorShape\"</span> : <span class=\"string\">\"underscore\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"fontFace\"</span> : <span class=\"string\">\"Microsoft YaHei Mono\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"fontSize\"</span> : <span class=\"number\">12</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"guid\"</span> : <span class=\"string\">\"&#123;c6eaf9f4-32a7-5fdc-b5cf-066e8a4b1e40&#125;\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"historySize\"</span> : <span class=\"number\">9001</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"icon\"</span> : <span class=\"string\">\"C:\\\\Users\\\\CHISHUI\\\\Pictures\\\\Git.png\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"name\"</span> : <span class=\"string\">\"git-bash\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"padding\"</span> : <span class=\"string\">\"20, 0, 0, 0\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"snapOnInput\"</span> : <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"startingDirectory\"</span> : <span class=\"string\">\"%USERPROFILE%\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"useAcrylic\"</span> : <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"backgroundImage\"</span> : <span class=\"string\">\"C:\\\\Users\\\\CHISHUI\\\\Pictures\\\\ycy.jpg\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"backgroundImageOpacity\"</span> : <span class=\"number\">0.1</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"backgroundImageStrechMode\"</span> : <span class=\"string\">\"fill\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"新增主题\"><a href=\"#新增主题\" class=\"headerlink\" title=\"新增主题\"></a>新增主题</h2><figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"schemes\" : </span><br><span class=\"line\">[</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"background\"</span> : <span class=\"string\">\"#0d1926\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"black\"</span> : <span class=\"string\">\"#000000\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"blue\"</span> : <span class=\"string\">\"#7a7ab8\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"brightBlack\"</span> : <span class=\"string\">\"#262626\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"brightBlue\"</span> : <span class=\"string\">\"#bdbddb\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"brightCyan\"</span> : <span class=\"string\">\"#bddbdb\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"brightGreen\"</span> : <span class=\"string\">\"#bddbbd\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"brightPurple\"</span> : <span class=\"string\">\"#dbbddb\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"brightRed\"</span> : <span class=\"string\">\"#dbbdbd\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"brightWhite\"</span> : <span class=\"string\">\"#ffffff\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"brightYellow\"</span> : <span class=\"string\">\"#dbdbbd\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"cyan\"</span> : <span class=\"string\">\"#7ab8b8\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"foreground\"</span> : <span class=\"string\">\"#d9e6f2\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"green\"</span> : <span class=\"string\">\"#7ab87a\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"name\"</span> : <span class=\"string\">\"Minttyrc\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"purple\"</span> : <span class=\"string\">\"#b87ab8\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"red\"</span> : <span class=\"string\">\"#b87a7a\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"white\"</span> : <span class=\"string\">\"#d9d9d9\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"yellow\"</span> : <span class=\"string\">\"#b8b87a\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置默认启动\"><a href=\"#配置默认启动\" class=\"headerlink\" title=\"配置默认启动\"></a>配置默认启动</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"globals\" : </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"defaultProfile\"</span> : <span class=\"string\">\"&#123;c6eaf9f4-32a7-5fdc-b5cf-066e8a4b1e40&#125;\"</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Git-图标\"><a href=\"#Git-图标\" class=\"headerlink\" title=\"Git 图标\"></a>Git 图标</h2><p><img alt data-src=\"https://cdn.waixiwai.com/images/20191027160618.png\"></p>\n","categories":["Windows Terminal"],"tags":["Windows Terminal","Git Bash"]},{"title":"语义化版本号","url":"/version/semantic/","content":"<h2 id=\"版本格式\"><a href=\"#版本格式\" class=\"headerlink\" title=\"版本格式\"></a>版本格式</h2><p>版本格式：主版本号.次版本号.修订号。</p>\n<p>一般我们使用 3 个部分来表示一个版本，例如：1.4.23，1 为主版本号，4 为次版本号，23 为修订号或者补丁版本号。</p>\n<h2 id=\"递增规则\"><a href=\"#递增规则\" class=\"headerlink\" title=\"递增规则\"></a>递增规则</h2><h3 id=\"主版本号\"><a href=\"#主版本号\" class=\"headerlink\" title=\"主版本号\"></a>主版本号</h3><p>当你做了不兼容的 API 修改。</p>\n<h3 id=\"次版本号\"><a href=\"#次版本号\" class=\"headerlink\" title=\"次版本号\"></a>次版本号</h3><p>当你做了向下兼容的功能性新增。</p>\n<h3 id=\"修订号\"><a href=\"#修订号\" class=\"headerlink\" title=\"修订号\"></a>修订号</h3><p>当你做了向下兼容的问题修正。</p>\n<h2 id=\"编译信息\"><a href=\"#编译信息\" class=\"headerlink\" title=\"编译信息\"></a>编译信息</h2><p>先行版本号及版本编译信息可以加到 <code>主版本号.次版本号.修订号</code> 的后面，作为延伸。</p>\n<p>先行版本如 <code>1.0.0-alpha1</code> 这样在后面添加修饰符号来表示。</p>\n","categories":["Version"],"tags":["语义化版本号"]},{"title":"Python 开发环境搭建","url":"/python/environment/","content":"<h2 id=\"解释器\"><a href=\"#解释器\" class=\"headerlink\" title=\"解释器\"></a>解释器</h2><h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHl0aG9uLm9yZy8=\" title=\"https://www.python.org/\">Python<i class=\"fa fa-external-link\"></i></span></p>\n<p>勾选 <code>Add Python 3.x to PATH</code></p>\n<p>自定义安装纯英文目录</p>\n<p>全选 <code>Optional Features</code> </p>\n<h2 id=\"交互式编程工具\"><a href=\"#交互式编程工具\" class=\"headerlink\" title=\"交互式编程工具\"></a>交互式编程工具</h2><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ pip install ipython</span><br></pre></td></tr></table></figure>\n\n<p>启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ipython</span><br><span class=\"line\">$ python -m IPython</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"pip\"><a href=\"#pip\" class=\"headerlink\" title=\"pip\"></a>pip</h2><h3 id=\"国内镜像\"><a href=\"#国内镜像\" class=\"headerlink\" title=\"国内镜像\"></a>国内镜像</h3><p><code>~/pip/pip.ini</code></p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[global]</span></span><br><span class=\"line\"><span class=\"attr\">index-url</span> = http://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\"><span class=\"section\">[install]</span></span><br><span class=\"line\"><span class=\"attr\">trusted-host</span>=mirrors.aliyun.com</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"常见错误\"><a href=\"#常见错误\" class=\"headerlink\" title=\"常见错误\"></a>常见错误</h3><p>You are using pip version…</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ python -m pip install --user --upgrade pip</span><br></pre></td></tr></table></figure>\n\n","categories":["Python"],"tags":["开发环境"]},{"title":"Manjaro 初始化配置","url":"/manjaro/init/","content":"<h2 id=\"切换国内镜像\"><a href=\"#切换国内镜像\" class=\"headerlink\" title=\"切换国内镜像\"></a>切换国内镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo pacman-mirrors -i -c China -m rank <span class=\"comment\"># 选择清华源</span></span><br></pre></td></tr></table></figure>\n\n<p>添加源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo vim /etc/pacman.conf</span><br></pre></td></tr></table></figure>\n\n<p><em>/etc/pacman.conf</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 写在最后</span><br><span class=\"line\">[archlinuxcn]</span><br><span class=\"line\">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"刷新缓存\"><a href=\"#刷新缓存\" class=\"headerlink\" title=\"刷新缓存\"></a>刷新缓存</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo pacman -Syy</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"导入公钥\"><a href=\"#导入公钥\" class=\"headerlink\" title=\"导入公钥\"></a>导入公钥</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更新系统\"><a href=\"#更新系统\" class=\"headerlink\" title=\"更新系统\"></a>更新系统</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo pacman -Syyu</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更改系统字体\"><a href=\"#更改系统字体\" class=\"headerlink\" title=\"更改系统字体\"></a>更改系统字体</h2><p>安装文泉驿黑体 <code>wqy-microhei</code>，通过系统字体管理修改字体。</p>\n<h2 id=\"开启-SSH\"><a href=\"#开启-SSH\" class=\"headerlink\" title=\"开启 SSH\"></a>开启 SSH</h2><p>开机启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ systemctl <span class=\"built_in\">enable</span> sshd.service</span><br></pre></td></tr></table></figure>\n\n<p>立即启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ systemctl start sshd.service</span><br></pre></td></tr></table></figure>\n\n<p>立即重启</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ systemctl restart sshd.service</span><br></pre></td></tr></table></figure>\n\n","categories":["Manjaro"],"tags":["Manjaro","初始化"]},{"title":"Manjaro 硬盘分区方案","url":"/manjaro/partition/","content":"<blockquote>\n<p>Linux 分区这个事每次重装都要现查，记录一下下次直接复用这个方案。</p>\n</blockquote>\n<p>硬件条件 : 120G SSD</p>\n<p><code>/boot/efi</code> : 1024M~2048M <strong>ESP</strong> <em>fat32</em></p>\n<p><code>/</code> : 60G <em>ext4</em></p>\n<p><code>/home</code> : 40G <em>ext4</em></p>\n<p><code>swap</code> : 8192M <em>linuxswap</em></p>\n","categories":["Manjaro"],"tags":["Manjaro","分区"]},{"title":"Manjaro 安装配置 oh-my-zsh","url":"/manjaro/oh-my-zsh/","content":"<blockquote>\n<p>Manjaro 默认集成了zsh，切换一下终端然后安装 oh-my-zsh就 OK 了。</p>\n</blockquote>\n<h2 id=\"切换终端\"><a href=\"#切换终端\" class=\"headerlink\" title=\"切换终端\"></a>切换终端</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cat /etc/shells\t<span class=\"comment\"># 查看当前已安装的shell种类</span></span><br><span class=\"line\">$ chsh -s /bin/zsh\t<span class=\"comment\"># 切换当前用户</span></span><br><span class=\"line\">$ sudo vim /etc/passwd\t<span class=\"comment\"># 切换root用户</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装-oh-my-zsh\"><a href=\"#安装-oh-my-zsh\" class=\"headerlink\" title=\"安装 oh-my-zsh\"></a>安装 oh-my-zsh</h2><p>安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sh -c <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>下载不了时，直接另存为 <code>.sh</code> 文件，然后执行 <code>bash install.sh</code>。</p>\n</blockquote>\n<p>语法高亮</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"source <span class=\"variable\">$&#123;(q-)PWD&#125;</span>/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\"</span> &gt;&gt; <span class=\"variable\">$&#123;ZDOTDIR:-$HOME&#125;</span>/.zshrc</span><br><span class=\"line\">$ <span class=\"built_in\">source</span> ./zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"切换主题\"><a href=\"#切换主题\" class=\"headerlink\" title=\"切换主题\"></a>切换主题</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo vim ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p><em>~/.zshrc</em> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ZSH_THEME=&quot;ys&quot;</span><br></pre></td></tr></table></figure>\n\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JvYmJ5cnVzc2VsbC9vaC1teS16c2gvd2lraS90aGVtZXM=\" title=\"https://github.com/robbyrussell/oh-my-zsh/wiki/themes\">oh-my-zsh 官方主题库<i class=\"fa fa-external-link\"></i></span></p>\n","categories":["Manjaro"],"tags":["Manjaro","oh-my-zsh"]},{"title":"Manjaro 延伸阅读","url":"/manjaro/reading/","content":"<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vY2VhbmRsbnUuZ2l0aHViLmlvLzIwMTgvMDUvMjkvTWFuamFybyUyMCVFNiU5NyVBNSVFNSVCOCVCOCVFOSU4NSU4RCVFNyVCRCVBRS8=\" title=\"https://oceandlnu.github.io/2018/05/29/Manjaro%20%E6%97%A5%E5%B8%B8%E9%85%8D%E7%BD%AE/\">Manjaro 日常配置<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Manjaro"],"tags":["延伸阅读","Manjaro"]},{"title":"Manjaro 安装配置 Samba","url":"/manjaro/samba/","content":"<h2 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay -S samba gvfs-smb manjaro-settings-samba</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置参数\"><a href=\"#配置参数\" class=\"headerlink\" title=\"配置参数\"></a>配置参数</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo vim /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>\n\n<p><em>/etc/samba/smb.conf</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">[myshare]</span><br><span class=\"line\">   comment = myshare</span><br><span class=\"line\">   path = /home/username</span><br><span class=\"line\">   writable = yes</span><br><span class=\"line\">   create mask = 0700</span><br><span class=\"line\">   directory mask = 0700</span><br></pre></td></tr></table></figure>\n\n<p>设置samba用户密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo smbpasswd -a username\t<span class=\"comment\"># 如需新建用户看下面链接[Manjaro 配置Samba 共享文件夹]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ systemctl <span class=\"built_in\">enable</span> smb nmb</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开启\"><a href=\"#开启\" class=\"headerlink\" title=\"开启\"></a>开启</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ systemctl start smb nmb</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ systemctl restart smb nmb</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm1hbmphcm8ub3JnL2luZGV4LnBocD90aXRsZT1Vc2luZ19TYW1iYV9pbl95b3VyX0ZpbGVfTWFuYWdlcg==\" title=\"https://wiki.manjaro.org/index.php?title=Using_Samba_in_your_File_Manager\">Using Samba in your File Manager<i class=\"fa fa-external-link\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jb2Rlc2ltcGxlLmNjL3Bvc3QvbGludXgvbWFuamFyby1wZWktemhpLXNhbWJhLWdvbmcteGlhbmctd2VuLWppYW4tamlh\" title=\"http://www.codesimple.cc/post/linux/manjaro-pei-zhi-samba-gong-xiang-wen-jian-jia\">Manjaro 配置Samba 共享文件夹<i class=\"fa fa-external-link\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZmF0dC9wLzU4NTY4OTIuaHRtbA==\" title=\"https://www.cnblogs.com/fatt/p/5856892.html\">Linux Samba服务主配文件smb.conf中文详解<i class=\"fa fa-external-link\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODYzODkxL2FydGljbGUvZGV0YWlscy85MDI0NTcxNQ==\" title=\"https://blog.csdn.net/qq_37863891/article/details/90245715\">manjaro linux利用samba与window建立共享文件夹<i class=\"fa fa-external-link\"></i></span></p>\n","categories":["Manjaro"],"tags":["Manjaro","Samba"]},{"title":"Manjaro 安装配置 SSR 代理","url":"/manjaro/ssr/","content":"<blockquote>\n<p>Manjaro 中使用小飞机比 Windows 中麻烦一些。</p>\n</blockquote>\n<h1 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h1><h2 id=\"命令行版\"><a href=\"#命令行版\" class=\"headerlink\" title=\"命令行版\"></a>命令行版</h2><h3 id=\"安装脚本\"><a href=\"#安装脚本\" class=\"headerlink\" title=\"安装脚本\"></a>安装脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装脚本</span></span><br><span class=\"line\">$ curl https://raw.githubusercontent.com/the0demiurge/CharlesScripts/master/charles/bin/ssr -o <span class=\"string\">\"ssr\"</span></span><br><span class=\"line\"><span class=\"comment\"># 添加执行权限</span></span><br><span class=\"line\">$ chmod a+x ssr</span><br><span class=\"line\">$ sudo ln -s /home/chishui/tools/ssr /usr/bin/ssr</span><br><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\">$ yay -S jq tsocks</span><br><span class=\"line\"><span class=\"comment\"># 安装ssr客户端</span></span><br><span class=\"line\">$ ssr install</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置参数\"><a href=\"#配置参数\" class=\"headerlink\" title=\"配置参数\"></a>配置参数</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vim ~/.<span class=\"built_in\">local</span>/share/shadowsocksr/config.json</span><br><span class=\"line\"><span class=\"comment\"># 打开后直接保存会自动启动代理</span></span><br><span class=\"line\">$ ssr config</span><br></pre></td></tr></table></figure>\n\n<p><em>~/.local/share/shadowsocksr/config.json</em></p>\n<p><strong>注意：下面所有注释都要删掉</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"server\"</span>: <span class=\"string\">\"\"</span>,\t<span class=\"comment\">// 服务器地址</span></span><br><span class=\"line\">    <span class=\"attr\">\"server_port\"</span>: ,\t<span class=\"comment\">// 代理端口</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">\"password\"</span>: <span class=\"string\">\"\"</span>,\t<span class=\"comment\">// 密码</span></span><br><span class=\"line\">    <span class=\"attr\">\"method\"</span>: <span class=\"string\">\"\"</span>,\t<span class=\"comment\">// 加密</span></span><br><span class=\"line\">    <span class=\"attr\">\"protocol\"</span>: <span class=\"string\">\"\"</span>,\t<span class=\"comment\">// 协议</span></span><br><span class=\"line\">    <span class=\"attr\">\"protocol_param\"</span>: <span class=\"string\">\"\"</span>,\t<span class=\"comment\">// 协议参数</span></span><br><span class=\"line\">    <span class=\"attr\">\"obfs\"</span>: <span class=\"string\">\"\"</span>,\t<span class=\"comment\">// 混淆</span></span><br><span class=\"line\">    <span class=\"attr\">\"obfs_param\"</span>: <span class=\"string\">\"\"</span>,\t<span class=\"comment\">// 混淆参数</span></span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><p>启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ssr start</span><br></pre></td></tr></table></figure>\n\n<p>停止</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ssr stop</span><br></pre></td></tr></table></figure>\n\n<p>重启</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ssr restart</span><br></pre></td></tr></table></figure>\n\n<p>卸载</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ssr uninstall</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"桌面版\"><a href=\"#桌面版\" class=\"headerlink\" title=\"桌面版\"></a>桌面版</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay -S electron-ssr</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h1><h2 id=\"PAC\"><a href=\"#PAC\" class=\"headerlink\" title=\"PAC\"></a>PAC</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo pip install genpac</span><br><span class=\"line\"><span class=\"comment\"># 在当前目录下生成 autoproxy.pac</span></span><br><span class=\"line\">$ genpac --format=pac --pac-proxy=<span class=\"string\">\"SOCKS5 127.0.0.1:1080\"</span> --pac-precise --output=<span class=\"string\">\"autoproxy.pac\"</span></span><br></pre></td></tr></table></figure>\n\n<p><em>/etc/environment</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">auto_proxy=&quot;file:///home/username/tools/autoproxy.pac&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SwitchyOmega\"><a href=\"#SwitchyOmega\" class=\"headerlink\" title=\"SwitchyOmega\"></a>SwitchyOmega</h2><h3 id=\"Chrome-安装扩展\"><a href=\"#Chrome-安装扩展\" class=\"headerlink\" title=\"Chrome 安装扩展\"></a>Chrome 安装扩展</h3><p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ZlbGlzQ2F0dXMvU3dpdGNoeU9tZWdh\" title=\"https://github.com/FelisCatus/SwitchyOmega\">Github<i class=\"fa fa-external-link\"></i></span> 下载最新版本的 <strong>.crx</strong> 文件，更改后缀为 <strong>.zip</strong> 并解压缩，如果解压失败就换 Windows 系统解压。</p>\n<p>打开 Chrome 扩展程序的 <strong>开发者模式</strong>，将解压出来的文件夹拖入后关闭开发者模式。</p>\n<p><img alt data-src=\"https://cdn.waixiwai.com/images/20191107135814.png\"></p>\n<h3 id=\"参数配置\"><a href=\"#参数配置\" class=\"headerlink\" title=\"参数配置\"></a>参数配置</h3><p>配置 proxy</p>\n<p><img alt data-src=\"https://cdn.waixiwai.com/images/20191107140137.png\"></p>\n<p>配置 PAC 规则</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2dmd2xpc3QvZ2Z3bGlzdC9tYXN0ZXIvZ2Z3bGlzdC50eHQ=\" title=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt<i class=\"fa fa-external-link\"></i></span></p>\n<p><img alt data-src=\"https://cdn.waixiwai.com/images/20191107143353.png\"></p>\n<p>切换代理模式</p>\n<p><img alt data-src=\"https://cdn.waixiwai.com/images/20191107152838.png\"></p>\n","categories":["Manjaro"],"tags":["Manjaro","SSR","代理"]},{"title":"Manjaro 包管理工具『yay』","url":"/manjaro/yay/","content":"<h2 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo pacman -S yay</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"扩展管理\"><a href=\"#扩展管理\" class=\"headerlink\" title=\"扩展管理\"></a>扩展管理</h2><h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay -Ss package</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay -S package</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay -R package</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看列表\"><a href=\"#查看列表\" class=\"headerlink\" title=\"查看列表\"></a>查看列表</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yay -Qs package</span><br></pre></td></tr></table></figure>\n\n\n","categories":["Manjaro"],"tags":["Manjaro","yay"]},{"title":"使用 Laravel-admin 快速搭建后台管理面板","url":"/laravel/admin/","content":"<blockquote>\n<p>本文写于 Laravel-admin v1.7.7 </p>\n</blockquote>\n<h1 id=\"安装扩展\"><a href=\"#安装扩展\" class=\"headerlink\" title=\"安装扩展\"></a>安装扩展</h1><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ composer require encore/laravel-admin</span><br></pre></td></tr></table></figure>\n\n<p>发布资源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 会生成 config/admin.php 默认配置即可</span></span><br><span class=\"line\">$ php artisan vendor:publish --provider=<span class=\"string\">\"Encore\\Admin\\AdminServiceProvider\"</span></span><br></pre></td></tr></table></figure>\n\n<p>执行安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 部署阶段无需执行此命令，将开发环境中的与admin相关的数据SQL导入即可。</span></span><br><span class=\"line\">$ php artisan admin:install</span><br></pre></td></tr></table></figure>\n\n<p>删除多余语言文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ rm -rf resources/lang/ar/ resources/lang/az/ resources/lang/en/admin.php resources/lang/es/ resources/lang/fr/ resources/lang/he/ resources/lang/ja/ resources/lang/nl/ resources/lang/pl/ resources/lang/pt/ resources/lang/ru/ resources/lang/tr/ resources/lang/zh-TW/ resources/lang/pt-BR/ resources/lang/fa/ resources/lang/id/ resources/lang/ms/ resources/lang/uk/ resources/lang/ko/</span><br></pre></td></tr></table></figure>\n\n<p>删除多余控制器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ rm -f app/Admin/Controllers/ExampleController.php</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"后台地址\"><a href=\"#后台地址\" class=\"headerlink\" title=\"后台地址\"></a>后台地址</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://domain.com/admin</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"模型管理\"><a href=\"#模型管理\" class=\"headerlink\" title=\"模型管理\"></a>模型管理</h1><h2 id=\"控制器\"><a href=\"#控制器\" class=\"headerlink\" title=\"控制器\"></a>控制器</h2><h3 id=\"创建控制器\"><a href=\"#创建控制器\" class=\"headerlink\" title=\"创建控制器\"></a>创建控制器</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># --model=App\\\\Models\\\\Calendar </span></span><br><span class=\"line\"><span class=\"comment\"># 代表新创建的控制器可对指定模型CURD</span></span><br><span class=\"line\">$ php artisan admin:make CalendarController --model=App\\\\Models\\\\Calendar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加到路由\"><a href=\"#添加到路由\" class=\"headerlink\" title=\"添加到路由\"></a>添加到路由</h3><p><em>app/Admin/routes.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$router-&gt;resource(<span class=\"string\">'/calendars'</span>, CalendarController::class);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"控制器解析\"><a href=\"#控制器解析\" class=\"headerlink\" title=\"控制器解析\"></a>控制器解析</h3><p>当前控制器名称</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> $title = <span class=\"string\">'日程分类'</span>;</span><br></pre></td></tr></table></figure>\n\n<p>数据列表页</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">grid</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $grid = <span class=\"keyword\">new</span> Grid(<span class=\"keyword\">new</span> Calendar);</span><br><span class=\"line\">    <span class=\"comment\">// 根据ID排序</span></span><br><span class=\"line\">    $grid-&gt;column(<span class=\"string\">'id'</span>, <span class=\"string\">'ID'</span>)-&gt;sortable();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 基本输出</span></span><br><span class=\"line\">    $grid-&gt;column(<span class=\"string\">'name'</span>, <span class=\"string\">'名称'</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 自定义输出</span></span><br><span class=\"line\">    $grid-&gt;column(<span class=\"string\">'color'</span>, <span class=\"string\">'文字颜色'</span>)-&gt;display(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($color)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $color;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 本地化输出</span></span><br><span class=\"line\">    $grid-&gt;column(<span class=\"string\">'created_at'</span>, __(<span class=\"string\">'Created at'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 添加不存的字段列</span></span><br><span class=\"line\">    $grid-&gt;column(<span class=\"string\">'full_name'</span>)-&gt;display(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;first_name.<span class=\"string\">' '</span>.<span class=\"keyword\">$this</span>-&gt;last_name;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// filter($callback)方法用来设置表格的简单搜索框</span></span><br><span class=\"line\">    $grid-&gt;filter(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($filter)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 设置created_at字段的范围查询</span></span><br><span class=\"line\">        $filter-&gt;between(<span class=\"string\">'created_at'</span>, <span class=\"string\">'Created Time'</span>)-&gt;datetime();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 每页数量</span></span><br><span class=\"line\">    $grid-&gt;paginate(<span class=\"number\">15</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 设置分页选择器选项</span></span><br><span class=\"line\">    $grid-&gt;perPages([<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 禁用创建按钮</span></span><br><span class=\"line\">    $grid-&gt;disableCreateButton();</span><br><span class=\"line\">    <span class=\"comment\">// 禁用分页条</span></span><br><span class=\"line\">    $grid-&gt;disablePagination();</span><br><span class=\"line\">    <span class=\"comment\">// 禁用查询过滤器</span></span><br><span class=\"line\">    $grid-&gt;disableFilter();</span><br><span class=\"line\">    <span class=\"comment\">// 禁用导出数据按钮</span></span><br><span class=\"line\">    $grid-&gt;disableExport();</span><br><span class=\"line\">    <span class=\"comment\">// 禁用行选择checkbox</span></span><br><span class=\"line\">    $grid-&gt;disableRowSelector();</span><br><span class=\"line\">    <span class=\"comment\">// 禁用整个操作列</span></span><br><span class=\"line\">    $grid-&gt;disableActions();</span><br><span class=\"line\">    <span class=\"comment\">// 禁用部分按钮</span></span><br><span class=\"line\">    $grid-&gt;actions(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($actions)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 查看按钮</span></span><br><span class=\"line\">        $actions-&gt;disableView();</span><br><span class=\"line\">        <span class=\"comment\">// 删除按钮</span></span><br><span class=\"line\">        $actions-&gt;disableDelete();</span><br><span class=\"line\">        <span class=\"comment\">// 编辑按钮</span></span><br><span class=\"line\">        $actions-&gt;disableEdit();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 禁用 `批量删除` 按钮</span></span><br><span class=\"line\">    $grid-&gt;tools(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($tools)</span> </span>&#123;</span><br><span class=\"line\">        $tools-&gt;batch(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($batch)</span> </span>&#123;</span><br><span class=\"line\">            $batch-&gt;disableDelete();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> $grid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>数据编辑页</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">form</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $form = <span class=\"keyword\">new</span> Form(<span class=\"keyword\">new</span> Calendar);</span><br><span class=\"line\">    <span class=\"comment\">// 仅做显示</span></span><br><span class=\"line\">    $form-&gt;display(<span class=\"string\">'id'</span>, __(<span class=\"string\">'Id'</span>));</span><br><span class=\"line\">    <span class=\"comment\">// 单行文本</span></span><br><span class=\"line\">    $form-&gt;text(<span class=\"string\">'name'</span>, __(<span class=\"string\">'Name'</span>));</span><br><span class=\"line\">    <span class=\"comment\">// 拾色器</span></span><br><span class=\"line\">    $form-&gt;color(<span class=\"string\">'color'</span>, __(<span class=\"string\">'Color'</span>))-&gt;default(<span class=\"string\">'#ffffff'</span>);</span><br><span class=\"line\">    $form-&gt;color(<span class=\"string\">'background_color'</span>, __(<span class=\"string\">'Background color'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 禁用部分按钮</span></span><br><span class=\"line\">    $form-&gt;tools(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(Form\\Tools $tools)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 列表按钮</span></span><br><span class=\"line\">        $tools-&gt;disableList();</span><br><span class=\"line\">        <span class=\"comment\">// 删除按钮</span></span><br><span class=\"line\">        $tools-&gt;disableDelete();</span><br><span class=\"line\">        <span class=\"comment\">// 查看按钮</span></span><br><span class=\"line\">        $tools-&gt;disableView();</span><br><span class=\"line\">        <span class=\"comment\">// 添加一个按钮, 参数可以是字符串, 或者实现了Renderable或Htmlable接口的对象实例</span></span><br><span class=\"line\">    \t$tools-&gt;add(<span class=\"string\">'&lt;a class=\"btn btn-sm btn-danger\"&gt;&lt;i class=\"fa fa-trash\"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;delete&lt;/a&gt;'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 表单按钮</span></span><br><span class=\"line\">    $form-&gt;footer(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($footer)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 重置按钮</span></span><br><span class=\"line\">        $footer-&gt;disableReset();</span><br><span class=\"line\">        <span class=\"comment\">// 提交按钮</span></span><br><span class=\"line\">        $footer-&gt;disableSubmit();</span><br><span class=\"line\">        <span class=\"comment\">// 查看checkbox</span></span><br><span class=\"line\">        $footer-&gt;disableViewCheck();</span><br><span class=\"line\">        <span class=\"comment\">// 继续编辑checkbox</span></span><br><span class=\"line\">        $footer-&gt;disableEditingCheck();</span><br><span class=\"line\">        <span class=\"comment\">// 继续创建checkbox</span></span><br><span class=\"line\">        $footer-&gt;disableCreatingCheck();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> $form;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">form</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 多行文本</span></span><br><span class=\"line\">    $form-&gt;textarea(<span class=\"string\">'description'</span>, __(<span class=\"string\">'Description'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 模拟开关 checkout </span></span><br><span class=\"line\">    $form-&gt;switch(<span class=\"string\">'on_sale'</span>, __(<span class=\"string\">'On sale'</span>))-&gt;default(<span class=\"number\">1</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 浮点数输入框</span></span><br><span class=\"line\">    $form-&gt;decimal(<span class=\"string\">'rating'</span>, __(<span class=\"string\">'Rating'</span>))-&gt;default(<span class=\"number\">5.00</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 数字选择+输入</span></span><br><span class=\"line\">    $form-&gt;number(<span class=\"string\">'sold_count'</span>, __(<span class=\"string\">'Sold count'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 选择图片</span></span><br><span class=\"line\">    $form-&gt;image(<span class=\"string\">'image'</span>, <span class=\"string\">'封面图片'</span>)-&gt;rules(<span class=\"string\">'required|image'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 富文本编辑器</span></span><br><span class=\"line\">    $form-&gt;editor(<span class=\"string\">'description'</span>, <span class=\"string\">'商品描述'</span>)-&gt;rules(<span class=\"string\">'required'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 单选框</span></span><br><span class=\"line\">    $form-&gt;radio(<span class=\"string\">'on_sale'</span>, <span class=\"string\">'上架'</span>)-&gt;options([<span class=\"string\">'1'</span> =&gt; <span class=\"string\">'是'</span>, <span class=\"string\">'0'</span>=&gt; <span class=\"string\">'否'</span>])-&gt;default(<span class=\"string\">'0'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 直接添加一对多的关联模型</span></span><br><span class=\"line\">    $form-&gt;hasMany(<span class=\"string\">'skus'</span>, <span class=\"string\">'SKU 列表'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(Form\\NestedForm $form)</span> </span>&#123;</span><br><span class=\"line\">        $form-&gt;text(<span class=\"string\">'title'</span>, <span class=\"string\">'SKU 名称'</span>)-&gt;rules(<span class=\"string\">'required'</span>);</span><br><span class=\"line\">        $form-&gt;text(<span class=\"string\">'description'</span>, <span class=\"string\">'SKU 描述'</span>)-&gt;rules(<span class=\"string\">'required'</span>);</span><br><span class=\"line\">        $form-&gt;text(<span class=\"string\">'price'</span>, <span class=\"string\">'单价'</span>)-&gt;rules(<span class=\"string\">'required|numeric|min:0.01'</span>);</span><br><span class=\"line\">        $form-&gt;text(<span class=\"string\">'stock'</span>, <span class=\"string\">'剩余库存'</span>)-&gt;rules(<span class=\"string\">'required|integer|min:0'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 定义事件回调，当模型即将保存时会触发这个回调</span></span><br><span class=\"line\">    $form-&gt;saving(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(Form $form)</span> </span>&#123;</span><br><span class=\"line\">        $form-&gt;model()-&gt;price = collect($form-&gt;input(<span class=\"string\">'skus'</span>))-&gt;where(Form::REMOVE_FLAG_NAME, <span class=\"number\">0</span>)-&gt;min(<span class=\"string\">'price'</span>) ?: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> $form;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"添加到菜单\"><a href=\"#添加到菜单\" class=\"headerlink\" title=\"添加到菜单\"></a>添加到菜单</h3><p><em>Admin-&gt;Menu</em></p>\n<p><img alt data-src=\"/uploads/laravel/admin/add_menu.jpg\"></p>\n<h2 id=\"权限设置\"><a href=\"#权限设置\" class=\"headerlink\" title=\"权限设置\"></a>权限设置</h2><h3 id=\"添加权限\"><a href=\"#添加权限\" class=\"headerlink\" title=\"添加权限\"></a>添加权限</h3><p><em>Admin-&gt;Permissions</em></p>\n<p><img alt data-src=\"/uploads/laravel/admin/add_permissions.jpg\"></p>\n<h3 id=\"添加角色\"><a href=\"#添加角色\" class=\"headerlink\" title=\"添加角色\"></a>添加角色</h3><p><em>Admin-&gt;Roles</em></p>\n<p><img alt data-src=\"/uploads/laravel/admin/add_roles.jpg\"></p>\n<h3 id=\"添加管理员\"><a href=\"#添加管理员\" class=\"headerlink\" title=\"添加管理员\"></a>添加管理员</h3><p><em>Admin-&gt;Users</em></p>\n<p><img alt data-src=\"/uploads/laravel/admin/add_users.jpg\"></p>\n<h2 id=\"Errors\"><a href=\"#Errors\" class=\"headerlink\" title=\"Errors\"></a>Errors</h2><h3 id=\"图片不显示\"><a href=\"#图片不显示\" class=\"headerlink\" title=\"图片不显示\"></a>图片不显示</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan storage:link</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Field-type-editor-does-not-exist\"><a href=\"#Field-type-editor-does-not-exist\" class=\"headerlink\" title=\"Field type [editor] does not exist.\"></a>Field type [editor] does not exist.</h3><p>V1.7.0之后，富文本编辑器被移除，需要手动安装扩展</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ composer require jxlwqq/quill</span><br><span class=\"line\">$ php artisan vendor:publish --tag=laravel-admin-quill</span><br></pre></td></tr></table></figure>\n\n<p><em>config/admin.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'extensions'</span> =&gt; [</span><br><span class=\"line\">    <span class=\"string\">'quill'</span> =&gt; [</span><br><span class=\"line\">        <span class=\"comment\">// If the value is set to false, this extension will be disabled</span></span><br><span class=\"line\">        <span class=\"string\">'enable'</span> =&gt; <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        <span class=\"string\">'config'</span> =&gt; [</span><br><span class=\"line\">            <span class=\"string\">'modules'</span> =&gt; [</span><br><span class=\"line\">                <span class=\"string\">'syntax'</span> =&gt; <span class=\"keyword\">true</span>,</span><br><span class=\"line\">                <span class=\"string\">'toolbar'</span> =&gt;</span><br><span class=\"line\">                    [</span><br><span class=\"line\">                        [<span class=\"string\">'size'</span> =&gt; []],</span><br><span class=\"line\">                        [<span class=\"string\">'header'</span> =&gt; []],</span><br><span class=\"line\">                        <span class=\"string\">'bold'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'italic'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'underline'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'strike'</span>,</span><br><span class=\"line\">                        [<span class=\"string\">'script'</span> =&gt; <span class=\"string\">'super'</span>],</span><br><span class=\"line\">                        [<span class=\"string\">'script'</span> =&gt; <span class=\"string\">'sub'</span>],</span><br><span class=\"line\">                        [<span class=\"string\">'color'</span> =&gt; []],</span><br><span class=\"line\">                        [<span class=\"string\">'background'</span> =&gt; []],</span><br><span class=\"line\">                        <span class=\"string\">'blockquote'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'code-block'</span>,</span><br><span class=\"line\">                        [<span class=\"string\">'list'</span> =&gt; <span class=\"string\">'ordered'</span>],</span><br><span class=\"line\">                        [<span class=\"string\">'list'</span> =&gt; <span class=\"string\">'bullet'</span>],</span><br><span class=\"line\">                        [<span class=\"string\">'indent'</span> =&gt; <span class=\"string\">'-1'</span>],</span><br><span class=\"line\">                        [<span class=\"string\">'indent'</span> =&gt; <span class=\"string\">'+1'</span>],</span><br><span class=\"line\">                        <span class=\"string\">'direction'</span>,</span><br><span class=\"line\">                        [<span class=\"string\">'align'</span> =&gt; []],</span><br><span class=\"line\">                        <span class=\"string\">'link'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'image'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'video'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'formula'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'clean'</span></span><br><span class=\"line\">                    ],</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"string\">'theme'</span> =&gt; <span class=\"string\">'snow'</span>,</span><br><span class=\"line\">            <span class=\"string\">'height'</span> =&gt; <span class=\"string\">'200px'</span>,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>使用</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不再使用editor</span></span><br><span class=\"line\">$form-&gt;quill(<span class=\"string\">'description'</span>, <span class=\"string\">'商品描述'</span>)-&gt;rules(<span class=\"string\">'required'</span>);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"数据库备份\"><a href=\"#数据库备份\" class=\"headerlink\" title=\"数据库备份\"></a>数据库备份</h1><h2 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h2><h3 id=\"备份数据\"><a href=\"#备份数据\" class=\"headerlink\" title=\"备份数据\"></a>备份数据</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mysqldump -t peach admin_menu admin_permissions admin_role_menu admin_role_permissions admin_role_users admin_roles admin_user_permissions admin_users &gt; database/admin.sql</span><br></pre></td></tr></table></figure>\n\n<p>命令解析：</p>\n<ul>\n<li><code>-t</code> 选项代表不导出数据表结构，这些表的结构我们会通过 Laravel 的 migration 迁移文件来创建。</li>\n<li><code>peach</code> 代表我们要导出的数据库名称，后面则是要导出的表列表。</li>\n<li><code>&gt; database/admin.sql</code> 把导出的内容保存到 <code>database/admin.sql</code> 文件中。</li>\n</ul>\n<blockquote>\n<p>在线上执行 Mysql 命令时则需要在命令行里通过 -u 和 -p 参数指明账号密码，如： <code>mysqldump -uroot -p123456 peach &gt; database/admin.sql</code>。</p>\n</blockquote>\n<h3 id=\"恢复数据\"><a href=\"#恢复数据\" class=\"headerlink\" title=\"恢复数据\"></a>恢复数据</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mysql peach &lt; database/admin.sql</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SHELL\"><a href=\"#SHELL\" class=\"headerlink\" title=\"SHELL\"></a>SHELL</h2><h3 id=\"备份数据-1\"><a href=\"#备份数据-1\" class=\"headerlink\" title=\"备份数据\"></a>备份数据</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ touch backup_admin_db.sh</span><br></pre></td></tr></table></figure>\n\n<p><em>backup_admin_db.sh</em></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入 .env  环境变量</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> ./.env</span><br><span class=\"line\"><span class=\"comment\"># 要备份的表</span></span><br><span class=\"line\">tables=<span class=\"string\">\"admin_menu admin_permissions admin_role_menu admin_role_permissions admin_role_users admin_roles admin_user_permissions admin_users\"</span></span><br><span class=\"line\"><span class=\"comment\"># 执行备份</span></span><br><span class=\"line\">mysqldump --host=<span class=\"string\">\"<span class=\"variable\">$&#123;DB_HOST&#125;</span>\"</span> --port=<span class=\"variable\">$&#123;DB_PORT&#125;</span> --user=<span class=\"string\">\"<span class=\"variable\">$&#123;DB_USERNAME&#125;</span>\"</span> --password=<span class=\"string\">\"<span class=\"variable\">$&#123;DB_PASSWORD&#125;</span>\"</span> -t <span class=\"variable\">$&#123;DB_DATABASE&#125;</span> <span class=\"variable\">$&#123;tables&#125;</span> &gt; database/admin.sql</span><br></pre></td></tr></table></figure>\n\n<p>执行权限</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod +x back_admin_db.sh</span><br></pre></td></tr></table></figure>\n\n<p>执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ./back_admin_db.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"恢复数据-1\"><a href=\"#恢复数据-1\" class=\"headerlink\" title=\"恢复数据\"></a>恢复数据</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ touch recovery_admin_db.sh</span><br></pre></td></tr></table></figure>\n\n<p><em>recovery_admin_db.sh</em></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入 .env  环境变量</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> ./.env</span><br><span class=\"line\"><span class=\"comment\"># 执行备份</span></span><br><span class=\"line\">mysql <span class=\"variable\">$&#123;DB_DATABASE&#125;</span> &lt; database/admin.sql</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h1><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYXJhdmVsLWFkbWluLm9yZy9kb2NzL3poLw==\" title=\"https://laravel-admin.org/docs/zh/\">官方文档<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Laravel"]},{"title":"Laravel 授权策略『Policy』","url":"/laravel/policy/","content":"<h2 id=\"创建策略\"><a href=\"#创建策略\" class=\"headerlink\" title=\"创建策略\"></a>创建策略</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan make:policy UserPolicy --model=Models/User</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"注册策略\"><a href=\"#注册策略\" class=\"headerlink\" title=\"注册策略\"></a>注册策略</h2><h3 id=\"自动注册\"><a href=\"#自动注册\" class=\"headerlink\" title=\"自动注册\"></a>自动注册</h3><p>5.8版本之后可使用自动注册，注意：显式映射的任何策略都将优先于自动发现策略。</p>\n<p>自动授权假设模型文件存放在 <code>app</code> 目录下，如果更改了模型文件的存放目录，还需要进行下面的操作来自定义自动授权注册的规则。</p>\n<p><em>app/Providers/AuthServiceProvider.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;registerPolicies();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用 Gate::guessPolicyNamesUsing 方法来自定义策略文件的寻找逻辑</span></span><br><span class=\"line\">    Gate::guessPolicyNamesUsing(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($class)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// class_basename 是 Laravel 提供的一个辅助函数，可以获取类的简短名称</span></span><br><span class=\"line\">        <span class=\"comment\">// 例如传入 \\App\\Models\\User 会返回 User</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'\\\\App\\\\Policies\\\\'</span>.class_basename($class).<span class=\"string\">'Policy'</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"手动注册\"><a href=\"#手动注册\" class=\"headerlink\" title=\"手动注册\"></a>手动注册</h3><p><em>app/Providers/AuthServiceProvider.php</em></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> $policies = [</span><br><span class=\"line\">    <span class=\"string\">'App\\Model'</span> =&gt; <span class=\"string\">'App\\Policies\\ModelPolicy'</span>,</span><br><span class=\"line\">    \\App\\Models\\User::class  =&gt; \\App\\Policies\\UserPolicy::class,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h2 id=\"编写策略\"><a href=\"#编写策略\" class=\"headerlink\" title=\"编写策略\"></a>编写策略</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span><span class=\"params\">(User $currentUser, User $user)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// true 则通过授权，false 则抛出403异常</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> $currentUser-&gt;id === $user-&gt;id;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>无需检查 <code>$currentUser</code> 是不是 <code>NULL</code>，未登录用户自动返回 <code>false</code>。</p>\n<p>默认情况下无需传递当前登录用户，框架会自动加载当前登录用户。</p>\n<h2 id=\"使用策略\"><a href=\"#使用策略\" class=\"headerlink\" title=\"使用策略\"></a>使用策略</h2><h3 id=\"控制器\"><a href=\"#控制器\" class=\"headerlink\" title=\"控制器\"></a>控制器</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">edit</span><span class=\"params\">(User $user)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// update 为授权方法的名称，$user 为进行授权验证的数据，是授权方法的第二个参数</span></span><br><span class=\"line\">    <span class=\"comment\">// 无权限时抛出 HttpException</span></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;authorize(<span class=\"string\">'update'</span>, $user);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> view(<span class=\"string\">'users.edit'</span>, compact(<span class=\"string\">'user'</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@can(<span class=\"string\">'update'</span>, $user)</span><br><span class=\"line\">...</span><br><span class=\"line\">@endcan</span><br></pre></td></tr></table></figure>\n\n","categories":["Laravel"]},{"title":"给 Bash 命令设置别名","url":"/bash/alias/","content":"<blockquote>\n<p>开发过程中经常会输入命令行来操作，有一些常用的命令可以通过简单的配置来简化输入。</p>\n</blockquote>\n<p>在不同的系统中配置文件不同：</p>\n<ul>\n<li>Windows： <em>~/.bash_profile</em></li>\n<li>Linux： <em>~/.bashrc</em>  或 <em>~/.zshrc</em></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 注意：『=』号前后不能加空格</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> chishui=<span class=\"string\">'ssh chishui@example.com -p 22'</span></span><br></pre></td></tr></table></figure>\n\n","categories":["Bash"],"tags":["Bash","别名"]},{"title":"Bash 任务处理","url":"/bash/jobs/","content":"<h2 id=\"查看列表\"><a href=\"#查看列表\" class=\"headerlink\" title=\"查看列表\"></a>查看列表</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">jobs</span> -l <span class=\"comment\"># 返回任务编号和进程号</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"后台运行任务\"><a href=\"#后台运行任务\" class=\"headerlink\" title=\"后台运行任务\"></a>后台运行任务</h2><h3 id=\"运行中\"><a href=\"#运行中\" class=\"headerlink\" title=\"运行中\"></a>运行中</h3><p>如果任务尚未运行，直接在命令最后加 <code>&amp;</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm run watch-poll &amp;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"未运行\"><a href=\"#未运行\" class=\"headerlink\" title=\"未运行\"></a>未运行</h3><p>如果任务已运行，则先挂起任务：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">bg</span> %n <span class=\"comment\"># %n 为任务编号</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"恢复任务到前台\"><a href=\"#恢复任务到前台\" class=\"headerlink\" title=\"恢复任务到前台\"></a>恢复任务到前台</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">fg</span> %n <span class=\"comment\"># %n 为任务编号</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"挂起任务\"><a href=\"#挂起任务\" class=\"headerlink\" title=\"挂起任务\"></a>挂起任务</h2><p><code>CTRL + Z</code></p>\n<h2 id=\"停止任务\"><a href=\"#停止任务\" class=\"headerlink\" title=\"停止任务\"></a>停止任务</h2><p><code>CTRL + C</code></p>\n","categories":["Bash"],"tags":["Bash","任务"]},{"title":"Bash 文件处理","url":"/bash/operate-files/","content":"<h2 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h2><h3 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ touch filename</span><br></pre></td></tr></table></figure>\n\n<p><code>touch</code> 也可用于更新文件时间。</p>\n<h3 id=\"文件夹\"><a href=\"#文件夹\" class=\"headerlink\" title=\"文件夹\"></a>文件夹</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -p --parents 需要时创建上层目录 如已存在则不当做错误</span></span><br><span class=\"line\">$ mkdir -p dir1/dir2/dir3</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"打开\"><a href=\"#打开\" class=\"headerlink\" title=\"打开\"></a>打开</h2><h3 id=\"当前目录\"><a href=\"#当前目录\" class=\"headerlink\" title=\"当前目录\"></a>当前目录</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ explorer .</span><br></pre></td></tr></table></figure>\n\n","categories":["Bash"],"tags":["Bash","文件处理"]},{"title":"Laravel 路由设计『Route』","url":"/laravel/route/","content":"<h2 id=\"查看列表\"><a href=\"#查看列表\" class=\"headerlink\" title=\"查看列表\"></a>查看列表</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ php artisan route:list</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生成URL\"><a href=\"#生成URL\" class=\"headerlink\" title=\"生成URL\"></a>生成URL</h2><h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">route(<span class=\"string\">'users.index'</span>); <span class=\"comment\">// http://peach.test/users</span></span><br><span class=\"line\">route(<span class=\"string\">'users.show'</span>, [<span class=\"string\">'id'</span> =&gt; <span class=\"number\">1</span>]); <span class=\"comment\">// http://peach.test/users?id=1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> redirect()-&gt;route(<span class=\"string\">'users.index'</span>);</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h2 id=\"定义路由\"><a href=\"#定义路由\" class=\"headerlink\" title=\"定义路由\"></a>定义路由</h2><h3 id=\"重定向-1\"><a href=\"#重定向-1\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::redirect(<span class=\"string\">'/'</span>, <span class=\"string\">'path'</span>)-&gt;name(<span class=\"string\">'root'</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"回退路由\"><a href=\"#回退路由\" class=\"headerlink\" title=\"回退路由\"></a>回退路由</h3><p>回退路由应始终是你应用程序注册的最后一个路由。 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::fallback(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"定义路由组\"><a href=\"#定义路由组\" class=\"headerlink\" title=\"定义路由组\"></a>定义路由组</h2><h3 id=\"路由组\"><a href=\"#路由组\" class=\"headerlink\" title=\"路由组\"></a>路由组</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::group([<span class=\"string\">'middleware'</span> =&gt; [<span class=\"string\">'auth'</span>, <span class=\"string\">'second'</span>]], <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 路由</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"中间件\"><a href=\"#中间件\" class=\"headerlink\" title=\"中间件\"></a>中间件</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::middleware([<span class=\"string\">'first'</span>, <span class=\"string\">'second'</span>])-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Route::get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 使用 first 和 second 中间件</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    Route::get(<span class=\"string\">'user/profile'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 使用 first 和 second 中间件</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::namespace(<span class=\"string\">'Admin'</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 在 「App\\Http\\Controllers\\Admin」 命名空间下的控制器</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"子域名路由\"><a href=\"#子域名路由\" class=\"headerlink\" title=\"子域名路由\"></a>子域名路由</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::domain(<span class=\"string\">'&#123;account&#125;.myapp.com'</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Route::get(<span class=\"string\">'user/&#123;id&#125;'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($account, $id)</span> </span>&#123;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"路由前缀\"><a href=\"#路由前缀\" class=\"headerlink\" title=\"路由前缀\"></a>路由前缀</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::prefix(<span class=\"string\">'admin'</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Route::get(<span class=\"string\">'users'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 匹配包含 「/admin/users」 的 URL</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"路由名称前缀\"><a href=\"#路由名称前缀\" class=\"headerlink\" title=\"路由名称前缀\"></a>路由名称前缀</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::name(<span class=\"string\">'admin.'</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Route::get(<span class=\"string\">'users'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 指定路由名为 「admin.users」...</span></span><br><span class=\"line\">    &#125;)-&gt;name(<span class=\"string\">'users'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"访问控制\"><a href=\"#访问控制\" class=\"headerlink\" title=\"访问控制\"></a>访问控制</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::middleware(<span class=\"string\">'auth:api'</span>, <span class=\"string\">'throttle:60,1'</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Route::get(<span class=\"string\">'/user'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 在这里定义的路由每分钟最多 60 次请求</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"动态访问控制\"><a href=\"#动态访问控制\" class=\"headerlink\" title=\"动态访问控制\"></a>动态访问控制</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 可以根据已验证的 `User` 模型的属性，指定动态请求的最大值</span></span><br><span class=\"line\"><span class=\"comment\">// 如果你的 User 模型包含 rate_limit 属性，则可以将属性名称传递给 throttle 中间件</span></span><br><span class=\"line\">Route::middleware(<span class=\"string\">'auth:api'</span>, <span class=\"string\">'throttle:rate_limit,1'</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Route::get(<span class=\"string\">'/user'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 在这里定义的路由每分钟最多 rate_limit 次请求</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"独立访客和认证用户的访问控制\"><a href=\"#独立访客和认证用户的访问控制\" class=\"headerlink\" title=\"独立访客和认证用户的访问控制\"></a>独立访客和认证用户的访问控制</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::middleware(<span class=\"string\">'throttle:10|60,1'</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 访客每分钟最多 10 次请求</span></span><br><span class=\"line\">    <span class=\"comment\">// 认证用户每分钟最多 60 次请求</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>可与动态访问控制结合</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::middleware(<span class=\"string\">'auth:api'</span>, <span class=\"string\">'throttle:10|rate_limit,1'</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Route::get(<span class=\"string\">'/user'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"表单方法伪造\"><a href=\"#表单方法伪造\" class=\"headerlink\" title=\"表单方法伪造\"></a>表单方法伪造</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@method(<span class=\"string\">'PUT'</span>)</span><br><span class=\"line\">@csrf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"获取当前路由\"><a href=\"#获取当前路由\" class=\"headerlink\" title=\"获取当前路由\"></a>获取当前路由</h2><h3 id=\"全部信息\"><a href=\"#全部信息\" class=\"headerlink\" title=\"全部信息\"></a>全部信息</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::current();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"路由名称\"><a href=\"#路由名称\" class=\"headerlink\" title=\"路由名称\"></a>路由名称</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::currentRouteName(); <span class=\"comment\">// users.show</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"完整方法名\"><a href=\"#完整方法名\" class=\"headerlink\" title=\"完整方法名\"></a>完整方法名</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::currentRouteAction(); <span class=\"comment\">// App\\Http\\Controllers\\QuestController@show</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"存在判断\"><a href=\"#存在判断\" class=\"headerlink\" title=\"存在判断\"></a>存在判断</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">Route::has(<span class=\"string\">'register'</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmt1LmNvbS9kb2NzL2xhcmF2ZWwvNi54L3JvdXRpbmcvNTEzNQ==\" title=\"https://learnku.com/docs/laravel/6.x/routing/5135\">中文文档<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","categories":["Laravel"]},{"title":"Git 初始化配置","url":"/git/init/","content":"<h2 id=\"用户-amp-邮箱\"><a href=\"#用户-amp-邮箱\" class=\"headerlink\" title=\"用户&amp;邮箱\"></a>用户&amp;邮箱</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name <span class=\"string\">\"name\"</span></span><br><span class=\"line\">$ git config --global user.email <span class=\"string\">\"email@example.com\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SSH密钥\"><a href=\"#SSH密钥\" class=\"headerlink\" title=\"SSH密钥\"></a>SSH密钥</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一路回车</span></span><br><span class=\"line\">$ ssh-keygen -t rsa -C <span class=\"string\">\"email@example.com\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"推送模式\"><a href=\"#推送模式\" class=\"headerlink\" title=\"推送模式\"></a>推送模式</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 当没有特定分支时自动使用当前分支</span></span><br><span class=\"line\">$ git config --global push.default simple</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代理配置\"><a href=\"#代理配置\" class=\"headerlink\" title=\"代理配置\"></a>代理配置</h2><ul>\n<li><a href=\"/git/proxy/\">Git 代理配置</a></li>\n</ul>\n","categories":["Git"]},{"title":"Laravel Homestead 开发环境搭建","url":"/laravel/homestead/","content":"<h2 id=\"安装虚拟机\"><a href=\"#安装虚拟机\" class=\"headerlink\" title=\"安装虚拟机\"></a>安装虚拟机</h2><h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlydHVhbGJveC5vcmcvd2lraS9Eb3dubG9hZHM=\" title=\"https://www.virtualbox.org/wiki/Downloads\">VirtualBox<i class=\"fa fa-external-link\"></i></span>、 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmFncmFudHVwLmNvbS9kb3dubG9hZHMuaHRtbA==\" title=\"https://www.vagrantup.com/downloads.html\">Vagrant<i class=\"fa fa-external-link\"></i></span></p>\n<h3 id=\"Manjaro\"><a href=\"#Manjaro\" class=\"headerlink\" title=\"Manjaro\"></a>Manjaro</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ uname -r <span class=\"comment\"># 查看内核版本</span></span><br><span class=\"line\">$ yay -S virtualbox <span class=\"comment\"># 安装相应内核版本</span></span><br><span class=\"line\">$ yay -S vagrant</span><br></pre></td></tr></table></figure>\n\n<p>安装完重启。</p>\n<h2 id=\"安装-Homestead\"><a href=\"#安装-Homestead\" class=\"headerlink\" title=\"安装 Homestead\"></a>安装 Homestead</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant box add laravel/homestead\t<span class=\"comment\"># 执行命令 查看下载链接 使用下载工具下载</span></span><br></pre></td></tr></table></figure>\n\n<p>编写 <code>metadata.json</code> 文件，和 <code>virtualbox.box</code> 放同一目录，<strong>使用非中文路径</strong>。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"laravel/homestead\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"versions\"</span>: </span><br><span class=\"line\">    [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"6.4.0\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"providers\"</span>: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"virtualbox\"</span>,</span><br><span class=\"line\">                  <span class=\"attr\">\"url\"</span>: <span class=\"string\">\"virtualbox.box\"</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>导入盒子</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant box add metadata.json</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h2 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h2><p>下载管理脚本 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xhcmF2ZWwvaG9tZXN0ZWFkL3JlbGVhc2Vz\" title=\"https://github.com/laravel/homestead/releases\">查看最新版本<i class=\"fa fa-external-link\"></i></span></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/laravel/homestead.git ~/Homestead</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/Homestead</span><br><span class=\"line\">$ git checkout v7.8.0 <span class=\"comment\"># 切换最新分支</span></span><br><span class=\"line\">$ bash init.sh <span class=\"comment\"># 初始化环境参数</span></span><br></pre></td></tr></table></figure>\n\n<p>创建<code>~/Code</code>文件夹</p>\n<p>配置<code>Homestead.yaml</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">ip: &quot;192.168.0.111&quot;</span><br><span class=\"line\">memory: 2048</span><br><span class=\"line\">cpus: 2</span><br><span class=\"line\">provider: virtualbox</span><br><span class=\"line\"></span><br><span class=\"line\">authorize: ~/.ssh/id_rsa.pub</span><br><span class=\"line\"></span><br><span class=\"line\">keys:</span><br><span class=\"line\">    - ~/.ssh/id_rsa</span><br><span class=\"line\">    - ~/.ssh/id_rsa.pub</span><br><span class=\"line\"></span><br><span class=\"line\">folders:</span><br><span class=\"line\">    - map: ~/Code</span><br><span class=\"line\">      to: /home/vagrant/Code</span><br><span class=\"line\"></span><br><span class=\"line\">sites:</span><br><span class=\"line\">    - map: laravel.test</span><br><span class=\"line\">      to: /home/vagrant/Code/laravel/public</span><br><span class=\"line\"></span><br><span class=\"line\">databases:</span><br><span class=\"line\">    - laravel</span><br><span class=\"line\"></span><br><span class=\"line\">features:</span><br><span class=\"line\">    - mariadb: false</span><br><span class=\"line\">    - ohmyzsh: false</span><br><span class=\"line\">    - webdriver: false</span><br><span class=\"line\"></span><br><span class=\"line\"># ports:</span><br><span class=\"line\">#     - send: 50000</span><br><span class=\"line\">#       to: 5000</span><br><span class=\"line\">#     - send: 7777</span><br><span class=\"line\">#       to: 777</span><br><span class=\"line\">#       protocol: udp</span><br><span class=\"line\"></span><br><span class=\"line\"># variables:</span><br><span class=\"line\">#     - key: APP_ENV</span><br><span class=\"line\">#       value: local</span><br></pre></td></tr></table></figure>\n\n<p>启动&amp;登录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant up &amp;&amp; vagrant ssh</span><br></pre></td></tr></table></figure>\n\n<p>切换国内镜像</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br><span class=\"line\">$ yarn config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br><span class=\"line\">$ composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>\n\n<p>配置git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name <span class=\"string\">\"name\"</span></span><br><span class=\"line\">$ git config --global user.email <span class=\"string\">\"email@example.com\"</span></span><br><span class=\"line\">$ git config --global push.default simple</span><br></pre></td></tr></table></figure>\n\n<p>添加<code>ssh-agent</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">eval</span> <span class=\"string\">\"<span class=\"variable\">$(ssh-agent -s)</span>\"</span></span><br><span class=\"line\">$ ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"操作指令\"><a href=\"#操作指令\" class=\"headerlink\" title=\"操作指令\"></a>操作指令</h2><h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant up</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant ssh</span><br><span class=\"line\">$ ssh vagrant@127.0.0.1\t-p 2222 <span class=\"comment\"># 如果上面登陆失败, 还可以通过此方式</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant reload</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关闭\"><a href=\"#关闭\" class=\"headerlink\" title=\"关闭\"></a>关闭</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant halt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"刷新配置\"><a href=\"#刷新配置\" class=\"headerlink\" title=\"刷新配置\"></a>刷新配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant reload --provision</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"容器操作\"><a href=\"#容器操作\" class=\"headerlink\" title=\"容器操作\"></a>容器操作</h2><h3 id=\"查看列表\"><a href=\"#查看列表\" class=\"headerlink\" title=\"查看列表\"></a>查看列表</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant box list</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除容器\"><a href=\"#删除容器\" class=\"headerlink\" title=\"删除容器\"></a>删除容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant box remove boxname</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除虚拟机\"><a href=\"#删除虚拟机\" class=\"headerlink\" title=\"删除虚拟机\"></a>删除虚拟机</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant destroy</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"局域网访问\"><a href=\"#局域网访问\" class=\"headerlink\" title=\"局域网访问\"></a>局域网访问</h2><p>修改 <code>Homestead.yaml</code> 中 <code>ip</code> 参数为当前局域网同网段</p>\n<p>修改 <code>~/Homestead/scripts/homestead.rb</code> 中 <code>private_network</code> 参数为 <code>public_network</code></p>\n<figure class=\"highlight rb\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Configure A Private Network IP</span></span><br><span class=\"line\">...</span><br><span class=\"line\">config.vm.network <span class=\"symbol\">:public_network</span>, <span class=\"symbol\">ip:</span> settings[<span class=\"string\">'ip'</span>] <span class=\"params\">||</span>= <span class=\"string\">'192.168.10.10'</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Windows优化\"><a href=\"#Windows优化\" class=\"headerlink\" title=\"Windows优化\"></a>Windows优化</h2><h3 id=\"NFS模式\"><a href=\"#NFS模式\" class=\"headerlink\" title=\"NFS模式\"></a>NFS模式</h3><p>安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant plugin install vagrant-winnfsd</span><br></pre></td></tr></table></figure>\n\n<p>修改文件<code>homestead/scripts/homestead.rb</code>, 将</p>\n<figure class=\"highlight rb\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Register All Of The Configured Shared Folders</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> settings.<span class=\"keyword\">include</span>? <span class=\"string\">'folders'</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p>替换为</p>\n<figure class=\"highlight rb\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Register All Of The Configured Shared Folders</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> settings.<span class=\"keyword\">include</span>? <span class=\"string\">'folders'</span></span><br><span class=\"line\">    settings[<span class=\"string\">\"folders\"</span>].sort! &#123; <span class=\"params\">|a,b|</span> a[<span class=\"string\">\"map\"</span>].length &lt;=&gt; b[<span class=\"string\">\"map\"</span>].length &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    settings[<span class=\"string\">\"folders\"</span>].each <span class=\"keyword\">do</span> <span class=\"params\">|folder|</span></span><br><span class=\"line\">        config.vm.synced_folder folder[<span class=\"string\">\"map\"</span>], folder[<span class=\"string\">\"to\"</span>], </span><br><span class=\"line\">        <span class=\"symbol\">id:</span> folder[<span class=\"string\">\"map\"</span>],</span><br><span class=\"line\">        <span class=\"symbol\">:nfs</span> =&gt; <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"symbol\">:mount_options</span> =&gt; [<span class=\"string\">'nolock,vers=3,udp,noatime'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p>修改文件<code>Homestead.yaml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">folders:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">map:</span> <span class=\"string\">~/Code</span></span><br><span class=\"line\">      <span class=\"attr\">to:</span> <span class=\"string\">/home/vagrant/Code</span></span><br><span class=\"line\">      <span class=\"attr\">type:</span> <span class=\"string\">nfs</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SMB模式\"><a href=\"#SMB模式\" class=\"headerlink\" title=\"SMB模式\"></a>SMB模式</h3><p>修改文件<code>Vagrantfile</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">Vagrant.configure(VAGRANTFILE_API_VERSION)</span> <span class=\"string\">do</span> <span class=\"string\">|config|</span></span><br><span class=\"line\"><span class=\"comment\">#SMB</span></span><br><span class=\"line\"><span class=\"string\">config.vm.synced_folder</span> <span class=\"string\">\".\"</span><span class=\"string\">,</span> <span class=\"string\">\"/vagrant\"</span><span class=\"string\">,</span> <span class=\"attr\">type:</span> <span class=\"string\">\"smb\"</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">smb_username:</span> <span class=\"string\">\"\"</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">smb_password:</span> <span class=\"string\">\"\"</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">owner:</span> <span class=\"string\">\"vagrant\"</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">group:</span> <span class=\"string\">\"root\"</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<p>修改文件<code>Homestead.yaml</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">folders:</span><br><span class=\"line\">    - map: ~/Code</span><br><span class=\"line\">        to: /home/vagrant/Code</span><br><span class=\"line\">        <span class=\"built_in\">type</span>: smb</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>修改<code>nginx</code>参数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># FILE: /etc/nginx/nginx.conf</span><br><span class=\"line\"># 需要 sudo 权限</span><br><span class=\"line\">sendfile: off</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"科学上网\"><a href=\"#科学上网\" class=\"headerlink\" title=\"科学上网\"></a>科学上网</h2><p>安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vagrant plugin install vagrant-proxyconf</span><br></pre></td></tr></table></figure>\n\n<p>SSR客户端 -&gt; 选项设置 -&gt; 允许来自局域网的链接</p>\n<p>修改文件<code>Vagrantfile</code>，代理ip为主机IPv4地址</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">Vagrant.has_plugin?(\"vagrant-proxyconf\")</span></span><br><span class=\"line\">\t<span class=\"string\">config.proxy.http</span> <span class=\"string\">=</span> <span class=\"string\">\"http://192.168.1.112:1080/\"</span></span><br><span class=\"line\">\t<span class=\"string\">config.proxy.https</span> <span class=\"string\">=</span> <span class=\"string\">\"http://192.168.1.112:1080/\"</span></span><br><span class=\"line\">\t<span class=\"string\">config.proxy.no_proxy</span> <span class=\"string\">=</span> <span class=\"string\">\"localhost,127.0.0.1\"</span></span><br><span class=\"line\"><span class=\"string\">end</span></span><br></pre></td></tr></table></figure>\n\n<p>测试连接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl -v  <span class=\"string\">\"www.google.com\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"延伸阅读\"><a href=\"#延伸阅读\" class=\"headerlink\" title=\"延伸阅读\"></a>延伸阅读</h2><ul>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmt1LmNvbS9kb2NzL2xhcmF2ZWwtZGV2ZWxvcG1lbnQtZW52aXJvbm1lbnQvNS44L2RldmVsb3BtZW50LWVudmlyb25tZW50LXdpbmRvd3MvNDM3Mw==\" title=\"https://learnku.com/docs/laravel-development-environment/5.8/development-environment-windows/4373\">开发环境搭建 - Windows<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmt1LmNvbS9kb2NzL2xhcmF2ZWwtZGV2ZWxvcG1lbnQtZW52aXJvbm1lbnQvNS44L3VwZ3JhZGUtaG9tZXN0ZWFkLWJveC80Mzc2\" title=\"https://learnku.com/docs/laravel-development-environment/5.8/upgrade-homestead-box/4376\">如何升级 Homestead 盒子？<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9kYXZlbmtpbi9wL3ZhZ3JhbnQtdmlydHVhbGJveC5odG1s\" title=\"http://www.cnblogs.com/davenkin/p/vagrant-virtualbox.html\">Vagrant入门<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYXJhdmVsLmNvbS9kb2NzLzUuNy9ob21lc3RlYWQ=\" title=\"https://laravel.com/docs/5.7/homestead\">Homestead 官方文档<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYXJhdmVsLWNoaW5hLm9yZy90b3BpY3MvMjk5MC9sYXJhdmVsLWhvbWVzdGVhZC1lbnZpcm9ubWVudC10by1idWlsZC1hLXZhcmlldHktb2YtcGl0cw==\" title=\"https://laravel-china.org/topics/2990/laravel-homestead-environment-to-build-a-variety-of-pits\">Laravel-Homestead 环境搭建的各种坑<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYXJhdmVsLWNoaW5hLm9yZy90b3BpY3MvNDc5Ni9zc2gtYXV0aC1tZXRob2QtcHJpdmF0ZS1rZXktc29sdXRpb24tc3VtbWFyeS13aGVuLWhvbWVzdGVhZC1zdGFydHM=\" title=\"https://laravel-china.org/topics/4796/ssh-auth-method-private-key-solution-summary-when-homestead-starts\">Homestead 安装问题汇总<i class=\"fa fa-external-link\"></i></span></p>\n</li>\n</ul>\n","categories":["Laravel"]},{"title":"我今年，二十七八岁","url":"/diaries/this-year-i-am-27-28-years-old/","content":"<blockquote>\n<p>2017过去了，我很怀念它。</p>\n</blockquote>\n<h2 id=\"又到年底咯\"><a href=\"#又到年底咯\" class=\"headerlink\" title=\"又到年底咯\"></a>又到年底咯</h2><p>不知不觉又到了年底，回想一下年初给自己制定的学习计划基本上没动，不禁想笑。</p>\n<p>想起来去年年底给自己定的计划，信誓旦旦的想学 Node.js ，想学 Vue.js ，然而并没有什么卵用，都是虎头蛇尾，开始几天兴致勃勃，一个礼拜之后就萎了。</p>\n<p>每次临到周末礼拜黄金周之类的节假日之前，也都是摩拳擦掌的计划着在家学这学那，到了当天就躺床上看电视了。</p>\n<p>总是这样，真想呼死自己。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"我的2017\"><a href=\"#我的2017\" class=\"headerlink\" title=\"我的2017\"></a>我的2017</h2><p>我的2017，回想起来并没有得到什么，一如既往的颓懒。</p>\n<p>今年里唯一让我满意的也就是真正意义的独立自主的出去玩了一圈，看了看发姐的城市，还去发姐家楼下留个念，23333。</p>\n<p>……</p>\n<p>想了一圈，似乎没有什么值得写的地方了。</p>\n<p>学习，半途而废；</p>\n<p>工作，一切照旧；</p>\n<p>感情，汪汪汪汪。</p>\n<p>这么一想，今年似乎是白过了，除了几张照片意外啥玩意儿也没留下，还他妈有点失落是怎么回事。</p>\n<p>啊，感谢一下ZWS，挺可爱的一个小妹子，感谢她今年和我说了不少话。</p>\n<h2 id=\"2018\"><a href=\"#2018\" class=\"headerlink\" title=\"2018\"></a>2018</h2><p>现在是2017年12月29日，本年度的最后一个工作日，虽然我真的是没有什么计划性，或者说不遵循既定的计划，但还是要给自己定一个来年的，对自己的想法，希望明年的今天，写明年的总结的时候，不要像这篇文字一样空洞。</p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>学会 Laravel ，熟练掌握 Mysql ， 熟练使用 javascript ，至少学会一种前端框架，计划是 Vue.js ，经常关注技术的发展，微博、知乎上收藏的技术文章要看，收藏完就放那是怎么回事。</p>\n<p>坚持写学习笔记。</p>\n<p>更改自己的打字习惯。</p>\n<h3 id=\"工作\"><a href=\"#工作\" class=\"headerlink\" title=\"工作\"></a>工作</h3><p>希望能有一个能拿得出手的项目，一个就行。</p>\n<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>更加自律。</p>\n<p>健身房要坚持去，过了春节要开始减脂。跳绳，跑步，Focus T25，HITT都行。希望明年腹肌能明显，胸肌上一个维度，力量能上一个层次，身体像个男人该有的样子。</p>\n<p>作息要规律，起床这个问题解决一下。</p>\n<p>再出去旅行一次。</p>\n<h3 id=\"感情\"><a href=\"#感情\" class=\"headerlink\" title=\"感情\"></a>感情</h3><p>？？？</p>\n<p>随缘吧。</p>\n<h2 id=\"完\"><a href=\"#完\" class=\"headerlink\" title=\"完\"></a>完</h2><p>行吧，就这样了。希望明年的最后一个工作日看到上面的这些计划的时候不会觉得羞愧。</p>\n<h2 id=\"续\"><a href=\"#续\" class=\"headerlink\" title=\"续\"></a>续</h2><h3 id=\"2018-1-10\"><a href=\"#2018-1-10\" class=\"headerlink\" title=\"2018.1.10\"></a>2018.1.10</h3><p>再加一条，练字！</p>\n","categories":["Diaries"],"tags":["年度总结"]},{"title":"分类","url":"/categories/index.html","content":""},{"title":"收藏夹","url":"/favorites/index.html","content":"<h1 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h1><h2 id=\"图片处理\"><a href=\"#图片处理\" class=\"headerlink\" title=\"图片处理\"></a>图片处理</h2><h3 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5zbmlwYXN0ZS5jb20v\" title=\"https://zh.snipaste.com/\">Snipaste<i class=\"fa fa-external-link\"></i></span></p>\n<h3 id=\"看图\"><a href=\"#看图\" class=\"headerlink\" title=\"看图\"></a>看图</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaXJmYW52aWV3LmNvbS8=\" title=\"https://www.irfanview.com/\">IrfanView<i class=\"fa fa-external-link\"></i></span></p>\n<h2 id=\"辅助工具\"><a href=\"#辅助工具\" class=\"headerlink\" title=\"辅助工具\"></a>辅助工具</h2><h3 id=\"本地搜索\"><a href=\"#本地搜索\" class=\"headerlink\" title=\"本地搜索\"></a>本地搜索</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudm9pZHRvb2xzLmNvbS96aC1jbi8=\" title=\"https://www.voidtools.com/zh-cn/\">Everything<i class=\"fa fa-external-link\"></i></span></p>\n<h1 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h1><h2 id=\"健身\"><a href=\"#健身\" class=\"headerlink\" title=\"健身\"></a>健身</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNjbGV3aWtpLm9yZy8=\" title=\"https://musclewiki.org/\">MuscleWiki<i class=\"fa fa-external-link\"></i></span></p>\n"},{"title":"标签","url":"/tags/index.html","content":""}]